{"version":3,"file":"static/js/204.4b1ab373.chunk.js","mappings":"4OAaA,EAVoB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACrB,OACE,gBACEC,UAAU,cACVC,MAAO,CAAEC,eAAe,GAAD,OAAKH,EAAL,OACvBI,QAAS,SAACC,GAAD,OAAOA,EAAEC,iBAAT,GAGd,E,2DCQKC,GAAcC,EAAAA,EAAAA,OAAK,kBAAM,sCAAN,IAkWzB,MAhWA,YAqBG,EApBDC,cAoBE,IAnBFC,EAmBC,EAnBDA,aACAC,EAkBC,EAlBDA,aACAC,EAiBC,EAjBDA,UACAC,EAgBC,EAhBDA,aACAC,EAeC,EAfDA,eACAC,EAcC,EAdDA,eACAC,EAaC,EAbDA,cACAC,EAYC,EAZDA,UACAC,EAWC,EAXDA,gBACAC,EAUC,EAVDA,gBACAC,EASC,EATDA,SACAC,EAQC,EARDA,iBACAC,EAOC,EAPDA,gBACAC,EAMC,EANDA,QACAC,EAKC,EALDA,UACAC,EAIC,EAJDA,UACAC,EAGC,EAHDA,aACAC,EAEC,EAFDA,kBACAC,EACC,EADDA,WAEA,GAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAUC,kCAChB,GAA8CJ,EAAAA,EAAAA,UAAS,IAAvD,eAAOK,EAAP,KAAwBC,EAAxB,KACA,GAAkDN,EAAAA,EAAAA,WAAS,GAA3D,eAAOO,EAAP,KAA0BC,EAA1B,KACA,GAA4CR,EAAAA,EAAAA,WAAS,GAArD,eAAOS,EAAP,KAAuBC,EAAvB,KACA,GAA8CV,EAAAA,EAAAA,WAAS,GAAvD,eAAOW,GAAP,KAAwBC,GAAxB,KAEMC,GAAa/B,EAAa,GAAG,GAC7BgC,GAAYhC,EAAa,GAAG,GAE5BiC,GAAY,yCAAG,WAAOC,GAAP,+EACdnC,EADc,uBAEjBqB,EAAe,MACfT,EACE,QACA,uDALe,0CAUjBmB,IAAmB,GAVF,SAWKK,IAAAA,IAAA,UAAad,EAAb,sBAA0C,CAC9De,OAAQ,CACNF,KAAMA,EAAKG,KACXC,MAAOvC,EACPsB,QAAAA,KAfa,UAkBW,QAPtBkB,EAXW,QAkBLC,KAAKC,OAlBA,iBAmBfC,QAAQC,IAAIJ,EAAQC,MACpBV,IAAmB,GApBJ,+BAsBfV,EAAec,EAAKU,IACpBpB,EAAmBe,EAAQC,KAAKK,QAChCnB,GAAqB,GACrBI,IAAmB,GAzBJ,kBA2BRS,EAAQC,KAAKK,QA3BL,iEA8BjBH,QAAQC,IAAR,MACAb,IAAmB,GA/BF,kFAAH,sDA0CZgB,GAAiB,SAACZ,GAEtB,OADelB,EAAkB+B,MAAK,SAACC,GAAD,OAAUA,EAAKJ,KAAOV,EAAKU,EAA3B,KAGlC,iBACEtD,UAAU,iBACVG,QAAS,kBAAMiB,EAAiB,SAAUwB,EAAjC,EAFX,WAIE,SAAC,MAAD,CAAe5C,UAAU,oBACzB,sCAKF,iBACEA,UAAU,iBACVG,QAAS,kBAAMiB,EAAiB,MAAOwB,EAA9B,EAFX,WAIE,SAAC,MAAD,CAAc5C,UAAU,oBACxB,iCAIP,EA4BK2D,GAAgB,SAACf,GACrB,IAAKA,IAASA,EAAKgB,YACjB,OAAO,gBAAK5D,UAAU,wBAAwB6D,IAAKC,IACrD,IAAMC,EAAS,OAAGnB,QAAH,IAAGA,OAAH,EAAGA,EAAMgB,YAAYI,QAClC,SAACC,GAAD,OAA+B,GAAnBA,EAAOC,UAAoC,GAAnBD,EAAOC,QAA3C,IAGF,GAAwB,GAApBH,EAAUI,SAAgBvB,EAAKgB,YACjC,OAAO,gBAAK5D,UAAU,wBAAwB6D,IAAKC,IAGrD,OAFaC,EAAU,GAAGE,QAGxB,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACH,OACE,gBACEjE,UAAU,wBACVoE,IAAI,gBACJP,IAAKQ,IAGX,KAAK,EACL,KAAK,EACL,KAAK,GACH,OACE,gBACErE,UAAU,wBACVoE,IAAI,gBACJP,IAAKS,IAGX,KAAK,EACL,KAAK,GACH,OACE,gBACEtE,UAAU,wBACVoE,IAAI,gBACJP,IAAKU,IAGX,QACE,OACE,gBACEvE,UAAU,wBACVoE,IAAI,iBACJP,IAAKC,IAId,EAED,OACE,iBAAK9D,UAAU,MAAf,WACE,eAAIA,UAAU,aAAd,SAA4ByC,MAC5B,iBAAKzC,UAAU,eAAf,UACG0C,GAAU8B,KACT,SAAC5B,GAAD,oBACiB6B,IAAf7B,EAAK8B,QACH,SAAC,WAAD,WACIpD,IACA,iBACEtB,UAAS,8BACPiB,GAAmB2B,EAAKU,IAAM,gBAEhCrD,MAAO,CACL0E,OACE1D,IAAoB2B,EAAKU,IACL,OAApBrC,GACA,MAEJ2D,YAAa,kBAAMrD,EAAUqB,EAAKU,GAArB,EACbuB,aAAc,kBACZ1C,EAAoBZ,EAAUqB,EAAKU,IAAM9B,GAD7B,EAXhB,UAeGC,GAAgBmB,EAAKU,KAAOrC,IAC3B,iBACEjB,UAAS,4BACO,SAAd2B,EACI,aACc,WAAdA,EACA,eACA,IANR,UASIY,IAsCA,iBAAKvC,UAAU,mBAAf,WACE,gBAAKA,UAAU,0BACf,gBAAKA,UAAU,0BACf,gBAAKA,UAAU,6BAxCjB,iBACEA,UAAU,oBACVC,MAAO,CACL6E,QAASjD,GAAee,EAAKU,IAAM,QAHvC,UAOGE,GAAeZ,IAGhB,iBACE5C,UAAU,iBACVG,QAAS,YA5JZ,SAACyC,GACxB1B,IACAL,EAAe+B,EAChB,CA0J6BmC,CAAiBnC,EAClB,EAJH,WAME,SAAC,MAAD,CAAc5C,UAAU,yBACxB,uCAGF,iBACEG,QAAS,SAACC,GAAD,OAvIV,SAACA,EAAGwC,GAC7BxC,EAAEC,kBACFa,IACAY,EAAec,EAAKU,IACpBX,GAAaC,EACd,CAkI2CoC,CAAmB5E,EAAGwC,EAA7B,EACT5C,UAAU,iBAFZ,WAIE,SAAC,MAAD,CAASA,UAAU,0BACnB,0CAGF,iBACEA,UAAU,iBACVG,QAAS,kBAAMgB,EAASyB,EAAf,EAFX,WAIE,SAAC,MAAD,CAAW5C,UAAU,oBACrB,2CAULmC,GAAqBN,GAAee,EAAKU,KACxC,iBAAKtD,UAAU,uBAAf,WACE,iBAAMG,QAAS,SAACC,GAAD,OAxJb,SAACA,GAC3BA,EAAEC,kBACFyB,EAAe,MACfM,GAAqB,EACtB,CAoJ+C6C,CAAoB7E,EAA3B,EAAf,qBAGA,yCACA,eAAIJ,UAAU,cAAd,gBACGiC,QADH,IACGA,OADH,EACGA,EAAiBuC,KAAI,SAACU,GAAD,OACpB,gBAEE/E,QAAS,SAACC,GAAD,OAAOA,EAAEC,iBAAT,EACTL,UAAU,aAHZ,WAKE,cACEC,MAAO,CACLkF,MACmB,OAAjBvE,GACAA,EAAamC,MAAQmC,EAAMnC,KACvB,QACA,QACNqC,WACmB,OAAjBxE,GACAA,EAAamC,MAAQmC,EAAMnC,KACvB,MACA,OAXV,UArJNsC,EAmK0BH,EAAMnC,KAlKjDsC,EAAMC,MAAM,KAAK,GAAGA,MAAM,KAAK,MAoKW,OAAjB1E,GACAA,EAAamC,OAASmC,EAAMnC,OAC7B/B,GACC,SAAC,MAAD,CACEb,QAAS,SAACC,GAAD,OAjLlB,SAACA,EAAG8E,GAC7B9E,EAAEC,kBACmB,OAAjBO,GAAyBsE,EAAMnC,MAAQnC,EAAamC,MACtDjC,IAEFH,EAAUuE,EACX,CA4KqCK,CAAmBnF,EAAG8E,EADf,KAKX,SAAC,KAAD,CAAS/E,QAAS,SAACC,GAAD,OAAOW,GAAP,MA7BfmE,EAAM5B,IAjJlB,IAAC+B,CA+IwB,aAwChC,gBAAKrF,UAAU,wBAAf,UACE,+BAEE,gBACEA,UAAU,oBACVC,MAAO,CACLuF,eAAgBvE,GAAmB,UAHvC,UAME,gBACEK,QAAQ,OACRtB,UAAU,cACV6D,IAAG,6EAA8DjB,EAAK8B,aAAnE,aAA8D,EAAYe,SAA1E,QACHrB,IAAKxB,EAAKG,KAAO,uBAKxB9B,IAAoB2B,EAAKU,KACxB,SAAC,EAAAoC,SAAD,CAAUC,UAAU,sCAApB,UACE,SAACrF,EAAD,CACEsC,KAAMA,EACNgD,UAAS,yEAA0DhD,EAAK8B,aAA/D,aAA0D,EAAYe,SAAtE,QACTI,YAAalC,GAAcf,GAC3BP,eAAgBA,EAChBlB,SAAU,kBAAMmB,GAAkB,EAAxB,EACVwD,UAAW,kBAAMxD,GAAkB,EAAxB,UAhJFM,EAAKU,GAF9B,IA2JDhC,IACC,gBAAKtB,UAAU,yBAAf,UACG,OAAI+F,MAAM,KAAKvB,KAAI,SAACd,EAAMsC,GAAP,OAClB,gBAAahG,UAAU,4BAAvB,UACE,SAAC,EAAD,CAAqBD,MAAOiG,GAAVA,IADVA,EADQ,WAU/B,E,UCtTD,EA1DuB,WACrB,OAAkCpE,EAAAA,EAAAA,WAAS,GAA3C,eAAOqE,EAAP,KAAkBC,EAAlB,KACA,GAA8CtE,EAAAA,EAAAA,UAAS,IAAvD,eAAOuE,EAAP,KAAwBC,EAAxB,KACA,GAAsCxE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,MAA/C,eAAOyE,EAAP,KAAoBC,EAApB,KACMC,EAAcC,aAAaC,QAAQ,eAGnCC,EAAS,yCAAG,2GAEdR,GAAa,GAFC,SAGQrD,IAAAA,KAAA,UALVb,kCAKU,0BAA+C,CACnEgB,MAAOuD,IAJK,cAGRtD,EAHQ,OAMR0D,EACJ1D,EAAQC,KAAK0D,KAAKC,MAAMD,KAAKE,SAAW7D,EAAQC,KAAKiB,OAAS,IAChEiC,EAAmBnD,EAAQC,MAC3BpB,EAAe6E,GACfT,GAAa,GAVC,kBAWPrE,GAXO,yCAaduB,QAAQC,IAAR,MACAiD,EAAe,EAAD,IACdJ,GAAa,GAfC,6EAAH,sDAoBfa,EAAAA,EAAAA,YAAU,YACHR,GAAeJ,EAAgBhC,OAAS,IAC7Cf,QAAQC,IAAI,SACZqD,IACD,GAAE,CAACH,EAAaJ,EAAiBA,EAAgBhC,SAkBlD,MAAO,CACL8B,UAAAA,EACAI,YAAAA,EACAxE,YAAAA,EACAmF,iBApBuB,WACvB,IAAMC,EACJd,EAAgBS,KAAKC,MAAMD,KAAKE,SAAWX,EAAgBhC,OAAS,IACtE,OAAK8C,GAOHnF,EAAemF,QACfd,EAAgBe,OAAOf,EAAgBgB,QAAQF,GAAU,KAPzDnF,EACEqE,EAAgBS,KAAKC,MAAMD,KAAKE,SAAWX,EAAgBhC,OAAS,UAEtEgC,EAAgBe,OAAOf,EAAgBgB,QAAQF,GAAU,GAO5D,EAQF,ECqBD,MA5EA,YAA6D,IAAD,UAA1CpG,EAA0C,EAA1CA,eAAgBuG,EAA0B,EAA1BA,QAAS5G,EAAiB,EAAjBA,cACnC6G,EAAaC,IAKnB,GAJAlE,QAAQC,IAAIgE,GAIRA,EAAWpB,YAAcoB,EAAWxF,YACtC,OACE,gBAAK7B,UAAU,kBAAf,UACE,gBAAKA,UAAU,sBAIrB,IAUkBuH,EAAKC,EAVjBC,OAA8ChD,KAArC,UAAA4C,EAAWxF,mBAAX,eAAwB6F,UAGjCC,EACJnH,EAAcoH,YACdpH,EAAcoH,WAAWnE,MACvB,SAAC4B,GAAD,aAAgB,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAO/B,OAAP,UAAc+D,EAAWxF,mBAAzB,aAAc,EAAwByB,GAAjD,IAQJ,OACE,oBAAQtD,UAAU,SAAlB,WACE,gBACEA,UAAU,cACVC,MAAO,CACL4H,eAAgB,QAChBC,gBAAgB,sDAAD,OACbL,EAAM,UACFJ,EAAWxF,YAAY6F,SAAS,UAD9B,aACF,EAAoCjC,SADlC,UAEF4B,EAAWxF,YAAY6C,aAFrB,aAEF,EAA8Be,SAHrB,SAKfsC,mBAAoB,oBAGxB,iBAAK/H,UAAU,mBAAf,WACE,eAAIA,UAAU,gBAAd,mBAA+BqH,EAAWxF,mBAA1C,aAA+B,EAAwBkB,QAEvD,iBAAK/C,UAAU,kBAAf,WACE,mBACEA,UAAU,iBACVG,QAAS,kBAAMU,EAAewG,EAAWxF,YAAhC,EAFX,0BAME8F,IACA,mBACE3H,UAAU,iBACVG,QAAS,kBAAMiH,EAAQC,EAAWxF,YAAzB,EAFX,mCASJ,eAAI7B,UAAU,sBAAd,UAtCYuH,EAuCD,UAACF,EAAWxF,mBAAZ,aAAC,EAAwBmG,QAvCnBR,EAuC4B,KAtCvC,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKpD,QAASqD,EAAID,EAAIU,OAAO,EAAGT,EAAI,GAAK,MAAQD,SAyCtD,gBAAKvH,UAAU,wBAEf,SAAC,MAAD,CACEkI,KAAM,GACNlI,UAAU,uBACVG,QAASkH,EAAWL,qBA1CQK,EAAWxF,YAAYyB,GA8C1D,E,gDC7DK6E,EAAgB,2DAAuDnG,mCAAvD,4CAAkIA,kCAAlI,4JA6KtB,EA3KoB,SAACoG,GACnB,IACMC,EAAcD,EAAMC,aAG1BtB,EAAAA,EAAAA,YAAU,WACR,IAAMuB,EAAY,SAACC,GACK,KAAlBA,EAAMC,SACRJ,EAAMK,kBAET,EAGD,OAFAC,OAAOC,iBAAiB,UAAWL,GAE5B,WACLI,OAAOE,oBAAoB,UAAWN,EACvC,CACF,GAAE,IAoDH,OAFAD,EAAYQ,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE/F,KAAOgG,EAAEhG,KAAO,GAAK,CAAlC,KAGf,iBAAK/C,UAAU,WAAf,WACE,SAAC,MAAD,CAAUA,UAAU,qBACpB,gBAAKA,UAAU,qBAAf,UACE,gBAAIA,UAAU,0BAAd,UACGqI,EAAY7D,KAAI,SAACwE,GAChB,GAAIA,EAAKjG,OAASqF,EAAM5H,cAAcuC,KACpC,OACE,gBACE/C,UAAU,0BAEVG,QAAS,kBA5DC,SAAC6I,GACzBZ,EAAMa,cAAcD,EACrB,CA0D8BE,CAAkBF,EAAxB,EAHX,WAKE,gBACEnF,IAAKmF,EAAKG,OACVnJ,UAAU,yBACVoE,IAAG,UAAK4E,EAAKjG,KAAV,mBAEL,cAAG/C,UAAU,yBAAb,SAAuCgJ,EAAKjG,SARvCiG,EAAKjG,KAYjB,KACD,gBAAI/C,UAAU,0BAA0BG,QAASiI,EAAMgB,cAAvD,WACE,iBAAMpJ,UAAU,4BAAhB,UACE,SAAC,MAAD,CAAQkI,KAAM,QAEhB,cAAGlI,UAAU,yBAAb,sCAIN,iBAAKA,UAAU,qBAAf,WACE,iBACEA,UAAU,0BACVG,QAAS,kBAAMiI,EAAMiB,aAAZ,EAFX,WAIE,iBAAMrJ,UAAU,+BAAhB,UACE,SAAC,MAAD,CAAYkI,KAAM,QAEpB,0CAEF,iBACElI,UAAU,0BACVG,QAAS,kBAAMiI,EAAMkB,gBAAZ,EAFX,WAIE,iBAAMtJ,UAAU,+BAAhB,UACE,SAAC,MAAD,CAAWkI,KAAM,QAEnB,6CAEF,iBAAKlI,UAAU,0BAA0BG,QAASiI,EAAMmB,YAAxD,WACE,iBAAMvJ,UAAU,+BAAhB,UACE,SAAC,MAAD,CAAmBkI,KAAM,QAE3B,mDAGJ,gBAAKlI,UAAU,qBAAf,UAUE,eAAGwJ,KAAMrB,EAAkBnI,UAAU,0BAArC,WACE,iBAAMA,UAAU,+BAAhB,UACE,SAAC,MAAD,CACEkI,KAAM,GACNjI,MAAO,CAAEkF,MAAOiD,EAAM3H,aAAe,UAAY,aAGrD,wDAgBJ,gBAAKT,UAAU,2BAAf,UACE,SAAC,KAAD,CACEyJ,GAAG,SACHzJ,UAAU,0BACVG,QAASiI,EAAMsB,cAHjB,sCAUP,E,oBC8ED,EAtQsB,SAAC,GAIhB,IAHLC,EAGI,EAHJA,qBACAC,EAEI,EAFJA,cACAC,EACI,EADJA,YAEM9H,EAAUC,kCAChB,GAA8CJ,EAAAA,EAAAA,WAAS,GAAvD,eAAOkI,EAAP,KAAwBC,EAAxB,KACA,GAAwCnI,EAAAA,EAAAA,UAAS,IAAjD,eAAOoI,EAAP,KAAqBC,EAArB,KAEA,GAAoCrI,EAAAA,EAAAA,UAASiI,EAAYK,OAAzD,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0CxI,EAAAA,EAAAA,UAAS,IAAnD,eAAOyI,EAAP,KAAsBC,EAAtB,KAEA,GAA0C1I,EAAAA,EAAAA,WAAS,GAAnD,eAAO2I,EAAP,KAAsBC,EAAtB,KAEA,GAA0C5I,EAAAA,EAAAA,UAASiI,EAAYY,UAA/D,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwC/I,EAAAA,EAAAA,WAAS,GAAjD,eAAOgJ,EAAP,KAAqBC,EAArB,KACA,GAAgDjJ,EAAAA,EAAAA,UAAS,IAAzD,eAAOkJ,EAAP,KAAyBC,EAAzB,KACA,GAAgDnJ,EAAAA,EAAAA,WAAS,GAAzD,eAAOoJ,EAAP,KAAyBC,EAAzB,MAEAlE,EAAAA,EAAAA,YAAU,WACR,GAAI6D,EAAc,CAChB,IAAMM,EAAiBrB,EAAYY,SAASU,QAAQ,MAAO,KAC3DR,EAAiBO,EAClB,MACCP,EAAiBd,EAAYY,SAEhC,GAAE,CAACG,IAEJ,IAAMQ,EAAW,yCAAG,WAAOlB,GAAP,mFAClBD,EAAgB,IADE,kBAGMpH,IAAAA,KAAA,UAAcd,EAAd,0BAA+C,CACnEsJ,cAAexB,EAAYK,MAC3BoB,SAAUpB,IALI,QAGVjH,EAHU,QAQJC,KAAKC,OAAS,KACxByG,EAAc3G,EAAQC,KAAK8F,MAC3BiB,EAAgB,CAAEsB,KAAM,UAAWC,QAASvI,EAAQC,KAAKsI,UACzDpB,EAAcnH,EAAQC,KAAK8F,KAAKkB,OAChCI,EAAiB,IACjBE,GAAiB,KAEjBP,EAAgB,CAAEsB,KAAM,QAASC,QAASvI,EAAQC,KAAKsI,UACvDlB,EAAiB,KAhBH,gDAmBhBlH,QAAQC,IAAR,MAnBgB,yDAAH,sDAqCXoI,EAAoB,yCAAG,4GAEnB5I,IAAAA,OAAA,UAAgBd,EAAhB,uBAA8C,CAClDmB,KAAM,CAAEI,GAAIuG,EAAY6B,OAHD,OAKzBhD,OAAOiD,SAAW,IAClBnF,aAAaoF,WAAW,QACxBpF,aAAaoF,WAAW,WAPC,gDASzBxI,QAAQC,IAAR,MATyB,yDAAH,qDAwC1B,OACE,iBAAKrD,UAAU,0BAAf,WACE,gBAAKA,UAAU,uBAAf,UACE,wCAEF,iBAAKA,UAAU,6BAA6BC,MAAO,CAAE4L,OAAQ,SAA7D,WACE,8CACA,gBAAK7L,UAAU,iBAAf,UACE,kBAAMA,UAAU,qBAAhB,WAEE,iBAAKA,UAAU,0BAAf,UACwB,SAArBgK,EAAauB,MACZ,cAAGvL,UAAU,sBAAb,SAAoCgK,EAAawB,WAEjD,cAAGxL,UAAU,wBAAb,SAAsCgK,EAAawB,WAErD,eACEvL,MAAO,CAAEkF,MAAO,QAAS2G,SAAU,OAAQC,WAAY,OADzD,oBAKA,kBACE/L,UAAU,sBACVgM,SAAU,SAAC5L,GAAD,OAAOgK,EAAchK,EAAE6L,OAAOC,MAA9B,EACVA,MAAO/B,IAIRI,IACC,iCACE,kBACEvK,UAAU,sBACVgM,SAAU,SAAC5L,GAAD,OAAOkK,EAAiBlK,EAAE6L,OAAOC,MAAjC,EACVA,MAAO7B,EACP8B,YAAY,kBACZC,WAAS,KAEX,mBACEb,KAAK,SACLpL,QAAS,WACPmK,EAAiB,IACjBE,GAAiB,EAClB,EACDxK,UAAU,yBANZ,wBAaJ,mBACEuL,KAAK,SACLpL,QA1Ga,WACpBoK,EAImB,KAAlBF,EACFe,EAAYf,IAEZG,GAAiB,GACjBF,EAAiB,MAPnBE,GAAiB,GACjBS,GAAoB,GASvB,EA+FajL,UAAU,WAHZ,SAKIuK,EAAiC,aAAjB,qBAKtB,iBAAKvK,UAAU,6BAAf,WACE,eACEC,MAAO,CAAEkF,MAAO,QAAS2G,SAAU,OAAQC,WAAY,OADzD,uBAKA,kBACE/L,UAAU,yBACVgM,SAAU,SAAC5L,GAAD,OAAOuK,EAAiBvK,EAAE6L,OAAOC,MAAjC,EACVA,MAAOxB,KAET,iBACE1K,UAAU,gCACVG,QAAS,kBAAM0K,GAAiBD,EAAvB,EAFX,SAIIA,GAA+B,SAAC,MAAD,KAAhB,SAAC,MAAD,MAIlBI,IACC,iCACE,kBACEhL,UAAU,yBACVgM,SAAU,SAAC5L,GAAD,OAAO2K,EAAoB3K,EAAE6L,OAAOC,MAApC,EACVA,MAAOpB,EACPqB,YAAY,qBACZC,WAAS,KAEX,mBACEb,KAAK,SACLpL,QAAS,WACP4K,EAAoB,IACpBE,GAAoB,EACrB,EACDjL,UAAU,4BANZ,wBAYJ,mBACEuL,KAAK,SACLpL,QAjIgB,WACvB6K,EAIsB,KAArBF,EACYT,GAEdY,GAAoB,GACpBF,EAAoB,MAPtBE,GAAoB,GACpBT,GAAiB,GASpB,EAsHaxK,UAAU,WAHZ,SAKIgL,EAAuC,gBAApB,6BAM7B,iBACEhL,UAAU,eACVC,MAAO,CAAEoM,eAAgB,iBAF3B,WAIE,mBAAQrM,UAAU,aAAaG,QAASwJ,EAAxC,mBAGA,mBACE3J,UAAU,qBACVG,QAAS,kBAAM4J,GAAmB,EAAzB,EAFX,kCAQHD,IACC,gBAAK9J,UAAU,uBAAf,UACE,iBAAKA,UAAU,+BAAf,WACE,2EACA,iBAAKA,UAAU,+BAAf,WACE,iBAAKA,UAAU,sBAAf,WACE,gCACA,iBACEA,UAAU,oBACVG,QAASsL,EAFX,mBAOF,iBAAKzL,UAAU,sBAAf,WACE,+BACA,iBACEA,UAAU,oBACVG,QAAS,kBAAM4J,GAAmB,EAAzB,EAFX,4BAaf,EC7ED,MAjLA,SAAa3B,GACX,OAAoCxG,EAAAA,EAAAA,WAAS,GAA7C,eAAO0K,EAAP,KAAmBC,EAAnB,KACA,GAA8C3K,EAAAA,EAAAA,WAAS,GAAvD,eAAO4K,EAAP,KAAwBC,EAAxB,KACA,GAA0C7K,EAAAA,EAAAA,WAAS,GAAnD,eAAO8K,EAAP,KAAsBC,EAAtB,KACMC,GAAYC,EAAAA,EAAAA,QAAO,IACzB,GAA4CjL,EAAAA,EAAAA,WAAS,GAArD,eAAOkL,EAAP,KAAuBC,EAAvB,KACA,GAA4CnL,EAAAA,EAAAA,WAAS,GAArD,eAAOoL,EAAP,KAAuBC,EAAvB,KAEMC,EAAU9E,EAAM5H,eAoBtBuG,EAAAA,EAAAA,YAAU,WAER,IAAMoG,EAAoB,WACxBzE,OAAOC,iBAAiB,UAAU,WAC5BD,OAAO0E,QAAU,IACnBb,GAAc,GACTA,GAAc,EACtB,GACF,EAGD,OAFAY,IAEO,WACLzE,OAAOE,oBAAoB,SAAUuE,EACtC,CACF,GAAE,IAEH,IAAME,EAAa,WACjBC,SAASC,KAAKtN,MAAMuN,UAAY,SAChCT,GAAkB,GAClBE,GAAkB,EACnB,EAgCD,OAdAlG,EAAAA,EAAAA,YAAU,WACR,IAAMuB,EAAY,SAACC,GACK,KAAlBA,EAAMC,SAERmE,GAAiB,EAEpB,EAGD,OAFAjE,OAAOC,iBAAiB,UAAWL,GAE5B,WACLI,OAAOE,oBAAoB,UAAWN,EACvC,CACF,GAAE,KAGD,iBAAKtI,UAAS,cAASsM,GAAc,aAArC,UACGQ,IACC,gBAAK9M,UAAU,mBAAf,UACE,SAACyN,EAAA,EAAD,CACEC,eAAgBR,EAChBS,UAAWvF,EAAMyB,YAAYK,MAC7B0D,gBAAiBP,EACjBQ,SA5BO,WACfzF,EAAMyF,WACNd,GAAkB,EACnB,EA0BSe,WAAY,SAACC,GAAD,OAAU3F,EAAM4F,cAAcD,EAA9B,EACZxH,YAAa6B,EAAM7B,gBAIxByG,IACC,iBAAKhN,UAAU,mBAAf,UACG,KACD,SAAC,EAAD,CACE2J,qBAAsB0D,EACtBzD,cAAe,SAACZ,GAAD,OAAUZ,EAAMwB,cAAcZ,EAA9B,EACfa,YAAazB,EAAMyB,cAClB,QAGP,gBACE7J,UAAU,YACV6D,I,68EACAO,IAAI,gBACJjE,QAAS,kBAAOuI,OAAOiD,SAAW,GAAzB,KAEX,iBAAK3L,UAAU,aAAf,WACE,iBAAKA,UAAU,cAAf,UACG0M,IACC,iBAAM1M,UAAU,mBAAmBiO,SA5FnB,SAAC7N,GACzBA,EAAE8N,iBACF,IAAMC,EAAcvB,EAAUwB,QAAQlC,MAAMmC,OAClB,GAAtBF,EAAYhK,QAChBiE,EAAMkG,mBAAmBH,EAC1B,EAuFS,UACE,kBACEI,IAAK3B,EACLR,WAAS,EACTb,KAAK,OACLY,YAAY,6BACZqC,aACEpG,EAAMqG,aAAN,UAAwBrG,EAAMqG,aAAa1L,MAAS,GAEtD2L,OA5GM,WACd9B,EAAUwB,QAAQlC,MAAM/H,OAAS,GAGrCwI,GAAiB,EAClB,OA2GO,SAAC,MAAD,CACE3M,UAAS,2BAAsB0M,GAAiB,iBAChDvM,QAAS,kBAAMwM,GAAkBD,EAAxB,QAGb,iBACE1M,UAAU,eACV6E,aAAc,kBAAM4H,GAAmB,EAAzB,EAFhB,WAIE,gBACEzM,UAAU,wBACV4E,YAAa,kBAAM6H,GAAmB,EAAzB,EAFf,UAIE,gBACEzM,UAAU,cACV6D,IAAKqJ,EAAQ/D,OAAS+D,EAAQ/D,OAASwF,EAEvCvK,IAAI,qBAGR,SAAC,MAAD,CACEpE,UAAU,oBACVC,MAAO,CACL2O,UAAU,GAAD,OACPpC,EAAkB,iBAAmB,mBAK1CA,IACC,SAAC,EAAD,CACEvD,cAAeb,EAAMyG,WACrBrO,cAAe0M,EACf7E,YAAaD,EAAMyB,YAAYiF,SAC/BpF,cAAetB,EAAM2G,SACrBtG,iBAvJa,WACvBgE,GAAmB,EACpB,EAsJWrD,cAAehB,EAAMgB,cACrB3I,aAAc2H,EAAM3H,aACpB4I,YAlHe,WACzBiE,SAASC,KAAKtN,MAAMuN,UAAY,SAChCT,GAAkB,EACnB,EAgHWxD,YA9Ge,WACzB+D,SAASC,KAAKtN,MAAMuN,UAAY,SAChCP,GAAkB,EACnB,EA4GW+B,iBAAkB5G,EAAM4G,iBACxBtN,kBAAmB0G,EAAM1G,kBACzB4H,eAAgBlB,EAAMkB,yBAOnC,ECsDD,EAzOgB,SAAC,GAAqC,IAAnC/C,EAAkC,EAAlCA,YAAa1F,EAAqB,EAArBA,eAC9B,GAA0Be,EAAAA,EAAAA,UAAS,IAAnC,eAAOqN,EAAP,KAAcC,EAAd,KACA,GAA0CtN,EAAAA,EAAAA,UAAS,QAAnD,eAAOuN,EAAP,KAAsBC,EAAtB,KACA,GAA4CxN,EAAAA,EAAAA,WAAS,GAArD,eAAOyN,EAAP,KAAuBC,EAAvB,KACA,GAAgD1N,EAAAA,EAAAA,WAAS,GAAzD,eAAO2N,EAAP,KAAyBC,EAAzB,KACA,GAA8B5N,EAAAA,EAAAA,WAAS,GAAvC,eAAON,EAAP,KAAgBmO,EAAhB,KACM1N,EAAUC,kCAEZ0N,EAAa,IAAIC,KACfC,EAAiBhJ,KAAKC,MAC1B,IAAI8I,KAAKD,EAAWG,UAAY,QAA2B,KAEvDC,EAAkBlJ,KAAKC,MAC3B,IAAI8I,KACF,IAAIA,KAAsB,IAAjBC,GAAuBG,SAC9B,IAAIJ,KAAsB,IAAjBC,GAAuBI,WAAa,IAE/CH,UAAY,KAEVI,EAAiBrJ,KAAKC,MAC1B,IAAI8I,KACF,IAAIA,KAAuB,IAAlBG,GAAwBC,SAC/B,IAAIJ,KAAuB,IAAlBG,GAAwBE,WAAa,KAEhDH,UAAY,KAKVK,EAAgB,SAACC,GACrB,IAAMC,EAAU,GACVC,EAAe,GAOrB,OANAF,EAAK3L,KAAI,SAAC5B,IACiC,IAArCwN,EAAQjJ,QAAQvE,EAAKA,KAAKG,QAC5BqN,EAAQE,KAAK1N,EAAKA,KAAKG,MACvBsN,EAAaC,KAAK1N,GAErB,IACMyN,CACR,GAEDtJ,EAAAA,EAAAA,YAAU,WAAM,8CAId,sGAIUoI,EAJV,OAKS,UALT,OASS,SATT,6BAMMoB,EAAYX,EACZY,EAAaV,EAPnB,mCAUMS,EAAYT,EACZU,EAAaP,EAXnB,mCAcMM,EAAY3J,KAAKC,MAAM6I,EAAWG,UAAY,KAC9CW,EAAaZ,EAfnB,uCAoBUa,EAAU,EACPzK,EAAI,EArBjB,aAqBoBA,EAAIyK,GArBxB,4CAuB8B5N,IAAAA,KAAA,UAAcd,EAAd,iBAAsC,CAC1DiB,MAAOuD,EACPmK,YAAaH,EACbC,WAAAA,IA1BV,eAuBcvN,EAvBd,OA4BQiM,EAASgB,EAAcjN,EAAQC,OAC/BuM,GAAW,GA7BnB,wDAgCQrM,QAAQC,IAAI,uBAhCpB,QAqBiC2C,IArBjC,2EAoCI5C,QAAQC,IAAI,KAAMmI,SApCtB,oEAJc,sBAETjF,IACLkJ,GAAW,GAHG,mCA2Cd/I,GACD,GAAE,CAACyI,EAAe5I,IAGnB,IAAMoK,EAAmB,SAACvQ,GACxBgP,EAAiBhP,EAAE6L,OAAO2E,WAC1BtB,GAAkB,EACnB,EAGKuB,EAAc,SAACC,GACnB,IAmBIC,EAFAC,EAAM,IAAIrB,KAAKmB,EAAK3F,QAAQ,KAAM,MAClC8F,EAAaD,EAAIE,UAIrB,OAAQD,GACN,KAAK,EACL,KAAK,GACL,KAAK,GACHF,EAAeE,EAAa,KAC5B,MACF,KAAK,EACL,KAAK,GACHF,EAAeE,EAAa,KAC5B,MACF,KAAK,EACL,KAAK,GACHF,EAAeE,EAAa,KAC5B,MAEF,QACEF,EAAeE,EAAa,KAGhC,MAzCa,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YA8BOD,EAAIhB,YAAc,IAAMe,EAAe,KAAOC,EAAIG,aAE5D,EAED,OACE,iBACEvM,YAAa,kBAAM4K,GAAoB,EAA1B,EACb4B,WAAY,kBAAM5B,GAAoB,EAA1B,EACZxP,UAAU,WAHZ,WAKE,iBACEA,UAAU,oBACV6E,aAAc,kBAAMyK,GAAkB,EAAxB,EAFhB,WAIE,yCAEA,eACEtP,UAAU,iBACV4E,YAAa,kBAAM0K,GAAkB,EAAxB,EAFf,UAIGH,EAAe,KAChB,SAAC,MAAD,CACEjH,KAAM,GACNlI,UAAWqP,EAAiB,eAAiB,aAE5C,IACJA,IACC,gBAAKrP,UAAU,iBAAf,UACE,2BACE,eACEC,MAAO,CACLoR,gBAAkC,QAAjBlC,EAA0B,QAAU,GACrDhK,MAAwB,QAAjBgK,EAA0B,QAAU,IAE7ChP,QAASwQ,EALX,mBASA,eACE1Q,MAAO,CACLoR,gBAAkC,SAAjBlC,EAA2B,QAAU,GACtDhK,MAAwB,SAAjBgK,EAA2B,QAAU,IAE9ChP,QAASwQ,EALX,oBASA,eACE1Q,MAAO,CACLoR,gBAAkC,QAAjBlC,EAA0B,QAAU,GACrDhK,MAAwB,QAAjBgK,EAA0B,QAAU,IAE7ChP,QAASwQ,EALX,2BAaR,iBAAK3Q,UAAU,wBAAf,UACGiP,IACE3N,GACD2N,EAAMzK,KAAI,SAAC5B,EAAMoD,GAAP,aACR,iBACEhG,UAAS,qCACPuP,GAAoB,UAEtBpP,QAAS,kBAAMU,EAAe+B,EAAKA,KAA1B,EAJX,WAOE,eAAI5C,UAAU,wBAAd,SACG6Q,EAAYjO,EAAK0O,UAEpB,gBAEEtR,UAAU,cACV6D,IAAG,uEAAwDjB,EAAKA,KAAK8B,aAAlE,aAAwD,EAAiBe,SAAzE,QACHrB,IAAKxB,EAAKG,MAHLH,EAAKU,MANPV,EAAKU,GANJ,IAmBXhC,IACC,gBAAKtB,UAAU,8BAAf,UACG,OAAI+F,MAAM,IAAIvB,KAAI,SAACd,EAAMsC,GAAP,OACjB,gBAAahG,UAAU,iCAAvB,UACE,SAAC,EAAD,CAAqBD,MAAOiG,GAAVA,IADVA,EADO,WAU9B,EC7HD,EA3GoB,SAAC,GAAqC,IAAnCO,EAAkC,EAAlCA,YAAa1F,EAAqB,EAArBA,eAClC,GAA0Be,EAAAA,EAAAA,UAAS,IAAnC,eAAOqN,EAAP,KAAcC,EAAd,KACA,GAA8BtN,EAAAA,EAAAA,WAAS,GAAvC,eAAON,EAAP,KAAgBmO,EAAhB,KACM1N,EAAUC,kCACZ0O,EAAc9J,KAAKC,OAAM,IAAI8I,MAAOE,UAAY,KAChD0B,EAAwBC,KAAKC,MAAMC,eAAejL,QAAQ,aAuD9D,OArDAM,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CACA,GAAIgL,GAAyBA,EAAsBpN,OAAS,EAG1D,OAFA+K,EAASqC,QACT9B,GAAW,IAJC,mCAkDd/I,EAjDwB,CADV,8CAQd,oGACE+I,GAAW,GADb,SAGQkC,EAAiB,GAHzB,SAI0B9O,IAAAA,KAAA,UAAcd,EAAd,iBAAsC,CAC1DiB,MAAOuD,EACPmK,YAAaA,IANnB,cAIUzN,EAJV,OASIG,QAAQC,IAAIJ,GAEN2O,EAAe,IAAIC,IACzB5O,EAAQC,KAAKc,QACX,SAACN,GAAD,OACGkO,EAAaE,IAAIpO,EAAKd,KAAKU,KAC5BsO,EAAaG,IAAIrO,EAAKd,KAAKU,IAAIyO,IAAIrO,EAAKd,KAF1C,IAKFgP,EAAaI,SACX,SAACpP,GAAD,MAAyB,iBAARA,GAAoB+O,EAAerB,KAAK1N,EAAzD,IAGF+O,EAAe9I,MACb,SAACC,EAAGC,GAAJ,OACEA,EAAEkJ,cAAcC,UAAS,SAACC,GAAD,OAAWA,EAAMrB,IAAjB,IACvBhI,EAAEmJ,cAAcC,UAAS,SAACC,GAAD,OAAWA,EAAMrB,IAAjB,KAC3B/H,EAAEqJ,MAAQtJ,EAAEsJ,KAHd,IAMFlD,EAASyC,EAAeU,MAAM,EAAG,KAEjCX,eAAeY,QACb,WACAd,KAAKe,UAAUZ,EAAeU,MAAM,EAAG,MAEzC5C,GAAW,GAnCf,kBAoCWxM,GApCX,kCAsCIG,QAAQC,IAAR,MAtCJ,QAwCEoM,GAAW,GAxCb,2DARc,sBAmDf,GAAE,CAAClJ,IAEAjF,EAAgB,MAYlB,iBAAKtB,UAAU,eAAf,WACE,6CAEA,gBAAKA,UAAU,wBAAf,SACGiP,EAAMzK,KAAI,SAAC5B,EAAMoD,GAAP,aACT,SAAC,WAAD,WACE,iBAAKhG,UAAU,+BAAf,WACE,gBAAKA,UAAU,qBAAf,SAAqCgG,EAAI,KACzC,iBACEhG,UAAU,iCACVC,MAAO,CACL8L,WAAkB,GAAL/F,EAAU,QAAkB,GAALA,GAAU,QAEhD7F,QAAS,kBAAMU,EAAe+B,EAArB,EALX,UAOG,KACCtB,IACA,+BACE,gBACEA,QAAQ,OACRtB,UAAU,uBACV6D,IAAG,6EAA8DjB,EAAK8B,aAAnE,aAA8D,EAAYe,SAA1E,QACHrB,IAAKxB,EAAKG,gBAjBDH,EAAKG,KADjB,QA6BlB,ECID,G,QA5GoB,SAAC,GAAqC,IAAnCwD,EAAkC,EAAlCA,YACrB,GADuD,EAArB1F,gBACRe,EAAAA,EAAAA,UAAS,KAAnC,eAAOqN,EAAP,KACA,GADA,MAC8BrN,EAAAA,EAAAA,WAAS,IAAvC,eAAgB6N,GAAhB,YAIA1I,EAAAA,EAAAA,YAAU,WAAM,8CAGd,0FACE0I,GAAW,GADb,4DAuBIrM,QAAQC,IAAR,MAvBJ,yDAHc,sBACTkD,GADS,mCA6BdiM,EACD,GAAE,CAACjM,IAsBJ,OARK,OAAL0I,QAAK,IAALA,GAAAA,EAAOpG,MAAK,SAACC,EAAGC,GAAJ,OACVD,EAAE2J,aAAe1J,EAAE0J,cACd,EACD1J,EAAE0J,aAAe3J,EAAE2J,aACnB,EACA,CALM,IAQL,EAgDR,G,UC/GD,IAAI/C,EAAa,IAAIC,KAmFrB,GAlFe/I,KAAKC,MAAM6I,EAAWG,UAAY,KAIhC,CACf,CACE6C,UAAW,uBACXC,QAAS,GACTtN,MAAO,0BAET,CACEqN,UAAW,oBACXC,QAAS,GACTtN,MAAO,gBAET,CACEqN,UAAW,mBACXC,QAAS,EACTtN,MAAO,eAET,CACEqN,UAAW,kBACXC,QAAS,GACTtN,MAAO,qBAET,CACEqN,UAAW,sBACXC,QAAS,EACTtN,MAAO,kBAET,CACEqN,UAAW,mBACXC,QAAS,GACTtN,MAAO,eAET,CACEqN,UAAW,kCACXC,QAAS,GACTtN,MAAO,cAET,CACEqN,UAAW,wBACXC,QAAS,EACTtN,MAAO,oBAET,CACEqN,UAAW,oBACXC,QAAS,EACTtN,MAAO,gBAET,CACEqN,UAAW,oBACXC,QAAS,GACTtN,MAAO,gBAET,CACEqN,UAAW,iBACXC,QAAS,GACTtN,MAAO,aAET,CACEqN,UAAW,qBACXC,QAAS,EACTtN,MAAO,iBAET,CACEqN,UAAW,wBACXC,QAAS,GACTtN,MAAO,oBAET,CACEqN,UAAW,oBACXC,QAAS,GACTtN,MAAO,gBAET,CACEqN,UAAW,gBACXC,QAAc,GACdtN,MAAO,oBC9DX,IAAMuN,GAAcrS,EAAAA,EAAAA,OAAK,kBAAM,qDAAN,IACnBsS,GAAetS,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IACpBuS,GAAiBvS,EAAAA,EAAAA,OAAK,kBAC1B,qDAD0B,IAItBwS,EAAO,IAAIC,gBAAgBtK,OAAOiD,SAASsH,QAAQC,IAAI,QAEvD5P,EADYoF,OAAOiD,SAASsH,OACb3N,MAAM,KAAK,GAE1B6N,EAAY,SAAC,GAcZ,IAbLtJ,EAaI,EAbJA,YACAtD,EAYI,EAZJA,YACAmH,EAWI,EAXJA,eACAhM,EAUI,EAVJA,kBACA0R,EASI,EATJA,UACApE,EAQI,EARJA,iBACAhB,EAOI,EAPJA,cACA5M,EAMI,EANJA,iBACAiS,EAKI,EALJA,UACAC,EAII,EAJJA,WACA3R,EAGI,EAHJA,WACA4R,EAEI,EAFJA,gBACAtK,EACI,EADJA,cAEMuK,ECvCO,WACb,IAAMC,EAAgBjN,aAAaC,QAAQ,eAC3C,GAA4C7E,EAAAA,EAAAA,UAAS,IAArD,eAAO8R,EAAP,KAAuBC,EAAvB,KACA,GAAkC/R,EAAAA,EAAAA,WAAS,GAA3C,eAAOqE,EAAP,KAAkBC,EAAlB,KACMnE,EAAUC,kCACV0O,EAAc,IAAIf,MAExB5I,EAAAA,EAAAA,YAAU,WACR,IAAM6M,EAAW,yCAAG,2GACI/Q,IAAAA,IAAA,UAAad,EAAb,oBADJ,UACZkB,EADY,OAEZ4Q,EAAe,IAAIlE,KAAK1M,EAAQC,KAAK2Q,gBACvCnD,EAAcmD,EAAaC,QAAQD,EAAa3C,UAAY,IAH9C,yCAIT6C,KAJS,cAMhBJ,EAAkB1Q,EAAQC,KAAK,GAAG8Q,aAClC9N,GAAa,GAPG,kBAQTjD,EAAQC,MARC,4CAAH,qDAYX6Q,EAAe,yCAAG,8FACjBN,EADiB,iEAGIQ,QAAQC,IAChCC,EAAa3P,KAAI,SAAC4P,GAChB,OAAOvR,IAAAA,KAAA,UAAcd,EAAd,mBAAwC,CAC7CiB,MAAOyQ,EACPd,QAASyB,EAAMzB,QACflQ,WAAY2R,EAAM/O,OAErB,KAVmB,cAGhBgP,EAHgB,OAYhBC,EAAoBD,EAAY7P,KAAI,SAAC4P,GAAD,OAAWA,EAAMlR,IAAjB,IAC1CqR,EAAuBD,GACvBpO,GAAa,GAdS,kBAefoO,GAfe,2CAAH,qDAkBrBV,GACD,GAAE,CAACH,IAEJ,IAAMc,EAAsB,yCAAG,WAAOpE,GAAP,4FACPtN,IAAAA,KAAA,UAAcd,EAAd,sBAA2C,CAC/DW,UAAWyN,EACXW,KAAMJ,IAHqB,cACvBzN,EADuB,OAK7B0Q,EAAkB1Q,EAAQC,KAAK8Q,aALF,kBAMtB/Q,EAAQC,KAAK8Q,aANS,2CAAH,sDAS5B,MAAO,CAAEN,eAAAA,EAAgBzN,UAAAA,EAC1B,CDZmBuO,GAClB,GAAsD5S,EAAAA,EAAAA,WAAS,GAA/D,eAAO6S,EAAP,KACA,GADA,MACwC7S,EAAAA,EAAAA,UAAS,CAAEuB,OAAQ,GAAIqI,QAAS,MAAxE,eAAOkJ,EAAP,KAAqBrT,EAArB,KAGA,GAAwCO,EAAAA,EAAAA,UAAS,MAAjD,eAAOhB,EAAP,KAAqB+T,EAArB,KACA,GAAkC/S,EAAAA,EAAAA,WAAS,GAA3C,eAAOgT,EAAP,KAAkBC,EAAlB,KACA,GAAsCjT,EAAAA,EAAAA,YAAtC,eAAOkT,EAAP,KAGA,IAHA,MAGkDlT,EAAAA,EAAAA,WAAS,IAA3D,iBAAOmT,GAAP,MAA0BC,GAA1B,MAGA,IAA8CpT,EAAAA,EAAAA,UAAS,MAAvD,iBAAOX,GAAP,MAAwBgU,GAAxB,MACA,IAAoDrT,EAAAA,EAAAA,WAAS,GAA7D,iBACA,IADA,aACwCA,EAAAA,EAAAA,UAAS,OAAjD,iBAAOsT,GAAP,MAAqBC,GAArB,MAGA,IAAsCvT,EAAAA,EAAAA,UAAS,MAA/C,iBAAOwT,GAAP,MAAoBvU,GAApB,MAGMwU,GE7DO,SAAwBtC,GACrC,OAAsCnR,EAAAA,EAAAA,YAAtC,eAAO0T,EAAP,KAAoBC,EAApB,KACA,GAAwC3T,EAAAA,EAAAA,YAAxC,eAAO4T,EAAP,KAAqBC,EAArB,KACA,GAAkC7T,EAAAA,EAAAA,YAAlC,eAAO8T,EAAP,KAAkBC,EAAlB,KACM5T,EAAUC,kCACV4T,EAAYlE,eAAejL,QAAQ,gBAyDzC,OAvDAM,EAAAA,EAAAA,YAAU,WACR,GAAI6O,EAGF,OAFAxS,QAAQC,IAAIuS,QACZL,EAAe/D,KAAKC,MAAMmE,IAG5B,GAAK7C,EAAL,CACA,IAAM8C,EAAqB,yCAAG,kHAEJhT,IAAAA,KAAA,UACjBd,EADiB,+BAEpB,CACEgR,KAAAA,EACAhR,QAAAA,IANsB,OAEpBkB,EAFoB,OAS1BsS,EAAetS,EAAQC,KAAK4S,aAAavI,KAAKwI,cAC9CN,EAAgBxS,EAAQC,KAAK4S,aAAavI,KAAKyI,eAC/CL,EAAa1S,EAAQC,KAAK4S,aAAavI,KAAK0I,YAC5CvE,eAAeY,QACb,eACAd,KAAKe,UAAUtP,EAAQC,KAAK4S,aAAavI,KAAKwI,eAEhDrN,OAAOwN,QAAQC,UAAU,CAAC,EAAG,KAAM,KAhBT,kDAkB1B/S,QAAQC,IAAR,MACAqF,OAAOiD,SAAW,IAnBQ,0DAAH,qDAsB3BkK,GAvBiB,CAwBlB,GAAE,CAAC9C,KAEJhM,EAAAA,EAAAA,YAAU,WACR,GAAKyO,GAAiBE,EAAtB,CACA,IAAMU,EAAmB,yCAAG,kHAEFvT,IAAAA,KAAA,UAAcd,EAAd,sBAA2C,CAC/DyT,aAAAA,EACAzT,QAAAA,IAJsB,OAElBkB,EAFkB,OAMxBsS,EAAetS,EAAQC,KAAKqK,KAAKA,KAAKwI,cACtCN,EAAgBxS,EAAQC,KAAKqK,KAAKA,KAAKyI,eACvCL,EAAa1S,EAAQC,KAAKqK,KAAKA,KAAK0I,YARZ,gDAUxB7S,QAAQC,IAAI,uBACZqF,OAAOiD,SAAW,IAXM,yDAAH,qDAcnB0K,EAAWC,aAAY,WAC3BF,GACD,GAAqB,KAAlBV,EAAY,KAEhB,OAAO,kBAAMa,aAAaF,EAAnB,CAnBgC,CAoBxC,GAAE,CAACb,EAAcE,IAEXJ,CACR,CFF4BkB,CAAezD,IG7D7B,SAAsBzP,GACnC,OAA8C1B,EAAAA,EAAAA,UAAS,IAAvD,eAAO6U,EAAP,KAAwBC,EAAxB,MAGA3P,EAAAA,EAAAA,YAAU,WACR,GAAKzD,EAAL,CACA,IAAMqT,EAAgB,yCAAG,kHAEC9T,IAAAA,IAAA,UANZb,kCAMY,0BAA8C,CAClEc,OAAQ,CACNQ,GAAAA,KAJiB,OAEfL,EAFe,OAOrBuD,aAAa8L,QAAQ,UAAWrP,EAAQ2T,OAAO9T,OAAOQ,IACtDF,QAAQC,IAAIJ,EAAQC,MACpBwT,EAAmBzT,EAAQC,MAC3BwF,OAAOwN,QAAQC,UAAU,CAAC,EAAG,KAAM,KAVd,kDAYrB/S,QAAQC,IAAR,MACAD,QAAQC,IAAI,8BAbS,0DAAH,qDAgBtBsT,GAjBe,CAkBhB,GAAE,CAACrT,GAGL,CHoCyBuT,CAAavT,IAErCyD,EAAAA,EAAAA,YAAU,WACH9F,KAAiBqM,SAASC,KAAKtN,MAAM6W,SAAW,OACtD,GAAE,IAEH,IAWM5V,GAAkB,WACtBoM,SAASC,KAAKtN,MAAM6W,SAAW,OAC/B7B,GAAmB,KACpB,EAMKtU,GAAY,SAACuE,GACjByP,EAAgBzP,EACjB,EAOD,GAAIwI,EACF,OAAoB,OAAhB0H,IAEA,+BACE,UAAC,EAAA1P,SAAD,CAAUC,UAAU,sCAApB,WACE,SAACiN,EAAD,CACEvR,gBAAiB,SAAC8B,EAAQqI,GAAT,OACfnK,EAAgB,CAAE8B,OAAAA,EAAQqI,QAAAA,GADX,EAGjB5I,KAAMwS,GACN2B,aAAc,kBAAMlW,GAAe,KAArB,EACd0F,YAAaA,EACbnF,iBAAkB,SAAC4V,EAAQpU,GAAT,OAChBxB,EAAiB4V,EAAQpU,EADT,EAGlBpC,cAAekN,EACfhM,kBAAmBA,KAErB,SAACmR,EAAD,CACE6B,aAAcA,EACdD,oBAAqBA,EACrBwC,iBAAkB,WAChB5V,EAAgB,CAAEmK,QAAS,GAAIrI,OAAQ,IACxC,SAOP4R,IAEA,SAAC,EAAArP,SAAD,CAAUC,UAAU,sCAApB,UACE,SAACmN,EAAD,CACElL,WAAYlG,EACZlB,cAAekN,EACfwJ,WAAY,kBAAMlC,IAAqB,EAA3B,EACZpU,aAAcA,EACdD,UAAWA,GACXK,UAAW4T,EACX7T,cAAe,kBAAM8T,GAAa,EAAnB,EACf/T,eAAgB,kBAAM+T,GAAa,EAAnB,EAChBpU,aAAc4U,GACdjU,iBAAkB,SAAC4V,EAAQpU,GAAT,OAAkBxB,EAAiB4V,EAAQpU,EAA3C,EAClBoM,iBAAkBA,EAClBoE,UAAWA,OAMjB,iBAAKpT,UAAU,MAAf,WACE,SAAC,EAAD,CACE6J,YAAaA,EACbrJ,cAAekN,EACfmB,WAAY5F,EACZ8F,SAAUuE,EACVhF,mBAAoB+E,EACpBjK,cA/DmB,WACzB5C,aAAaoF,WAAW,WACxBlD,OAAOiD,SAASwL,QACjB,EA6DOnJ,cAAeA,EACfvN,aAAc4U,GACd9O,YAAaA,EACbsH,SAAU,kBAAMzK,QAAQC,IAAI,cAAlB,EACV2L,iBAAkBA,EAClBtN,kBAAmBA,EACnB4H,eAAgB,kBAAM0L,IAAqB,EAA3B,KAGlB,SAAC,EAAD,CACEnU,eAAgB,SAACyC,GAAD,OAAQzC,GAAeyC,EAAvB,EAChB8D,QAAS,SAACxE,GAAD,OAAUxB,EAAiB,MAAOwB,EAAlC,EACTpC,cAAekN,KAEjB,SAAC,EAAD,CACEnH,YAAaA,EACb1F,eAAgB,SAAC+B,GAAD,OAAU/B,GAAe+B,EAAzB,KAGlB,SAAC,EAAD,CACE2D,YAAaA,EACb1F,eAAgB,SAAC+B,GAAD,OAAU/B,GAAe+B,EAAzB,KAGlB,SAAC,EAAD,CACE2D,YAAaA,EACb1F,eAAgB,SAAC+B,GAAD,OAAU/B,GAAe+B,EAAzB,IAGjB3B,KACC,+BACE,eAAIjB,UAAU,qBAAqBG,QAASe,GAA5C,kBAKJ,gBACElB,UAAS,UAAyB,OAApBiB,GAA2B,sBAAwB,MAGlEuS,EAAUE,eAAevP,OAAS,EACjCqP,EAAUE,eAAelP,KAAI,SAACvB,GAAD,OAC3B,SAAC,EAAD,CAEEzC,cAAekN,EACfjN,aAAc4U,GACd3U,aAAc0W,OAAOC,QAAQpU,GAC7BtC,UAAWA,GACXC,aAAcA,EACdC,eAAgB,SAAC+B,GAAD,OAAU/B,GAAe+B,EAAzB,EAChB9B,eAAgB,SAACV,GAAD,OAAOyU,GAAa,EAApB,EAChB9T,cAAe,SAACX,GAAD,OAAOyU,GAAa,EAApB,EACf7T,UAAW4T,EACX3T,gBAAiBA,GACjBE,SAAU,SAACyB,GAAD,OAzIC,SAACA,GACtBQ,QAAQC,IAAIT,GACZqS,GAAmBrS,EAAKU,IACxBgK,SAASC,KAAKtN,MAAM6W,SAAW,QAChC,CAqI+BQ,CAAe1U,EAAzB,EACV1B,gBAAiBA,GACjBqW,GAAC,EACDnW,iBAAkB,SAAC4V,EAAQpU,GAAT,OAChBxB,EAAiB4V,EAAQpU,EADT,EAGlBvB,gBAAiB,SAAC8B,EAAQqI,GAAT,OACfnK,EAAgB,CAAE8B,OAAAA,EAAQqI,QAAAA,GADX,EAGjBlK,QAASwT,EACTvT,UAAW,SAACqB,GAAD,OAAUuS,GAAgBvS,EAA1B,EACXpB,UAAW,kBAxJrB2T,GAAgB,WAChB5B,GAuJqB,EACX9R,aAAcyT,GACdxT,kBAAmBA,EACnBC,WAAYA,GAzBPyV,OAAOI,KAAKvU,GAFQ,KA+B7B,gBAAKjD,UAAU,yBAAf,UACG,OAAI+F,MAAM,KAAKvB,KAAI,SAACd,EAAMsC,GAAP,OAClB,gBAAahG,UAAU,4BAAvB,UACE,SAAC,EAAD,CAAqBD,MAAOiG,GAAVA,IADVA,EADQ,MAQvBqP,KACC,SAACoC,EAAA,EAAD,CACEhX,aAAc4U,GACdT,UAAWA,EACX8C,cAAe,SAACtX,GAAD,OAAOyU,GAAa,EAApB,EACf9T,cAAe,SAACX,GAAD,OAAOyU,GAAa,EAApB,EACf8C,SAAQ,OAAE/W,QAAF,IAAEA,OAAF,EAAEA,EAAcgX,OAI5B,SAAC/E,EAAD,CACE6B,aAAcA,EACdD,oBAAqBA,EACrBwC,iBAAkB,WAChB5V,EAAgB,CAAEmK,QAAS,GAAIrI,OAAQ,IACxC,MAKV,EAED,GAAe0U,EAAAA,EAAAA,MAAK1E,E,mIIpPpB,EAfmB,SAAC,GAA0B,IAAxBhD,EAAuB,EAAvBA,KAAM2H,EAAiB,EAAjBA,WAC1B,OACE,gBAAK9X,UAAU,wBAAf,UACE,eAAIA,UAAU,cAAd,SACGmQ,EAAKkC,MAAM,EAAG,GAAG7N,KAAI,SAAC5B,GAAD,OACpB,gBAAI5C,UAAU,mBAAmBG,QAAS,kBAAM2X,EAAWlV,EAAjB,EAA1C,WACE,gBAAK5C,UAAU,iBAAiB6D,IAAKjB,EAAK8B,MAAMqT,OAChD,cAAG/X,UAAU,aAAb,SAA2B4C,EAAKG,SAHd,OAS7B,E,iDCieD,EAzesB,SAACqF,GACrBkF,SAASC,KAAKtN,MAAM6W,SAAW,SAC/B,IAAM/U,EAAUC,kCACV0L,EAAiBtF,EAAMsF,eACvBsK,EAAUtK,EAAesK,QAC/B,GAA8BpW,EAAAA,EAAAA,WAAS,GAAvC,eAAON,EAAP,KAAgBmO,EAAhB,KACA,GAA0C7N,EAAAA,EAAAA,WAAS,GAAnD,eAAOqW,EAAP,KAAsBC,EAAtB,KAEMC,EACJ3R,aAAaC,QAAQ,YAAciH,EAAe3K,KACpD,GAAkCnB,EAAAA,EAAAA,UAASuW,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,GAAWzL,EAAAA,EAAAA,QAAO,IACxB,GAAoCjL,EAAAA,EAAAA,UAAS8L,EAAe6K,eAA5D,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA8B7W,EAAAA,EAAAA,UAAS,GAAvC,eAAO8W,EAAP,KAAgBC,EAAhB,KACA,GAAoC/W,EAAAA,EAAAA,UAAS,IAA7C,eAAOgX,EAAP,KAAmBC,EAAnB,KACA,GAAkCjX,EAAAA,EAAAA,UAAS,IAA3C,eAAOkX,EAAP,KAAkBC,EAAlB,KAGMC,GAAanM,EAAAA,EAAAA,QAAO,IAC1B,GAAwCjL,EAAAA,EAAAA,UACtC8L,EAAeuL,kBADjB,eAAOC,EAAP,KAAqBC,EAArB,KAIA,GAA0CvX,EAAAA,EAAAA,UAAS,IAAnD,eAAsBwX,GAAtB,WACA,GAA0CxX,EAAAA,EAAAA,UAAS8L,EAAevE,QAAlE,eAAOkQ,GAAP,KAAsBC,GAAtB,KACA,IAA4C1X,EAAAA,EAAAA,UAAS,MAArD,iBACM2X,IADN,aACqB1M,EAAAA,EAAAA,QAAO,KAC5B,IAA8BjL,EAAAA,EAAAA,UAAS,IAAvC,iBAAO4X,GAAP,MAAgBC,GAAhB,MACA,IAAwC7X,EAAAA,EAAAA,WAAS,GAAjD,iBAAO8X,GAAP,MAAqBC,GAArB,MACA,IAA4C/X,EAAAA,EAAAA,WAAS,GAArD,iBAAOgY,GAAP,MAAuBC,GAAvB,MAEA,IAA0CjY,EAAAA,EAAAA,WAAS,GAAnD,iBAAOkY,GAAP,MAAsBC,GAAtB,MACA,IAA0BnY,EAAAA,EAAAA,UAAS8L,EAAevI,OAAlD,iBAAOA,GAAP,MAAc6U,GAAd,MAEMC,IAAWpN,EAAAA,EAAAA,QAAO,IACxB,IAA0CjL,EAAAA,EAAAA,WAAS,GAAnD,iBAAOsY,GAAP,MAAsBC,GAAtB,MACA,IAAwCvY,EAAAA,EAAAA,UACtC8L,EAAe0M,gBADjB,iBAAOC,GAAP,MAAqBC,GAArB,OAsBAvT,EAAAA,EAAAA,YAAU,WACR,GACgB,IAAdyR,GACAA,GAAc9K,EAAe6K,gBAC7BN,EAHF,CAQA,IAAMsC,EAAcC,YAAW,WAC7BtC,GAAiB,GACjB,IAAMuC,EAAiB,yCAAG,yGACF5X,IAAAA,KAAA,UAAcd,EAAd,oBAAyC,CAC7D2Y,SAAUlC,EACVxV,MAAOoF,EAAM7B,cAHS,OAClBtD,EADkB,OAKxB8V,EAAa9V,EAAQC,MACrBgV,GAAiB,GANO,2CAAH,qDAQvBuC,GACD,GAAE,KAEH,OAAO,kBAAMlE,aAAagE,EAAnB,CAdN,CAFCxB,EAAa,GAiBhB,GAAE,CAACP,KAGJzR,EAAAA,EAAAA,YAAU,WACR,IAAMuB,EAAY,SAACC,GACK,KAAlBA,EAAMC,SACRuR,IAAiB,EAEpB,EAGD,OAFArR,OAAOC,iBAAiB,UAAWL,GAE5B,WACLI,OAAOE,oBAAoB,UAAWN,EACvC,CACF,GAAE,KAGHvB,EAAAA,EAAAA,YAAU,WACR,SAAS4T,EAAmBpS,GACtB0R,GAAS7L,UAAY6L,GAAS7L,QAAQwM,SAASrS,EAAM0D,SACvDkO,IAAiB,EAEpB,CAED,OADA7M,SAAS3E,iBAAiB,YAAagS,GAChC,WACLrN,SAAS1E,oBAAoB,YAAa+R,EAC3C,CACF,GAAE,CAACV,KAEJ,IAkCMY,GAAoB,yCAAG,gGAC3BpL,GAAW,GADgB,kBAGH5M,IAAAA,OAAA,UAAgBd,EAAhB,uBAA8C,CAClEmB,KAAM,CAAEgH,MAAO9B,EAAMuF,UAAW5K,KAAM2K,EAAe3K,QAJ9B,OAGnBE,EAHmB,OAMzBmF,EAAMyF,SAAS5K,EAAQC,KAAK4X,UAC5B1S,EAAMwF,kBAPmB,uDASzBxK,QAAQC,IAAR,MATyB,gCAY3BoM,GAAW,GAZgB,yDAAH,qDAgBpBsL,GAAY,yCAAG,WAAO3a,EAAG4a,GAAV,iFACnBvL,GAAW,IAELvM,EAAO,IAAI+X,UACZC,OAAO,QAAS9S,EAAMuF,WAC3BzK,EAAKgY,OAAO,OAAQxN,EAAe3K,MAErB,QAAViY,EAPe,wBAQjB9X,EAAKgY,OAAO,SAAU9a,EAAE6L,OAAOkP,MAAM,IARpB,kBAUOtY,IAAAA,KAAA,UACjBd,EADiB,2BAEpBmB,GAZa,cAcfoW,GAAiB8B,IAAIC,gBAAgBjb,EAAE6L,OAAOkP,MAAM,KAdrC,yDAgBf/X,QAAQC,IAAR,MAhBe,gCAmBjBoM,GAAW,GAnBM,+BAwBXvM,EAAO,CACXgH,MAAO9B,EAAMuF,UACb5K,KAAM2K,EAAe3K,KACrBoG,OAAQqQ,IA3BO,oBA8BO3W,IAAAA,KAAA,UACjBd,EADiB,2BAEpBmB,GAhCa,eAkCfoW,GAAiBE,IAlCF,0DAoCfpW,QAAQC,IAAR,MApCe,gCAuCjBoM,GAAW,GAvCM,kEAAH,wDAsDZ6L,GAAY,yCAAG,WAAOlb,GAAP,qFACnBA,EAAE8N,iBACFuB,GAAW,GAGL8L,EAAW,CACfrR,MAAO9B,EAAMuF,UACb6N,aAAc9N,EAAe3K,KAC7B0Y,QAASrD,EAAU/J,OACnBqN,SAAUvW,GACVwW,cAAetB,GAAeA,GAAahM,OAAS,SACpDuN,aAAcpD,EAAaA,EAAWnK,OAAS,OAC/CwN,OAAQnD,EACRoD,SAAUlD,EACVmD,gBAAiB7C,EAAeA,EAAa7K,OAAS,OACtD9H,YAAa6B,EAAM7B,aAfF,kBAmBK1D,IAAAA,KAAA,UACjBd,EADiB,4BAEpBwZ,GArBe,OAmBXtY,EAnBW,OAwBjBuD,aAAa8L,QAAQ,OAAQrP,EAAQC,KAAK4X,SAAS9R,KAAKkB,OACxD1D,aAAa8L,QAAQ,UAAWrP,EAAQC,KAAK4X,SAAS5N,QAAQnK,MAC9DqW,EAAiBnW,EAAQC,KAAKsI,SAC9BpD,EAAMyF,SAAS5K,EAAQC,KAAK4X,UAC5B1S,EAAMwF,kBA5BW,kDA8BjBwL,EAAiB,EAAD,IA9BC,QAgCnB3J,GAAW,GAhCQ,0DAAH,sDAoClB,OAAInO,GAEA,iBAAKtB,UAAU,0BAAf,WACE,gBAAKA,UAAU,uBAAf,UACE,wCAEF,gBAAKA,UAAU,6BAAf,UACE,gBAAKA,UAAU,mBAAf,UACE,gBAAKA,UAAU,qCAQvB,iBAAKA,UAAU,0BAAf,WACE,gBAAKA,UAAU,uBAAf,UACE,wCAEF,iBAAKA,UAAU,6BAAf,WACE,yBAAwB,IAAnB0N,EAA0B,eAAiB,oBAChD,iBACE1N,UAAS,yBACP4Z,IAAkB,2BAFtB,WAME,iBACE3Z,MAAO,CAAE+b,WAAYpC,IAAkB,QACvC5Z,UAAU,wBAFZ,WAIE,gBACEA,UAAS,yBAAoB4Z,IAAkB,iBAC/C3Z,MAAO,CACLoR,gBAAiBlM,IAAgBuI,EAAevI,OAElDtB,IAAKwV,MAELO,KACA,iBACE5Z,UAAU,sBACVG,QAAS,kBAAM0Z,IAAkB,EAAxB,EAFX,UAIE,SAAC,MAAD,CAAQ5Z,MAAO,CAAE4L,OAAQ,gBAK/B,iBAAK7L,UAAU,aAAf,WACI4Z,KACA,kBAAM5Z,UAAU,qBAAhB,WAEE,kBACEA,UAAU,aACVgM,SAAU,SAAC5L,GAAD,OAAOiY,EAAajY,EAAE6L,OAAOC,MAA7B,EACVA,MAAOkM,EACPhM,WAAS,KAGX,kCACA,kBACEpM,UAAU,cACVC,MAAO,CACLkF,MAAOA,IAET6G,SAAU,SAAC5L,GAAD,OAAO4Z,GAAS5Z,EAAE6L,OAAOC,MAAzB,EACVA,MAAO/G,MAET,mBACEoG,KAAK,SACLpL,QAAS,kBAAM4Z,IAAkBD,GAAxB,EACT7Z,MAAO,CACLoR,gBAAiBlM,MAGpB2U,KACC,SAAC,KAAD,CACE3U,MAAOA,GACP8W,iBA7MS,SAAC9W,GAAD,OAAW6U,GAAS7U,EAAM+W,IAA1B,EA8MTlc,UAAU,8BAMlB,iBACEA,UAAS,wBAAmB4Z,IAAkB,mBADhD,WAGE,eACE3Z,MAAO,CACLkc,UAAWvC,GAAiB,SAAW,QAF3C,SAKIA,GAAoC,UAAnB,mBAGpBA,KACC,+BACE,iBACE5Z,UAAS,gCACP0Z,IAAgB,oBAFpB,WAKE,kBACE1Z,UAAU,oBACVuL,KAAK,OACL6Q,OAAO,UACPnc,MAAO,CAAE6E,QAAS,QAClBuX,UAAU,EACV9N,IAAKgL,GACLvN,SAAU,SAAC5L,GAAD,OAAO2a,GAAa3a,EAAG,OAAvB,KAGVsZ,KACA,iCACE,mBAAQvZ,QAAS,kBAAMoZ,GAAanL,QAAQkO,OAA3B,EAAjB,qBAGA,kCAIJ,mBAAQnc,QAxKE,SAACC,GACtBsZ,GAGHqB,GAAa3a,EAAG,QAFhBuZ,IAAgB,EAInB,EAkKiB,SACID,GAA8B,SAAf,eAElBA,KACC,kBACE1Z,UAAS,wBACP4Z,IAAkB,aAEpBzN,YAAa,6BACbD,MAAOsN,GACPxN,SAAU,SAAC5L,GAAD,OAAOqZ,GAAWrZ,EAAE6L,OAAOC,MAA3B,UAOlB0N,KACA,iCACE,cAAG5Z,UAAU,sBAAb,6BACA,kBACEuO,IAAK+J,EACLpM,MAAOsM,EACPxY,UAAU,cACV0O,OAtRO,WACnBoK,EAAU3U,MAEf,EAoRiB6H,SAAU,SAAC5L,GACTkY,EAASlK,QAAUoK,EACnBC,EAAcrY,EAAE6L,OAAOC,MACxB,IAEF+L,IACC,gBAAKjY,UAAU,0BAAf,UACE,gBAAKA,UAAU,sCAGlB8Y,EAAU3U,OAAS,GAAoB,KAAfqU,IACvB,SAAC,EAAD,CACErI,KAAM2I,EACNhB,WA7SM,SAAClV,GAAU,IAAD,EAClC6V,EAAc7V,EAAKG,MACnB4V,EAAW/V,EAAKU,IAChBuV,EAAc,mDAAD,iBACwCjW,EAAK8B,aAD7C,aACwC,EAAYe,SADpD,SAGbsT,EAAa,GACd,QA4Saa,KACA,iCACE,cAAG5Z,UAAU,wBAAb,+BACA,kBACEuO,IAAK+J,EACLpM,MAAOgN,EACPlN,SAAU,SAAC5L,GACT4Y,EAAW5K,QAAU8K,EACrBC,EAAgB/Y,EAAE6L,OAAOC,MAC1B,EACDlM,UAAS,wBAAmB4Z,IAAkB,aAC9CzN,YACEyN,GAAiB,0BAA4B,SAMrD,iBAAK5Z,UAAU,iBAAf,WACI4Z,KACA,iCACE,cAAG5Z,UAAU,sBAAb,6BACA,oBAAQG,QAAS,kBAAMga,IAAkBD,GAAxB,EAAjB,eACoBzV,IAAjB4V,GAAA,UACMA,IACH,SAAU,KACd,SAAC,MAAD,CAAara,UAAU,sBAK5Bka,KACC,gBAAK3L,IAAK0L,GAAUja,UAAU,yBAA9B,SAzZE,CAChB,SACA,YACA,SACA,eACA,SACA,WACA,QACA,4BACA,aACA,SACA,SACA,MACA,UACA,SACA,YA2Y2BwE,KAAI,SAAC4P,GAAD,OACb,iBACEjU,QAAS,kBAvUJ,SAACiU,GAC1BkG,GAAgBlG,GAChB+F,IAAiB,EAClB,CAoUoCoC,CAAmBnI,EAAzB,EADX,SAIGA,GAFIA,EAHM,mBAe3B,iBAAKpU,UAAU,eAAf,WACI4Z,KACA,mBAAQ5Z,UAAU,WAAWG,QAASmb,GAAtC,mBAIF,mBAAQtb,UAAU,aAAaG,QApVX,WAEtByZ,IACFC,IAAkB,GAClBF,IAAgB,IAIhBvR,EAAMwF,iBAET,EA0UO,SACIgM,GAA4B,OAAX,YAEnB5B,IACA,mBACEhY,UAAU,mCACVG,QAAS0a,GAFX,oCAWX,C,wHC1eK2B,EAAa,IAAIC,IAAJ,CAAkB,CACnCC,SAAU1a,qCAGNxB,EAAgBgG,aAAaC,QAAQ,WAyC3C,EAvCwB,SAAC,GAMlB,IALLkR,EAKI,EALJA,SACA/C,EAII,EAJJA,UACA8C,EAGI,EAHJA,cACA3W,EAEI,EAFJA,cACAN,EACI,EADJA,aAUA,IARAsG,EAAAA,EAAAA,YAAU,WACRyV,EAAWjH,eAAe9U,EAC3B,GAAE,CAACA,KAEJsG,EAAAA,EAAAA,YAAU,WACR2Q,GACD,GAAE,CAACC,IAEClX,EACL,OACE,+BACE,gBAAKT,UAAU,qBAAf,UACE,SAAC,KAAD,CACEgD,MAAOvC,EACPkc,SAAU,SAACC,GACJA,EAAM5b,WAAWD,GACvB,EACD8b,KAAMlF,EAAW,CAACA,GAAY,GAC9BmF,KAAMlI,EACNmI,OAAQ,CACN5X,MAAO,QACP6X,QAAS,kBACTC,YAAazc,EAAc2E,MAC3B+X,iBAAkB,QAClBC,eAAgB3c,EAAc2E,YAMzC,C","sources":["components/Placeholder/Placeholder.js","components/Row/Row.js","hooks/useFetchBanner.js","components/Banner/Banner.js","components/Nav/NavDropdown.js","components/Login/Profiles/ProfileEditor/AccountEditor.js","components/Nav/Nav.js","components/MainRow/MainRow.js","components/TrendingRow/TrendingRow.js","components/NewReleases/NewReleases.js","requestsIGDB.js","components/Dashboard/Dashboard.js","hooks/useFetchGenres.js","hooks/useSpotifyAuth.js","hooks/useSteamAuth.js","components/Login/Profiles/ProfileEditor/SearchList.js","components/Login/Profiles/ProfileEditor/ProfileEditor.js","components/SpotifyPlayback/SpotifyPlayback.js"],"sourcesContent":["import React from 'react';\r\nimport './Placeholder.css';\r\n\r\nconst Placeholder = ({ delay }) => {\r\n  return (\r\n    <div\r\n      className='placeholder'\r\n      style={{ animationDelay: `${delay}ms` }}\r\n      onClick={(e) => e.stopPropagation()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Placeholder;\r\n","import React, { useState, lazy, Suspense } from 'react';\r\nimport './Row.css';\r\nimport axios from 'axios';\r\nimport Placeholder from '../Placeholder/Placeholder';\r\nimport {\r\n  FaPlay,\r\n  FaPause,\r\n  FaPlusSquare,\r\n  FaMinusSquare,\r\n  FaGamepad,\r\n  FaMusic,\r\n} from 'react-icons/fa';\r\nimport { CiSquareMore } from 'react-icons/ci';\r\n// ESRB Logos\r\nimport eRating from '../../assets/images/ESRB_E.png';\r\nimport tRating from '../../assets/images/ESRB_T.png';\r\nimport mRating from '../../assets/images/ESRB_M.png';\r\nimport rpRating from '../../assets/images/ESRB_RP.png';\r\n\r\nconst GamePreview = lazy(() => import('./GamePreview/GamePreview'));\r\n\r\nfunction Row({\r\n  activeProfile,\r\n  spotifyToken,\r\n  genreDetails,\r\n  playTrack,\r\n  currentTrack,\r\n  setGameDetails,\r\n  resumePlayback,\r\n  pausePlayback,\r\n  isPlaying,\r\n  currentGameOpen,\r\n  closeGameWindow,\r\n  openGame,\r\n  updateGameStatus,\r\n  setNotification,\r\n  loading,\r\n  hoverGame,\r\n  hoverAway,\r\n  currentHover,\r\n  currentCollection,\r\n  gameStatus,\r\n}) {\r\n  const [currentGame, setCurrentGame] = useState(null);\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const [currentPlaylist, setCurrentPlaylist] = useState([]);\r\n  const [viewingSoundtrack, setViewingSoundtrack] = useState(false);\r\n  const [viewingPreview, setViewingPreview] = useState(false);\r\n  const [playlistLoading, setPlaylistLoading] = useState(false);\r\n\r\n  const genreTitle = genreDetails[0][0];\r\n  const genreList = genreDetails[0][1];\r\n\r\n  const fetchGameOST = async (game) => {\r\n    if (!spotifyToken) {\r\n      setCurrentGame(null);\r\n      setNotification(\r\n        'ERROR',\r\n        'Please connect to Spotify through the nav dropdown!'\r\n      );\r\n      return;\r\n    }\r\n    try {\r\n      setPlaylistLoading(true);\r\n      const request = await axios.get(`${baseURL}/app/spotify_album`, {\r\n        params: {\r\n          game: game.name,\r\n          token: spotifyToken,\r\n          baseURL,\r\n        },\r\n      });\r\n      if (request.data.status !== 'OK') {\r\n        console.log(request.data);\r\n        setPlaylistLoading(false);\r\n      } else {\r\n        setCurrentGame(game.id);\r\n        setCurrentPlaylist(request.data.tracks);\r\n        setViewingSoundtrack(true);\r\n        setPlaylistLoading(false);\r\n\r\n        return request.data.tracks;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setPlaylistLoading(false);\r\n      return error;\r\n    }\r\n  };\r\n\r\n  // Grab trailer video from selected game\r\n  const fetchGameDetails = (game) => {\r\n    closeGameWindow();\r\n    setGameDetails(game);\r\n  };\r\n\r\n  const checkGameOwned = (game) => {\r\n    const exists = currentCollection.some((item) => item.id === game.id);\r\n    if (exists) {\r\n      return (\r\n        <div\r\n          className='row__blur_item'\r\n          onClick={() => updateGameStatus('REMOVE', game)}\r\n        >\r\n          <FaMinusSquare className='blur_item_icon' />\r\n          <p>Remove</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          className='row__blur_item'\r\n          onClick={() => updateGameStatus('ADD', game)}\r\n        >\r\n          <FaPlusSquare className='blur_item_icon' />\r\n          <p>Add</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const viewGameSoundtrack = (e, game) => {\r\n    e.stopPropagation();\r\n    closeGameWindow();\r\n    setCurrentGame(game.id);\r\n    fetchGameOST(game);\r\n  };\r\n\r\n  const closeGameSoundtrack = (e) => {\r\n    e.stopPropagation();\r\n    setCurrentGame(null);\r\n    setViewingSoundtrack(false);\r\n  };\r\n\r\n  const selectTrackHandler = (e, track) => {\r\n    e.stopPropagation();\r\n    if (currentTrack !== null && track.name == currentTrack.name) {\r\n      resumePlayback();\r\n    }\r\n    playTrack(track);\r\n  };\r\n\r\n  const formatTrackTitle = (title) => {\r\n    return title.split('-')[0].split('(')[0];\r\n  };\r\n\r\n  // Return a ESRB rating picture according to fetched game\r\n  const determineESRB = (game) => {\r\n    if (!game || !game.age_ratings)\r\n      return <img className='row__poster__esrb_img' src={rpRating} />;\r\n    const hasRating = game?.age_ratings.filter(\r\n      (rating) => rating.category == 1 || rating.category == 2\r\n    );\r\n\r\n    if (hasRating.length == 0 || !game.age_ratings)\r\n      return <img className='row__poster__esrb_img' src={rpRating} />;\r\n    const esrb = hasRating[0].rating;\r\n\r\n    switch (esrb) {\r\n      case 1:\r\n      case 2:\r\n      case 8:\r\n      case 9:\r\n        return (\r\n          <img\r\n            className='row__poster__esrb_img'\r\n            alt='esrb E rating'\r\n            src={eRating}\r\n          />\r\n        );\r\n      case 3:\r\n      case 4:\r\n      case 10:\r\n        return (\r\n          <img\r\n            className='row__poster__esrb_img'\r\n            alt='esrb T rating'\r\n            src={tRating}\r\n          />\r\n        );\r\n      case 5:\r\n      case 11:\r\n        return (\r\n          <img\r\n            className='row__poster__esrb_img'\r\n            alt='esrb M rating'\r\n            src={mRating}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <img\r\n            className='row__poster__esrb_img'\r\n            alt='esrb RP rating'\r\n            src={rpRating}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='row'>\r\n      <h2 className='row__title'>{genreTitle}</h2>\r\n      <div className='row__posters'>\r\n        {genreList.map(\r\n          (game) =>\r\n            game.cover !== undefined && (\r\n              <React.Fragment key={game.id}>\r\n                {!loading && (\r\n                  <div\r\n                    className={`row__poster_wrapper ${\r\n                      currentGameOpen == game.id && 'viewing_game'\r\n                    }`}\r\n                    style={{\r\n                      zIndex:\r\n                        currentGameOpen !== game.id &&\r\n                        currentGameOpen !== null &&\r\n                        '-1',\r\n                    }}\r\n                    onMouseOver={() => hoverGame(game.id)}\r\n                    onMouseLeave={() =>\r\n                      viewingSoundtrack ? hoverGame(game.id) : hoverAway()\r\n                    }\r\n                  >\r\n                    {currentHover == game.id && !currentGameOpen && (\r\n                      <div\r\n                        className={`row__blur_wrapper ${\r\n                          gameStatus == 'error'\r\n                            ? 'blur_error'\r\n                            : gameStatus == 'success'\r\n                            ? 'blur_success'\r\n                            : ''\r\n                        }`}\r\n                      >\r\n                        {!playlistLoading ? (\r\n                          <div\r\n                            className='row__blur_details'\r\n                            style={{\r\n                              display: currentGame == game.id && 'none',\r\n                            }}\r\n                          >\r\n                            {/* ADD GAME */}\r\n                            {checkGameOwned(game)}\r\n\r\n                            {/* GET DETAILS */}\r\n                            <div\r\n                              className='row__blur_item'\r\n                              onClick={() => {\r\n                                fetchGameDetails(game);\r\n                              }}\r\n                            >\r\n                              <CiSquareMore className='blur_item_icon more' />\r\n                              <p>Details</p>\r\n                            </div>\r\n                            {/* GET SOUNDTRACK */}\r\n                            <div\r\n                              onClick={(e) => viewGameSoundtrack(e, game)}\r\n                              className='row__blur_item'\r\n                            >\r\n                              <FaMusic className='blur_item_icon music' />\r\n                              <p>Soundtrack</p>\r\n                            </div>\r\n                            {/* VIEW 3D CASE */}\r\n                            <div\r\n                              className='row__blur_item'\r\n                              onClick={() => openGame(game)}\r\n                            >\r\n                              <FaGamepad className='blur_item_icon' />\r\n                              <p>View Case</p>\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <div className='playlist_loading'>\r\n                            <div className='playlist_loading_dot' />\r\n                            <div className='playlist_loading_dot' />\r\n                            <div className='playlist_loading_dot' />\r\n                          </div>\r\n                        )}\r\n                        {viewingSoundtrack && currentGame == game.id && (\r\n                          <div className='soundtrack_container'>\r\n                            <span onClick={(e) => closeGameSoundtrack(e)}>\r\n                              ←\r\n                            </span>\r\n                            <h3>Spotify OST</h3>\r\n                            <ul className='soundtracks'>\r\n                              {currentPlaylist?.map((track) => (\r\n                                <li\r\n                                  key={track.id}\r\n                                  onClick={(e) => e.stopPropagation()}\r\n                                  className='soundtrack'\r\n                                >\r\n                                  <p\r\n                                    style={{\r\n                                      color:\r\n                                        currentTrack !== null &&\r\n                                        currentTrack.name == track.name\r\n                                          ? 'green'\r\n                                          : 'white',\r\n                                      fontWeight:\r\n                                        currentTrack !== null &&\r\n                                        currentTrack.name == track.name\r\n                                          ? '600'\r\n                                          : '400',\r\n                                    }}\r\n                                  >\r\n                                    {formatTrackTitle(track.name)}\r\n                                  </p>\r\n                                  {(currentTrack !== null &&\r\n                                    currentTrack.name !== track.name) ||\r\n                                  !isPlaying ? (\r\n                                    <FaPlay\r\n                                      onClick={(e) =>\r\n                                        selectTrackHandler(e, track)\r\n                                      }\r\n                                    />\r\n                                  ) : (\r\n                                    <FaPause onClick={(e) => pausePlayback()} />\r\n                                  )}\r\n                                </li>\r\n                              ))}\r\n                            </ul>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                    <div className='row__poster_container'>\r\n                      <>\r\n                        {/* FRONT OF POSTER */}\r\n                        <div\r\n                          className='row__poster_front'\r\n                          style={{\r\n                            transformStyle: currentGameOpen && 'revert',\r\n                          }}\r\n                        >\r\n                          <img\r\n                            loading='lazy'\r\n                            className='row__poster'\r\n                            src={`https://images.igdb.com/igdb/image/upload/t_cover_big_2x/${game.cover?.image_id}.jpg`}\r\n                            alt={game.name + ' cover image'}\r\n                          />\r\n                        </div>\r\n                      </>\r\n                    </div>\r\n                    {currentGameOpen === game.id && (\r\n                      <Suspense fallback={<>...</>}>\r\n                        <GamePreview\r\n                          game={game}\r\n                          gameCover={`https://images.igdb.com/igdb/image/upload/t_1080p_2x/${game.cover?.image_id}.jpg`}\r\n                          ratingImage={determineESRB(game)}\r\n                          viewingPreview={viewingPreview}\r\n                          openGame={() => setViewingPreview(true)}\r\n                          closeGame={() => setViewingPreview(false)}\r\n                        />\r\n                      </Suspense>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </React.Fragment>\r\n            )\r\n        )}\r\n        {loading && (\r\n          <div className='row__loading_container'>\r\n            {[...Array(10)].map((item, i) => (\r\n              <div key={i} className='row__placeholder__wrapper'>\r\n                <Placeholder key={i} delay={i} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useFetchBanner = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [bannerGamesList, setBannerGamesList] = useState([]);\r\n  const [currentGame, setCurrentGame] = useState('');\r\n  const [serverError, setServerError] = useState(null);\r\n  const twitchToken = localStorage.getItem('twitch_auth');\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const request = await axios.post(`${baseURL}/app/fetch_banner_list`, {\r\n        token: twitchToken,\r\n      });\r\n      const selectedGame =\r\n        request.data[Math.floor(Math.random() * request.data.length - 1)];\r\n      setBannerGamesList(request.data);\r\n      setCurrentGame(selectedGame);\r\n      setIsLoading(false);\r\n      return currentGame;\r\n    } catch (error) {\r\n      console.log(error);\r\n      setServerError(error);\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!twitchToken || bannerGamesList.length > 0) return;\r\n    console.log('hELLO');\r\n    fetchData();\r\n  }, [twitchToken, bannerGamesList, bannerGamesList.length]);\r\n\r\n  const displayNewBanner = () => {\r\n    const newGame =\r\n      bannerGamesList[Math.floor(Math.random() * bannerGamesList.length - 1)];\r\n    if (!newGame) {\r\n      setCurrentGame(\r\n        bannerGamesList[Math.floor(Math.random() * bannerGamesList.length - 1)]\r\n      );\r\n      bannerGamesList.splice(bannerGamesList.indexOf(newGame), 1);\r\n      return;\r\n    } else {\r\n      setCurrentGame(newGame);\r\n      bannerGamesList.splice(bannerGamesList.indexOf(newGame), 1);\r\n      return;\r\n    }\r\n  };\r\n\r\n  return {\r\n    isLoading,\r\n    serverError,\r\n    currentGame,\r\n    displayNewBanner,\r\n  };\r\n};\r\n\r\nexport default useFetchBanner;\r\n","import './Banner.css';\r\nimport { BiRefresh } from 'react-icons/bi';\r\nimport useFetchBanner from '../../hooks/useFetchBanner';\r\n\r\nfunction Banner({ setGameDetails, addGame, activeProfile }) {\r\n  const bannerGame = useFetchBanner();\r\n  console.log(bannerGame)\r\n\r\n  // Wait for game deatils to finish loading or the game name shows up undefined\r\n  // Undefined is a game name apart of the dataset and will display jibberish\r\n  if (bannerGame.isLoading || !bannerGame.currentGame) {\r\n    return (\r\n      <div className='banner__loading'>\r\n        <div className='banner__spinner' />\r\n      </div>\r\n    );\r\n  }\r\n  const hasArt = bannerGame.currentGame?.artworks !== undefined;\r\n\r\n  // Don't allow user to add game if already in collection\r\n  const exists =\r\n    activeProfile.collection &&\r\n    activeProfile.collection.some(\r\n      (title) => title?.id === bannerGame.currentGame?.id\r\n    );\r\n\r\n  // If the game description is longer that 150 characters, replace the reaminder with the ellipsis '...'\r\n  const truncate = (str, n) => {\r\n    return str?.length > n ? str.substr(0, n - 1) + '...' : str;\r\n  };\r\n\r\n  return (\r\n    <header className='banner' key={bannerGame.currentGame.id}>\r\n      <div\r\n        className='banner__img'\r\n        style={{\r\n          backgroundSize: 'cover',\r\n          backgroundImage: `url(//images.igdb.com/igdb/image/upload/t_1080p_2x/${\r\n            hasArt\r\n              ? bannerGame.currentGame.artworks[0]?.image_id\r\n              : bannerGame.currentGame.cover?.image_id\r\n          }.jpg)`,\r\n          backgroundPosition: 'center center',\r\n        }}\r\n      />\r\n      <div className='banner__contents'>\r\n        <h1 className='banner__title'>{bannerGame.currentGame?.name}</h1>\r\n\r\n        <div className='banner__buttons'>\r\n          <button\r\n            className='banner__button'\r\n            onClick={() => setGameDetails(bannerGame.currentGame)}\r\n          >\r\n            See Details\r\n          </button>\r\n          {!exists && (\r\n            <button\r\n              className='banner__button'\r\n              onClick={() => addGame(bannerGame.currentGame)}\r\n            >\r\n              Add to Collection\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        <h1 className='banner__description'>\r\n          {truncate(bannerGame.currentGame?.summary, 150)}\r\n        </h1>\r\n      </div>\r\n      <div className='banner--fadeBottom' />\r\n\r\n      <BiRefresh\r\n        size={35}\r\n        className='banner__refresh_icon'\r\n        onClick={bannerGame.displayNewBanner}\r\n      />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './NavDropdown.css';\r\nimport { Link } from 'react-router-dom';\r\n// React Icons\r\nimport {\r\n  FaSortUp,\r\n  FaSpotify,\r\n  FaUserEdit,\r\n  FaPlaystation,\r\n  FaGamepad,\r\n} from 'react-icons/fa';\r\nimport { IoSettingsOutline } from 'react-icons/io5';\r\nimport { MdEdit } from 'react-icons/md';\r\n\r\nimport steamAuthBtn from '../../assets/images/steam-auth-btn.png';\r\n\r\nconst SPOTIFY_AUTH_URL = `https://accounts.spotify.com/authorize?client_id=${process.env.REACT_APP_SPOTIFY_CLIENT_ID}&response_type=code&redirect_uri=${process.env.REACT_APP_BASE_URL}&scope=streaming%20user-read-email%20user-read-private%20user-library-read%20user-library-modify%20user-read-playback-state%20user-modify-playback-state`;\r\n\r\nconst NavDropdown = (props) => {\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const allProfiles = props.allProfiles;\r\n\r\n  // Listens for escape key press to close nav dropdown\r\n  useEffect(() => {\r\n    const handleEsc = (event) => {\r\n      if (event.keyCode === 27) {\r\n        props.closeNavDropdown();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleEsc);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEsc);\r\n    };\r\n  }, []);\r\n\r\n  // Change current user\r\n  const changeUserHandler = (user) => {\r\n    props.changeProfile(user);\r\n  };\r\n\r\n  const generatePlaystationTitles = async () => {\r\n    try {\r\n      const request = await axios.get(`${baseURL}/playstation/user_titles`);\r\n      console.log(request.data);\r\n      for (let game of request.data) {\r\n        for (let i = 0; i < game.earnedTrophies.length; i++) {\r\n          if (game.earnedTrophies[i].earned) {\r\n            game.allTrophies[i].earned = true;\r\n          } else game.allTrophies[i].earned = false;\r\n        }\r\n      }\r\n\r\n      props.currentCollection.filter((ownedGame) => {\r\n        const inCollection = request.data.some((game) => {\r\n          if (ownedGame.name.toLowerCase() === game.name.toLowerCase()) {\r\n            ownedGame.trophies = game.allTrophies;\r\n            axios.put(`${baseURL}/app/update_game_trophies`, {\r\n              email: localStorage.getItem('user'),\r\n              name: props.activeProfile.name,\r\n              gameId: ownedGame.id,\r\n              trophies: game.allTrophies,\r\n            });\r\n          } else {\r\n            console.log('New game bruh');\r\n            axios.post(`${baseURL}/app/update_collection`, {\r\n              email: localStorage.getItem('user'),\r\n              currentProfile: localStorage.getItem('profile'),\r\n              name: game.name,\r\n              id: game.id,\r\n              imageURL: `//images.igdb.com/igdb/image/upload/t_1080p_2x/${game.cover.image_id}.jpg`,\r\n              playtime: 0,\r\n              origin: 'gameflix',\r\n            });\r\n          }\r\n        });\r\n        return inCollection;\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n      return err;\r\n    }\r\n  };\r\n\r\n  allProfiles.sort((a, b) => (a.name - b.name ? 1 : -1));\r\n\r\n  return (\r\n    <div className='dropdown'>\r\n      <FaSortUp className='dropdown__arrow' />\r\n      <div className='dropdown__profiles'>\r\n        <ul className='dropdown__profiles_list'>\r\n          {allProfiles.map((user) => {\r\n            if (user.name !== props.activeProfile.name) {\r\n              return (\r\n                <li\r\n                  className='dropdown__profiles_item'\r\n                  key={user.name}\r\n                  onClick={() => changeUserHandler(user)}\r\n                >\r\n                  <img\r\n                    src={user.avatar}\r\n                    className='dropdown__profile_icon'\r\n                    alt={`${user.name} avatar icon`}\r\n                  />\r\n                  <p className='dropdown__profile_name'>{user.name}</p>\r\n                </li>\r\n              );\r\n            }\r\n          })}\r\n          <li className='dropdown__profiles_item' onClick={props.toProfilePage}>\r\n            <span className='dropdown__profiles_manage'>\r\n              <MdEdit size={22} />\r\n            </span>\r\n            <p className='dropdown__profile_name'>Manage Profiles</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className='dropdown__settings'>\r\n        <div\r\n          className='dropdown__settings_item'\r\n          onClick={() => props.editProfile()}\r\n        >\r\n          <span className='dropdown__settings_item_icon'>\r\n            <FaUserEdit size={18} />\r\n          </span>\r\n          <p>My Profile</p>\r\n        </div>\r\n        <div\r\n          className='dropdown__settings_item'\r\n          onClick={() => props.viewCollection()}\r\n        >\r\n          <span className='dropdown__settings_item_icon'>\r\n            <FaGamepad size={18} />\r\n          </span>\r\n          <p>My Collection</p>\r\n        </div>\r\n        <div className='dropdown__settings_item' onClick={props.editAccount}>\r\n          <span className='dropdown__settings_item_icon'>\r\n            <IoSettingsOutline size={18} />\r\n          </span>\r\n          <p>Account Settings</p>\r\n        </div>\r\n      </div>\r\n      <div className='dropdown__settings'>\r\n        {/* <div\r\n          className='dropdown__settings_item'\r\n          onClick={generatePlaystationTitles}\r\n        >\r\n          <span className='dropdown__settings_item_icon'>\r\n            <FaPlaystation size={18} />\r\n          </span>\r\n          <p>Link Playstation</p>\r\n        </div> */}\r\n        <a href={SPOTIFY_AUTH_URL} className='dropdown__settings_item'>\r\n          <span className='dropdown__settings_item_icon'>\r\n            <FaSpotify\r\n              size={18}\r\n              style={{ color: props.spotifyToken ? '#1DB954' : '#FFF' }}\r\n            />\r\n          </span>\r\n          <p>Spotify Authentication</p>\r\n        </a>\r\n        {/* <div\r\n          className='dropdown__settings_item'\r\n          style={{\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            paddingBottom: '0',\r\n            paddingLeft: '0',\r\n          }}\r\n        >\r\n          <Link to={`http://localhost:3001/api/auth/steam`}>\r\n            <img className='steam_btn' src={steamAuthBtn} />\r\n          </Link>\r\n        </div> */}\r\n      </div>\r\n      <div className='dropdown__settings_links'>\r\n        <Link\r\n          to='/login'\r\n          className='dropdown__settings_link'\r\n          onClick={props.logoutHandler}\r\n        >\r\n          Sign out of GameFlix\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavDropdown;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AiFillEyeInvisible, AiFillEye } from \"react-icons/ai\";\r\nimport axios from \"axios\";\r\n\r\nconst AccountEditor = ({\r\n  closeAccountSettings,\r\n  setLoggedUser,\r\n  currentUser,\r\n}) => {\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const [deletingAccount, setDeletingAccount] = useState(false);\r\n  const [updateStatus, setUpdateStatus] = useState(\"\");\r\n  // EMAIL STATES\r\n  const [emailValue, setEmailValue] = useState(currentUser.email);\r\n  const [newEmailValue, setNewEmailValue] = useState(\"\");\r\n  let repeatValue = \"\";\r\n  const [changingEmail, setChangingEmail] = useState(false);\r\n  // PASSWORD STATES\r\n  const [passwordValue, setPasswordValue] = useState(currentUser.password);\r\n  const [hidePassword, setHidePassword] = useState(true);\r\n  const [newPasswordValue, setNewPasswordValue] = useState(\"\");\r\n  const [changingPassword, setChangingPassword] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (hidePassword) {\r\n      const hiddenPassword = currentUser.password.replace(/./gi, \"*\");\r\n      setPasswordValue(hiddenPassword);\r\n    } else {\r\n      setPasswordValue(currentUser.password);\r\n    }\r\n  }, [hidePassword]);\r\n\r\n  const updateEmail = async (email) => {\r\n    setUpdateStatus(\"\");\r\n    try {\r\n      const request = await axios.post(`${baseURL}/app/update_user_email`, {\r\n        originalEmail: currentUser.email,\r\n        newEmail: email,\r\n      });\r\n\r\n      if (request.data.status < 400) {\r\n        setLoggedUser(request.data.user);\r\n        setUpdateStatus({ type: \"success\", message: request.data.message });\r\n        setEmailValue(request.data.user.email);\r\n        setNewEmailValue(\"\");\r\n        setChangingEmail(false);\r\n      } else {\r\n        setUpdateStatus({ type: \"error\", message: request.data.message });\r\n        setNewEmailValue(\"\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const emailChangeHandler = () => {\r\n    if (!changingEmail) {\r\n      setChangingEmail(true);\r\n      setChangingPassword(false);\r\n    } else {\r\n      if (newEmailValue !== \"\") {\r\n        updateEmail(newEmailValue);\r\n      } else {\r\n        setChangingEmail(false);\r\n        setNewEmailValue(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteAccountHandler = async () => {\r\n    try {\r\n      await axios.delete(`${baseURL}/app/delete_account`, {\r\n        data: { id: currentUser._id },\r\n      });\r\n      window.location = \"/\";\r\n      localStorage.removeItem(\"user\");\r\n      localStorage.removeItem(\"profile\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const passwordChangeHandler = () => {\r\n    if (!changingPassword) {\r\n      setChangingPassword(true);\r\n      setChangingEmail(false);\r\n    } else {\r\n      if (newPasswordValue !== \"\") {\r\n        repeatValue = newEmailValue;\r\n      } else {\r\n        setChangingPassword(false);\r\n        setNewPasswordValue(\"\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const determineEmailValidity = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const request = await axios.post(`${baseURL}/app/update_user_profile`, {\r\n        originalEmail: emailValue,\r\n        newEmail: newEmailValue,\r\n      });\r\n      console.log(request);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile_edit__container\">\r\n      <div className=\"profile_edit__header\">\r\n        <h3>GAMEFLIX</h3>\r\n      </div>\r\n      <div className=\"profile_edit__form_wrapper\" style={{ height: \"350px\" }}>\r\n        <h3>Account Settings</h3>\r\n        <div className=\"form_container\">\r\n          <form className=\"account_edit__form\">\r\n            {/* EMAIL CONTAINER */}\r\n            <div className=\"account_email_container\">\r\n              {updateStatus.type == \"error\" ? (\r\n                <p className=\"account_email_error\">{updateStatus.message}</p>\r\n              ) : (\r\n                <p className=\"account_email_success\">{updateStatus.message}</p>\r\n              )}\r\n              <h4\r\n                style={{ color: \"white\", fontSize: \"2rem\", marginLeft: \"2px\" }}\r\n              >\r\n                Email\r\n              </h4>\r\n              <input\r\n                className=\"account_email_input\"\r\n                onChange={(e) => setEmailValue(e.target.value)}\r\n                value={emailValue}\r\n              />\r\n\r\n              {/* NEW EMAIL */}\r\n              {changingEmail && (\r\n                <>\r\n                  <input\r\n                    className=\"account_email_input\"\r\n                    onChange={(e) => setNewEmailValue(e.target.value)}\r\n                    value={newEmailValue}\r\n                    placeholder=\"Enter new email\"\r\n                    autoFocus\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      setNewEmailValue(\"\");\r\n                      setChangingEmail(false);\r\n                    }}\r\n                    className=\"account_email_save_btn\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </>\r\n              )}\r\n\r\n              <button\r\n                type=\"button\"\r\n                onClick={emailChangeHandler}\r\n                className=\"save_btn\"\r\n              >\r\n                {!changingEmail ? \"Change Email\" : \"Save Email\"}\r\n              </button>\r\n            </div>\r\n\r\n            {/* PASSWORD CONTAINER */}\r\n            <div className=\"account_password_container\">\r\n              <h4\r\n                style={{ color: \"white\", fontSize: \"2rem\", marginLeft: \"2px\" }}\r\n              >\r\n                Password\r\n              </h4>\r\n              <input\r\n                className=\"account_password_input\"\r\n                onChange={(e) => setPasswordValue(e.target.value)}\r\n                value={passwordValue}\r\n              />\r\n              <span\r\n                className=\"account_password_visible_icon\"\r\n                onClick={() => setHidePassword(!hidePassword)}\r\n              >\r\n                {!hidePassword ? <AiFillEye /> : <AiFillEyeInvisible />}\r\n              </span>\r\n\r\n              {/* NEW PASSWORD */}\r\n              {changingPassword && (\r\n                <>\r\n                  <input\r\n                    className=\"account_password_input\"\r\n                    onChange={(e) => setNewPasswordValue(e.target.value)}\r\n                    value={newPasswordValue}\r\n                    placeholder=\"Enter new password\"\r\n                    autoFocus\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      setNewPasswordValue(\"\");\r\n                      setChangingPassword(false);\r\n                    }}\r\n                    className=\"account_password_save_btn\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </>\r\n              )}\r\n              <button\r\n                type=\"button\"\r\n                onClick={passwordChangeHandler}\r\n                className=\"save_btn\"\r\n              >\r\n                {!changingPassword ? \"Change Password\" : \"Save Password\"}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        {/* FORM ACTIONS */}\r\n        <div\r\n          className=\"form_actions\"\r\n          style={{ justifyContent: \"space-between\" }}\r\n        >\r\n          <button className=\"cancel_btn\" onClick={closeAccountSettings}>\r\n            Back\r\n          </button>\r\n          <button\r\n            className=\"delete_account_btn\"\r\n            onClick={() => setDeletingAccount(true)}\r\n          >\r\n            Delete Account\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {deletingAccount && (\r\n        <div className=\"delete_account_modal\">\r\n          <div className=\"delete_account_modal_content\">\r\n            <h4>Are you sure you want to delete your account?</h4>\r\n            <div className=\"delete_account_modal_actions\">\r\n              <div className=\"modal_action_option\">\r\n                <p>Yes</p>\r\n                <span\r\n                  className=\"video-game-button\"\r\n                  onClick={deleteAccountHandler}\r\n                >\r\n                  A\r\n                </span>\r\n              </div>\r\n              <div className=\"modal_action_option\">\r\n                <p>No</p>\r\n                <span\r\n                  className=\"video-game-button\"\r\n                  onClick={() => setDeletingAccount(false)}\r\n                >\r\n                  B\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountEditor;\r\n","import React, { useRef } from 'react';\r\nimport './Nav.css';\r\nimport logo from '../../assets/images/gameflix-logo.png';\r\nimport defaultAvatar from '../../assets/images/basic_avatar.png';\r\nimport { useEffect, useState } from 'react';\r\nimport { FaSistrix, FaAngleUp } from 'react-icons/fa';\r\nimport NavDropdown from './NavDropdown';\r\nimport ProfileEditor from '../Login/Profiles/ProfileEditor/ProfileEditor';\r\nimport AccountEditor from '../Login/Profiles/ProfileEditor/AccountEditor';\r\n\r\nfunction Nav(props) {\r\n  const [displayNav, setDisplayNav] = useState(false);\r\n  const [displayDropdown, setDisplayDropdown] = useState(false);\r\n  const [displaySearch, setDisplaySearch] = useState(false);\r\n  const searchRef = useRef('');\r\n  const [editingProfile, setEditingProfile] = useState(false);\r\n  const [editingAccount, setEditingAccount] = useState(false);\r\n\r\n  const profile = props.activeProfile;\r\n\r\n  const closeNavDropdown = () => {\r\n    setDisplayDropdown(false);\r\n  };\r\n\r\n  const closeSearch = () => {\r\n    if (searchRef.current.value.length > 0) {\r\n      return;\r\n    }\r\n    setDisplaySearch(false);\r\n  };\r\n\r\n  const formSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const searchValue = searchRef.current.value.trim();\r\n    if (searchValue.length == 0) return;\r\n    props.fetchSubmittedGame(searchValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // If the user scrolls down from the top of page, add a black background to the nav\r\n    const scrollNavListener = () => {\r\n      window.addEventListener('scroll', () => {\r\n        if (window.scrollY > 100) {\r\n          setDisplayNav(true);\r\n        } else setDisplayNav(false);\r\n      });\r\n    };\r\n    scrollNavListener();\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', scrollNavListener);\r\n    };\r\n  }, []);\r\n\r\n  const cancelEdit = () => {\r\n    document.body.style.overflowY = 'scroll';\r\n    setEditingProfile(false);\r\n    setEditingAccount(false);\r\n  };\r\n\r\n  const editProfileHandler = () => {\r\n    document.body.style.overflowY = 'hidden';\r\n    setEditingProfile(true);\r\n  };\r\n\r\n  const editAccountHandler = () => {\r\n    document.body.style.overflowY = 'hidden';\r\n    setEditingAccount(true);\r\n  };\r\n\r\n  const saveEdit = () => {\r\n    props.saveEdit();\r\n    setEditingProfile(false);\r\n  };\r\n\r\n  // Handles escape key press for search input\r\n  useEffect(() => {\r\n    const handleEsc = (event) => {\r\n      if (event.keyCode === 27) {\r\n        // If the search input is open, close it\r\n        setDisplaySearch(false);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleEsc);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEsc);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${displayNav && 'nav__hide'}`}>\r\n      {editingProfile && (\r\n        <div className='nav_edit_profile'>\r\n          <ProfileEditor\r\n            currentProfile={profile}\r\n            userEmail={props.currentUser.email}\r\n            viewAllProfiles={cancelEdit}\r\n            saveEdit={saveEdit}\r\n            getProfile={(test) => props.selectProfile(test)}\r\n            twitchToken={props.twitchToken}\r\n          />\r\n        </div>\r\n      )}\r\n      {editingAccount && (\r\n        <div className='nav_edit_profile'>\r\n          {' '}\r\n          <AccountEditor\r\n            closeAccountSettings={cancelEdit}\r\n            setLoggedUser={(user) => props.setLoggedUser(user)}\r\n            currentUser={props.currentUser}\r\n          />{' '}\r\n        </div>\r\n      )}\r\n      <img\r\n        className='nav__logo'\r\n        src={logo}\r\n        alt='GameFlix Logo'\r\n        onClick={() => (window.location = '/')}\r\n      />\r\n      <div className='nav__right'>\r\n        <div className='nav__search'>\r\n          {displaySearch && (\r\n            <form className='nav__search_form' onSubmit={formSubmitHandler}>\r\n              <input\r\n                ref={searchRef}\r\n                autoFocus\r\n                type='text'\r\n                placeholder='Titles, publishers, genres'\r\n                defaultValue={\r\n                  props.searchedGame ? `${props.searchedGame.name}` : ''\r\n                }\r\n                onBlur={closeSearch}\r\n              />\r\n            </form>\r\n          )}\r\n          <FaSistrix\r\n            className={`nav__search_icon ${displaySearch && 'search_active'}`}\r\n            onClick={() => setDisplaySearch(!displaySearch)}\r\n          />\r\n        </div>\r\n        <div\r\n          className='nav__actions'\r\n          onMouseLeave={() => setDisplayDropdown(false)}\r\n        >\r\n          <div\r\n            className='nav__avatar_container'\r\n            onMouseOver={() => setDisplayDropdown(true)}\r\n          >\r\n            <img\r\n              className='nav__avatar'\r\n              src={profile.avatar ? profile.avatar : defaultAvatar}\r\n              // style={{ backgroundColor: profile.color }}\r\n              alt=\"User's avatar\"\r\n            />\r\n          </div>\r\n          <FaAngleUp\r\n            className='nav__avatar_arrow'\r\n            style={{\r\n              transform: `${\r\n                displayDropdown ? 'rotate(180deg)' : 'rotate(0deg)'\r\n              }`,\r\n            }}\r\n          />\r\n          {/* <NavDropdown /> */}\r\n          {displayDropdown && (\r\n            <NavDropdown\r\n              changeProfile={props.changeUser}\r\n              activeProfile={profile}\r\n              allProfiles={props.currentUser.profiles}\r\n              logoutHandler={props.onLogout}\r\n              closeNavDropdown={closeNavDropdown}\r\n              toProfilePage={props.toProfilePage}\r\n              spotifyToken={props.spotifyToken}\r\n              editProfile={editProfileHandler}\r\n              editAccount={editAccountHandler}\r\n              updateCollection={props.updateCollection}\r\n              currentCollection={props.currentCollection}\r\n              viewCollection={props.viewCollection}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './MainRow.css';\r\nimport axios from 'axios';\r\nimport { FaAngleUp } from 'react-icons/fa';\r\nimport Placeholder from '../Placeholder/Placeholder';\r\n\r\nconst MainRow = ({ twitchToken, setGameDetails }) => {\r\n  const [games, setGames] = useState([]);\r\n  const [currentFilter, setCurrentFilter] = useState('Week');\r\n  const [changingFilter, setChangingFilter] = useState(false);\r\n  const [currentlyViewing, setCurrentlyViewing] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\n  let todaysDate = new Date();\r\n  const weekDateFormat = Math.floor(\r\n    new Date(todaysDate.getTime() + 7 * 24 * 60 * 60 * 1000) / 1000\r\n  );\r\n  const monthDateFormat = Math.floor(\r\n    new Date(\r\n      new Date(weekDateFormat * 1000).setMonth(\r\n        new Date(weekDateFormat * 1000).getMonth() + 1\r\n      )\r\n    ).getTime() / 1000\r\n  );\r\n  const yearDateFormat = Math.floor(\r\n    new Date(\r\n      new Date(monthDateFormat * 1000).setMonth(\r\n        new Date(monthDateFormat * 1000).getMonth() + 12\r\n      )\r\n    ).getTime() / 1000\r\n  );\r\n\r\n  // use pagination (scroll api) to get all game titles and year. Maybe get it every 24 hours using a cron job. Cache it locally and use that to autocomplete game titles. That's what we do internally.\r\n\r\n  const filterUniques = (list) => {\r\n    const uniques = [];\r\n    const filteredList = [];\r\n    list.map((game) => {\r\n      if (uniques.indexOf(game.game.name) === -1) {\r\n        uniques.push(game.game.name);\r\n        filteredList.push(game);\r\n      }\r\n    });\r\n    return filteredList;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Grab upcoming games based on current date filter\r\n    if (!twitchToken) return;\r\n    setLoading(true);\r\n    async function fetchData() {\r\n      let startDate;\r\n      let targetDate;\r\n\r\n      switch (currentFilter) {\r\n        case 'Month':\r\n          startDate = weekDateFormat;\r\n          targetDate = monthDateFormat;\r\n          break;\r\n        case 'Year':\r\n          startDate = monthDateFormat;\r\n          targetDate = yearDateFormat;\r\n          break;\r\n        default:\r\n          startDate = Math.floor(todaysDate.getTime() / 1000);\r\n          targetDate = weekDateFormat;\r\n          break;\r\n      }\r\n\r\n      try {\r\n        const retries = 3;\r\n        for (let i = 0; i < retries; i++) {\r\n          try {\r\n            const request = await axios.post(`${baseURL}/app/upcoming`, {\r\n              token: twitchToken,\r\n              currentDate: startDate,\r\n              targetDate,\r\n            });\r\n            setGames(filterUniques(request.data));\r\n            setLoading(false);\r\n            break;\r\n          } catch (error) {\r\n            console.log('Issue fetching data');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [currentFilter, twitchToken]);\r\n\r\n  // Handler to change the filter type (Week, Month, Year)\r\n  const changeFilterDate = (e) => {\r\n    setCurrentFilter(e.target.innerText);\r\n    setChangingFilter(false);\r\n  };\r\n\r\n  // Convert the YYYY-MM-DD to Month, Day, Year\r\n  const convertDate = (date) => {\r\n    let months = [\r\n      'January',\r\n      'February',\r\n      'March',\r\n      'April',\r\n      'May',\r\n      'June',\r\n      'July',\r\n      'August',\r\n      'September',\r\n      'October',\r\n      'November',\r\n      'December',\r\n    ];\r\n\r\n    // Replace hypens with dashes to get correct date\r\n    // Hypens returned the date previous from current due to some weird Date bug\r\n    let now = new Date(date.replace(/-/g, '/'));\r\n    let currentDay = now.getDate();\r\n    let formattedDay;\r\n\r\n    // Give the numbered day the appropriate abbriviation\r\n    switch (currentDay) {\r\n      case 1:\r\n      case 21:\r\n      case 31:\r\n        formattedDay = currentDay + 'st';\r\n        break;\r\n      case 2:\r\n      case 22:\r\n        formattedDay = currentDay + 'nd';\r\n        break;\r\n      case 3:\r\n      case 23:\r\n        formattedDay = currentDay + 'rd';\r\n        break;\r\n      // Most days have the th ending (28th) so set as default\r\n      default:\r\n        formattedDay = currentDay + 'th';\r\n        break;\r\n    }\r\n    return (\r\n      months[now.getMonth()] + ' ' + formattedDay + ', ' + now.getFullYear()\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onMouseOver={() => setCurrentlyViewing(true)}\r\n      onMouseOut={() => setCurrentlyViewing(false)}\r\n      className='main_row'\r\n    >\r\n      <div\r\n        className='main_row__filters'\r\n        onMouseLeave={() => setChangingFilter(false)}\r\n      >\r\n        <h2>Coming Soon</h2>\r\n        {/* Filter Type */}\r\n        <p\r\n          className='filters_filter'\r\n          onMouseOver={() => setChangingFilter(true)}\r\n        >\r\n          {currentFilter}{' '}\r\n          <FaAngleUp\r\n            size={10}\r\n            className={changingFilter ? 'arrow_active' : 'arrow'}\r\n          />\r\n        </p>{' '}\r\n        {changingFilter && (\r\n          <div className='filter_options'>\r\n            <ul>\r\n              <li\r\n                style={{\r\n                  backgroundColor: currentFilter == 'Week' ? 'white' : '',\r\n                  color: currentFilter == 'Week' ? 'black' : '',\r\n                }}\r\n                onClick={changeFilterDate}\r\n              >\r\n                Week\r\n              </li>\r\n              <li\r\n                style={{\r\n                  backgroundColor: currentFilter == 'Month' ? 'white' : '',\r\n                  color: currentFilter == 'Month' ? 'black' : '',\r\n                }}\r\n                onClick={changeFilterDate}\r\n              >\r\n                Month\r\n              </li>\r\n              <li\r\n                style={{\r\n                  backgroundColor: currentFilter == 'Year' ? 'white' : '',\r\n                  color: currentFilter == 'Year' ? 'black' : '',\r\n                }}\r\n                onClick={changeFilterDate}\r\n              >\r\n                Year\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className='main_row__row_posters'>\r\n        {games &&\r\n          !loading &&\r\n          games.map((game, i) => (\r\n            <div\r\n              className={`main_row__poster_container ${\r\n                currentlyViewing && 'dimmed'\r\n              }`}\r\n              onClick={() => setGameDetails(game.game)}\r\n              key={game.id}\r\n            >\r\n              <h4 className='main__poster_released'>\r\n                {convertDate(game.human)}\r\n              </h4>\r\n              <img\r\n                key={game.id}\r\n                className='main_poster'\r\n                src={`//images.igdb.com/igdb/image/upload/t_cover_big_2x/${game.game.cover?.image_id}.jpg`}\r\n                alt={game.name}\r\n              />\r\n            </div>\r\n          ))}\r\n        {loading && (\r\n          <div className='main_row__loading_container'>\r\n            {[...Array(4)].map((item, i) => (\r\n              <div key={i} className='main_row__placeholder__wrapper'>\r\n                <Placeholder key={i} delay={i} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainRow;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './TrendingRow.css';\r\nimport Placeholder from '../Placeholder/Placeholder';\r\nimport axios from 'axios';\r\n\r\nconst TrendingRow = ({ twitchToken, setGameDetails }) => {\r\n  const [games, setGames] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  let currentDate = Math.floor(new Date().getTime() / 1000);\r\n  let trendingTitlesFetched = JSON.parse(sessionStorage.getItem('trending'));\r\n\r\n  useEffect(() => {\r\n    if (!twitchToken) return;\r\n    if (trendingTitlesFetched && trendingTitlesFetched.length > 0) {\r\n      setGames(trendingTitlesFetched);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    // Grab games from each genre\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      try {\r\n        let trendingTitles = [];\r\n        const request = await axios.post(`${baseURL}/app/trending`, {\r\n          token: twitchToken,\r\n          currentDate: currentDate,\r\n        });\r\n\r\n        console.log(request);\r\n\r\n        const uniqueTitles = new Set();\r\n        request.data.filter(\r\n          (item) =>\r\n            !uniqueTitles.has(item.game.id) &&\r\n            uniqueTitles.add(item.game.id).add(item.game)\r\n        );\r\n\r\n        uniqueTitles.forEach(\r\n          (game) => typeof game == 'object' && trendingTitles.push(game)\r\n        );\r\n\r\n        trendingTitles.sort(\r\n          (a, b) =>\r\n            b.release_dates.findLast((dates) => dates.date) -\r\n              a.release_dates.findLast((dates) => dates.date) ||\r\n            b.hypes - a.hypes\r\n        );\r\n\r\n        setGames(trendingTitles.slice(0, 10));\r\n\r\n        sessionStorage.setItem(\r\n          'trending',\r\n          JSON.stringify(trendingTitles.slice(0, 10))\r\n        );\r\n        setLoading(false);\r\n        return request;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [twitchToken]);\r\n\r\n  if (loading) return null;\r\n  // return (\r\n  //   <div className='row__loading_container'>\r\n  //     {[...Array(10)].map((item, i) => (\r\n  //       <div key={i} className='trending_row__placeholder__wrapper'>\r\n  //         <Placeholder key={i} delay={i} />\r\n  //       </div>\r\n  //     ))}\r\n  //   </div>\r\n  // );\r\n\r\n  return (\r\n    <div className='trending_row'>\r\n      <h2>TRENDING TITLES</h2>\r\n\r\n      <div className='trending_row__posters'>\r\n        {games.map((game, i) => (\r\n          <React.Fragment key={game.name}>\r\n            <div className='trending_row__poster_wrapper'>\r\n              <div className='trending_row__rank'>{i + 1}</div>\r\n              <div\r\n                className='trending_row__poster_container'\r\n                style={{\r\n                  marginLeft: (i == 9 && '160px') || (i == 0 && '65px'),\r\n                }}\r\n                onClick={() => setGameDetails(game)}\r\n              >\r\n                {' '}\r\n                {!loading && (\r\n                  <>\r\n                    <img\r\n                      loading='lazy'\r\n                      className='trending_row__poster'\r\n                      src={`https://images.igdb.com/igdb/image/upload/t_cover_big_2x/${game.cover?.image_id}.jpg`}\r\n                      alt={game.name}\r\n                    />\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrendingRow;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './NewReleases.css';\r\nimport Placeholder from '../Placeholder/Placeholder';\r\nimport GamePreview from '../Row/GamePreview/GamePreview';\r\nimport axios from 'axios';\r\n\r\nconst NewReleases = ({ twitchToken, setGameDetails }) => {\r\n  const [games, setGames] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const newReleases = [];\r\n\r\n  useEffect(() => {\r\n    if (!twitchToken) return;\r\n\r\n    async function fetchNewReleases() {\r\n      setLoading(true);\r\n\r\n      try {\r\n        // const scrape_request = await axios.get(`${baseURL}/steam/new_releases`);\r\n        // console.log(scrape_request);\r\n        return;\r\n        // const newReleasesData = await Promise.all(\r\n        //   newReleases.map(async (game) => {\r\n        //     const res = await axios.post(\r\n        //       `${baseURL}/app/search_trending_game`,\r\n        //       {\r\n        //         token: twitchToken,\r\n        //         gameName: game,\r\n        //       }\r\n        //     );\r\n        //     return res.data[0].game;\r\n        //   })\r\n        // );\r\n        // setGames(newReleasesData);\r\n        // setLoading(false);\r\n        // return newReleasesData;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n    fetchNewReleases();\r\n  }, [twitchToken]);\r\n\r\n  // Grab trailer video from selected game\r\n  // const fetchGameDetails = (game) => {\r\n  //   setGameDetails(game);\r\n  //   setCurrentlyOpen(game.name);\r\n  //   setCurrentGame(game);\r\n  // };\r\n\r\n  const closeGameDetails = () => {\r\n    // setCurrentlyOpen(null);\r\n    // setCurrentGame(null);\r\n  };\r\n\r\n  games?.sort((a, b) =>\r\n    a.rating_count > b.rating_count\r\n      ? -1\r\n      : b.rating_count > a.rating_count\r\n      ? 1\r\n      : 0\r\n  );\r\n\r\n  return '';\r\n\r\n  return (\r\n    <div className='new_releases_row'>\r\n      <h2>NEW RELEASES</h2>\r\n\r\n      <div className='new_releases_row__posters'>\r\n        {games.map((game, i) => (\r\n          <React.Fragment key={game.name}>\r\n            <div className='new_releases_row__poster_wrapper'>\r\n              <div\r\n                className='new_releases_row__poster_container'\r\n                onClick={() => setGameDetails(game)}\r\n              >\r\n                {' '}\r\n                {!loading && (\r\n                  <>\r\n                    <img\r\n                      loading='lazy'\r\n                      className='new_releases_row__poster'\r\n                      src={`//images.igdb.com/igdb/image/upload/t_cover_big_2x/${game.cover?.image_id}.jpg`}\r\n                      alt={game.name}\r\n                    />\r\n                  </>\r\n                )}\r\n              </div>\r\n              {/* {currentlyOpen === game.name && (\r\n                <GamePreview\r\n                  game={currentGame}\r\n                  displayDetails={displayDetails}\r\n                  hideDetails={closeGameDetails}\r\n                />\r\n              )} */}\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n        {loading && (\r\n          <div className='row__loading_container'>\r\n            {[...Array(10)].map((item, i) => (\r\n              <div key={i} className='new_releases_row__placeholder__wrapper'>\r\n                <Placeholder key={i} delay={i} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewReleases;\r\n","// Get todays date based off current timezone\r\nlet todaysDate = new Date();\r\nlet igdbDate = Math.floor(todaysDate.getTime() / 1000);\r\nlet filterDate = igdbDate * 1000;\r\n\r\n// List of endpoints for the Rawg.io API\r\nconst requests = [\r\n  {\r\n    requestId: 'fetchAdventureTitles',\r\n    genreId: 31,\r\n    title: 'ACTION/ADVENTURE GAMES',\r\n  },\r\n  {\r\n    requestId: 'fetchArcadeTitles',\r\n    genreId: 33,\r\n    title: 'ARCADE GAMES',\r\n  },\r\n  {\r\n    requestId: 'fetchMusicTitles',\r\n    genreId: 7,\r\n    title: 'MUSIC GAMES',\r\n  },\r\n  {\r\n    requestId: 'fetchHackTitles',\r\n    genreId: 25,\r\n    title: 'HACK/SLASH TITLES',\r\n  },\r\n  {\r\n    requestId: 'fetchFightingTitles',\r\n    genreId: 4,\r\n    title: 'FIGHTING GAMES',\r\n  },\r\n  {\r\n    requestId: 'fetchIndieTitles',\r\n    genreId: 32,\r\n    title: 'INDIE GAMES',\r\n  },\r\n  {\r\n    requestId: 'fetchMassivelyMultiplayerTitles',\r\n    genreId: 36,\r\n    title: 'MOBA GAMES',\r\n  },\r\n  {\r\n    requestId: 'fetchPlatformerTitles',\r\n    genreId: 8,\r\n    title: 'PLATFORMER GAMES',\r\n  },\r\n  {\r\n    requestId: 'fetchPuzzleTitles',\r\n    genreId: 9,\r\n    title: 'PUZZLE GAMES',\r\n  },\r\n  {\r\n    requestId: 'fetchRacingTitles',\r\n    genreId: 10,\r\n    title: 'RACING GAMES',\r\n  },\r\n  {\r\n    requestId: 'fetchRPGTitles',\r\n    genreId: 12,\r\n    title: 'RPG GAMES',\r\n  },\r\n  {\r\n    requestId: 'fetchShooterTitles',\r\n    genreId: 5,\r\n    title: 'SHOOTER GAMES',\r\n  },\r\n  {\r\n    requestId: 'fetchSimulationTitles',\r\n    genreId: 13,\r\n    title: 'SIMULATION GAMES',\r\n  },\r\n  {\r\n    requestId: 'fetchSportsTitles',\r\n    genreId: 14,\r\n    title: 'SPORTS GAMES',\r\n  },\r\n  {\r\n    requestId: 'fetchStrategy',\r\n    genreId: (11, 15),\r\n    title: 'STRATEGY GAMES',\r\n  },\r\n];\r\n\r\nexport default requests;\r\n","import { useState, useEffect, memo, lazy, Suspense } from 'react';\r\n\r\n// Component Imports\r\nimport Row from '../Row/Row';\r\nimport Banner from '../Banner/Banner';\r\nimport Nav from '../Nav/Nav';\r\nimport MainRow from '../MainRow/MainRow';\r\nimport TrendingRow from '../TrendingRow/TrendingRow';\r\nimport NewReleases from '../NewReleases/NewReleases';\r\n\r\n// File Imports\r\nimport SpotifyPlayback from '../SpotifyPlayback/SpotifyPlayback';\r\nimport useSpotifyAuth from '../../hooks/useSpotifyAuth';\r\nimport useSteamAuth from '../../hooks/useSteamAuth';\r\nimport useFetchGenres from '../../hooks/useFetchGenres';\r\nimport { SlOptions } from 'react-icons/sl';\r\nimport Placeholder from '../Placeholder/Placeholder';\r\n\r\nconst GameDetails = lazy(() => import('../GameDetails/GameDetails'));\r\nconst Notification = lazy(() => import('../Notification/Notification'));\r\nconst UserCollection = lazy(() =>\r\n  import('../UserCollectionPage/UserCollection')\r\n);\r\n\r\nconst code = new URLSearchParams(window.location.search).get('code');\r\nconst windowUrl = window.location.search;\r\nconst id = windowUrl.split('?')[1];\r\n\r\nconst Dashboard = ({\r\n  currentUser,\r\n  twitchToken,\r\n  currentProfile,\r\n  currentCollection,\r\n  userNotes,\r\n  updateCollection,\r\n  selectProfile,\r\n  updateGameStatus,\r\n  fetchGame,\r\n  logoutUser,\r\n  gameStatus,\r\n  resetGameStatus,\r\n  changeProfile,\r\n}) => {\r\n  const allGenres = useFetchGenres();\r\n  const [displayNotification, setDisplayNotification] = useState(false);\r\n  const [notification, setNotification] = useState({ status: '', message: '' });\r\n\r\n  // Spotify States\r\n  const [currentTrack, setCurrentTrack] = useState(null);\r\n  const [playAudio, setPlayAudio] = useState(false);\r\n  const [rowsLoading, setRowsLoading] = useState();\r\n\r\n  // User states\r\n  const [viewingCollection, setViewingCollection] = useState(false);\r\n\r\n  // Row States\r\n  const [currentGameOpen, setCurrentGameOpen] = useState(null);\r\n  const [viewingGameOptions, setViewingGameOptions] = useState(false);\r\n  const [hoveringGame, setHoveringGame] = useState(null);\r\n\r\n  // Search States\r\n  const [gameDetails, setGameDetails] = useState(null);\r\n\r\n  // Local Variables\r\n  const spotifyAccessToken = useSpotifyAuth(code);\r\n  const steamCollection = useSteamAuth(id);\r\n\r\n  useEffect(() => {\r\n    if (!currentGameOpen) document.body.style.overflow = 'auto';\r\n  }, []);\r\n\r\n  const resetGame = () => {\r\n    setHoveringGame(null);\r\n    resetGameStatus();\r\n  };\r\n\r\n  const openGameWindow = (game) => {\r\n    console.log(game);\r\n    setCurrentGameOpen(game.id);\r\n    document.body.style.overflow = 'hidden';\r\n  };\r\n\r\n  const closeGameWindow = () => {\r\n    document.body.style.overflow = 'auto';\r\n    setCurrentGameOpen(null);\r\n  };\r\n\r\n  const seeGameOptions = () => {\r\n    setViewingGameOptions(true);\r\n  };\r\n\r\n  const playTrack = (track) => {\r\n    setCurrentTrack(track);\r\n  };\r\n\r\n  const toProfileSelection = () => {\r\n    localStorage.removeItem('profile');\r\n    window.location.reload();\r\n  };\r\n\r\n  if (currentProfile) {\r\n    if (gameDetails !== null) {\r\n      return (\r\n        <>\r\n          <Suspense fallback={<>...</>}>\r\n            <GameDetails\r\n              setNotification={(status, message) =>\r\n                setNotification({ status, message })\r\n              }\r\n              game={gameDetails}\r\n              closeDetails={() => setGameDetails(null)}\r\n              twitchToken={twitchToken}\r\n              updateGameStatus={(action, game) =>\r\n                updateGameStatus(action, game)\r\n              }\r\n              activeProfile={currentProfile}\r\n              currentCollection={currentCollection}\r\n            />\r\n            <Notification\r\n              notification={notification}\r\n              displayNotification={displayNotification}\r\n              hideNotification={() => {\r\n                setNotification({ message: '', status: '' });\r\n              }}\r\n            />\r\n          </Suspense>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (viewingCollection)\r\n      return (\r\n        <Suspense fallback={<>...</>}>\r\n          <UserCollection\r\n            collection={currentCollection}\r\n            activeProfile={currentProfile}\r\n            backToHome={() => setViewingCollection(false)}\r\n            currentTrack={currentTrack}\r\n            playTrack={playTrack}\r\n            isPlaying={playAudio}\r\n            pausePlayback={() => setPlayAudio(false)}\r\n            resumePlayback={() => setPlayAudio(true)}\r\n            spotifyToken={spotifyAccessToken}\r\n            updateGameStatus={(action, game) => updateGameStatus(action, game)}\r\n            updateCollection={updateCollection}\r\n            userNotes={userNotes}\r\n          />\r\n        </Suspense>\r\n      );\r\n\r\n    return (\r\n      <div className='App'>\r\n        <Nav\r\n          currentUser={currentUser}\r\n          activeProfile={currentProfile}\r\n          changeUser={changeProfile}\r\n          onLogout={logoutUser}\r\n          fetchSubmittedGame={fetchGame}\r\n          toProfilePage={toProfileSelection}\r\n          selectProfile={selectProfile}\r\n          spotifyToken={spotifyAccessToken}\r\n          twitchToken={twitchToken}\r\n          saveEdit={() => console.log('saving edit')}\r\n          updateCollection={updateCollection}\r\n          currentCollection={currentCollection}\r\n          viewCollection={() => setViewingCollection(true)}\r\n        />\r\n\r\n        <Banner\r\n          setGameDetails={(id) => setGameDetails(id)}\r\n          addGame={(game) => updateGameStatus('ADD', game)}\r\n          activeProfile={currentProfile}\r\n        />\r\n        <MainRow\r\n          twitchToken={twitchToken}\r\n          setGameDetails={(game) => setGameDetails(game)}\r\n        />\r\n\r\n        <NewReleases\r\n          twitchToken={twitchToken}\r\n          setGameDetails={(game) => setGameDetails(game)}\r\n        />\r\n\r\n        <TrendingRow\r\n          twitchToken={twitchToken}\r\n          setGameDetails={(game) => setGameDetails(game)}\r\n        />\r\n\r\n        {currentGameOpen && (\r\n          <>\r\n            <h1 className='row__preview_close' onClick={closeGameWindow}>\r\n              X\r\n            </h1>\r\n          </>\r\n        )}\r\n        <div\r\n          className={`${currentGameOpen !== null ? 'game_preview__modal' : ''}`}\r\n        />\r\n\r\n        {allGenres.genreGamesList.length > 0 ? (\r\n          allGenres.genreGamesList.map((request) => (\r\n            <Row\r\n              key={Object.keys(request)}\r\n              activeProfile={currentProfile}\r\n              spotifyToken={spotifyAccessToken}\r\n              genreDetails={Object.entries(request)}\r\n              playTrack={playTrack}\r\n              currentTrack={currentTrack}\r\n              setGameDetails={(game) => setGameDetails(game)}\r\n              resumePlayback={(e) => setPlayAudio(true)}\r\n              pausePlayback={(e) => setPlayAudio(false)}\r\n              isPlaying={playAudio}\r\n              currentGameOpen={currentGameOpen}\r\n              openGame={(game) => openGameWindow(game)}\r\n              closeGameWindow={closeGameWindow}\r\n              G\r\n              updateGameStatus={(action, game) =>\r\n                updateGameStatus(action, game)\r\n              }\r\n              setNotification={(status, message) =>\r\n                setNotification({ status, message })\r\n              }\r\n              loading={rowsLoading}\r\n              hoverGame={(game) => setHoveringGame(game)}\r\n              hoverAway={() => resetGame()}\r\n              currentHover={hoveringGame}\r\n              currentCollection={currentCollection}\r\n              gameStatus={gameStatus}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div className='row__loading_container'>\r\n            {[...Array(10)].map((item, i) => (\r\n              <div key={i} className='row__placeholder__wrapper'>\r\n                <Placeholder key={i} delay={i} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {spotifyAccessToken && (\r\n          <SpotifyPlayback\r\n            spotifyToken={spotifyAccessToken}\r\n            playAudio={playAudio}\r\n            beginPlayback={(e) => setPlayAudio(true)}\r\n            pausePlayback={(e) => setPlayAudio(false)}\r\n            trackUri={currentTrack?.uri}\r\n          />\r\n        )}\r\n\r\n        <Notification\r\n          notification={notification}\r\n          displayNotification={displayNotification}\r\n          hideNotification={() => {\r\n            setNotification({ message: '', status: '' });\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default memo(Dashboard);\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport requestsIGDB from '../requestsIGDB';\r\n\r\nexport default function useFetchGenres() {\r\n  const existingToken = localStorage.getItem('twitch_auth');\r\n  const [genreGamesList, setGenreGamesList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const currentDate = new Date();\r\n\r\n  useEffect(() => {\r\n    const fetchGenres = async () => {\r\n      const request = await axios.get(`${baseURL}/app/get_genres`);\r\n      const last_updated = new Date(request.data.last_updated);\r\n      if (currentDate > last_updated.setDate(last_updated.getDate() + 1)) {\r\n        return updateGenresAPI();\r\n      } else {\r\n        setGenreGamesList(request.data[0].genres_list);\r\n        setIsLoading(false);\r\n        return request.data;\r\n      }\r\n    };\r\n\r\n    const updateGenresAPI = async () => {\r\n      if (!existingToken) return;\r\n\r\n      const genreTitles = await Promise.all(\r\n        requestsIGDB.map((genre) => {\r\n          return axios.post(`${baseURL}/app/game_genre`, {\r\n            token: existingToken,\r\n            genreId: genre.genreId,\r\n            genreTitle: genre.title,\r\n          });\r\n        })\r\n      );\r\n      const completeGenreList = genreTitles.map((genre) => genre.data);\r\n      updateGenresCollection(completeGenreList);\r\n      setIsLoading(false);\r\n      return completeGenreList;\r\n    };\r\n\r\n    fetchGenres();\r\n  }, [existingToken]);\r\n\r\n  const updateGenresCollection = async (list) => {\r\n    const request = await axios.post(`${baseURL}/app/update_genres`, {\r\n      genreList: list,\r\n      date: currentDate,\r\n    });\r\n    setGenreGamesList(request.data.genres_list);\r\n    return request.data.genres_list;\r\n  };\r\n\r\n  return { genreGamesList, isLoading };\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function useSpotifyAuth(code) {\r\n  const [accessToken, setAccessToken] = useState();\r\n  const [refreshToken, setRefreshToken] = useState();\r\n  const [expiresIn, setExpiresIn] = useState();\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const prevToken = sessionStorage.getItem('spotify_auth');\r\n\r\n  useEffect(() => {\r\n    if (prevToken) {\r\n      console.log(prevToken);\r\n      setAccessToken(JSON.parse(prevToken));\r\n      return;\r\n    }\r\n    if (!code) return;\r\n    const spotifyAuthentication = async () => {\r\n      try {\r\n        const request = await axios.post(\r\n          `${baseURL}/app/spotify_authentication`,\r\n          {\r\n            code,\r\n            baseURL,\r\n          }\r\n        );\r\n        setAccessToken(request.data.tokenRequest.body.access_token);\r\n        setRefreshToken(request.data.tokenRequest.body.refresh_token);\r\n        setExpiresIn(request.data.tokenRequest.body.expires_in);\r\n        sessionStorage.setItem(\r\n          'spotify_auth',\r\n          JSON.stringify(request.data.tokenRequest.body.access_token)\r\n        );\r\n        window.history.pushState({}, null, '/');\r\n      } catch (error) {\r\n        console.log(error);\r\n        window.location = '/';\r\n      }\r\n    };\r\n    spotifyAuthentication();\r\n  }, [code]);\r\n\r\n  useEffect(() => {\r\n    if (!refreshToken || !expiresIn) return;\r\n    const refreshSpotifyToken = async () => {\r\n      try {\r\n        const request = await axios.post(`${baseURL}/app/refresh_token`, {\r\n          refreshToken,\r\n          baseURL,\r\n        });\r\n        setAccessToken(request.data.body.body.access_token);\r\n        setRefreshToken(request.data.body.body.refresh_token);\r\n        setExpiresIn(request.data.body.body.expires_in);\r\n      } catch (error) {\r\n        console.log('REFRESH TOKEN ERROR');\r\n        window.location = '/';\r\n      }\r\n    };\r\n    const interval = setInterval(() => {\r\n      refreshSpotifyToken();\r\n    }, (expiresIn - 60) * 1000);\r\n\r\n    return () => clearTimeout(interval);\r\n  }, [refreshToken, expiresIn]);\r\n\r\n  return accessToken;\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function useSteamAuth(id) {\r\n  const [steamCollection, setSteamCollection] = useState([]);\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\n  useEffect(() => {\r\n    if (!id) return;\r\n    const fetchUserLibrary = async () => {\r\n      try {\r\n        const request = await axios.get(`${baseURL}/steam/get_owned_games`, {\r\n          params: {\r\n            id,\r\n          },\r\n        });\r\n        localStorage.setItem('steamID', request.config.params.id);\r\n        console.log(request.data);\r\n        setSteamCollection(request.data);\r\n        window.history.pushState({}, null, '/');\r\n      } catch (error) {\r\n        console.log(error);\r\n        console.log('GET STEAM COLLECTION ERROR');\r\n      }\r\n    };\r\n    fetchUserLibrary();\r\n  }, [id]);\r\n\r\n  return steamCollection;\r\n}\r\n","import React, { useState } from 'react';\r\nimport './ProfileEditor.css';\r\n\r\nconst SearchList = ({ list, selectGame }) => {\r\n  return (\r\n    <div className='search_list_container'>\r\n      <ul className='search_list'>\r\n        {list.slice(0, 5).map((game) => (\r\n          <li className='search_list_item' onClick={() => selectGame(game)}>\r\n            <img className='item_thumbnail' src={game.cover.url} />\r\n            <p className='item_title'>{game.name}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchList;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./ProfileEditor.css\";\r\nimport SearchList from \"./SearchList\";\r\nimport axios from \"axios\";\r\nimport { MdEdit } from \"react-icons/md\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { FaAngleDown } from \"react-icons/fa\";\r\n\r\nconst ProfileEditor = (props) => {\r\n  document.body.style.overflow = \"hidden\";\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const currentProfile = props.currentProfile;\r\n  const isAdmin = currentProfile.isAdmin;\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchLoading, setSearchLoading] = useState(false);\r\n  // Current Profile Name\r\n  const currentProfileName =\r\n    localStorage.getItem(\"profile\") || currentProfile.name;\r\n  const [nameValue, setNameValue] = useState(currentProfileName);\r\n  // Title Input State and Ref\r\n  const titleRef = useRef(\"\");\r\n  const [titleValue, setTitleValue] = useState(currentProfile.favorite_game);\r\n  const [titleId, setTitleId] = useState(0);\r\n  const [titleImage, setTitleImage] = useState(\"\");\r\n  const [titleList, setTitleList] = useState([]);\r\n  let searchValue = \"\";\r\n  // Console Input State and Ref\r\n  const consoleRef = useRef(\"\");\r\n  const [consoleValue, setConsoleValue] = useState(\r\n    currentProfile.favorite_console\r\n  );\r\n  // Profile form states\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n  const [currentAvatar, setCurrentAvatar] = useState(currentProfile.avatar);\r\n  const [imgFilePreview, setImgFilePreview] = useState(null);\r\n  const fileInputRef = useRef(\"\");\r\n  const [imgLink, setImgLink] = useState(\"\");\r\n  const [usingImgLink, setUsingImgLink] = useState(false);\r\n  const [changingAvatar, setChangingAvatar] = useState(false);\r\n  // Color states\r\n  const [changingColor, setChangingColor] = useState(false);\r\n  const [color, setColor] = useState(currentProfile.color);\r\n  // Genre states\r\n  const genreRef = useRef(\"\");\r\n  const [changingGenre, setChangingGenre] = useState(false);\r\n  const [currentGenre, setCurrentGenre] = useState(\r\n    currentProfile.favorite_genre\r\n  );\r\n\r\n  const genreList = [\r\n    \"Action\",\r\n    \"Adventure\",\r\n    \"Arcade\",\r\n    \"Card & Board\",\r\n    \"Family\",\r\n    \"Fighting\",\r\n    \"Indie\",\r\n    \"MMO (Massive Multiplayer)\",\r\n    \"Platformer\",\r\n    \"Puzzle\",\r\n    \"Racing\",\r\n    \"RPG\",\r\n    \"Shooter\",\r\n    \"Sports\",\r\n    \"Strategy\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (\r\n      titleValue == \"\" ||\r\n      titleValue == currentProfile.favorite_game ||\r\n      searchLoading\r\n    ) {\r\n      setTitleList([]);\r\n      return;\r\n    }\r\n    const delaySearch = setTimeout(() => {\r\n      setSearchLoading(true);\r\n      const fetchSearchedGame = async () => {\r\n        const request = await axios.post(`${baseURL}/app/search_game`, {\r\n          gameName: titleValue,\r\n          token: props.twitchToken,\r\n        });\r\n        setTitleList(request.data);\r\n        setSearchLoading(false);\r\n      };\r\n      fetchSearchedGame();\r\n    }, 500);\r\n\r\n    return () => clearTimeout(delaySearch);\r\n  }, [titleValue]);\r\n\r\n  // Listen for escape key press to close out color palette\r\n  useEffect(() => {\r\n    const handleEsc = (event) => {\r\n      if (event.keyCode === 27) {\r\n        setChangingColor(false);\r\n      }\r\n    };\r\n    window.addEventListener(\"keydown\", handleEsc);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleEsc);\r\n    };\r\n  }, []);\r\n\r\n  // Listen for clicks outside of genre dropdown box\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (genreRef.current && !genreRef.current.contains(event.target)) {\r\n        setChangingGenre(false);\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [genreRef]);\r\n\r\n  const selectGameHandler = (game) => {\r\n    setTitleValue(game.name);\r\n    setTitleId(game.id);\r\n    setTitleImage(\r\n      `//images.igdb.com/igdb/image/upload/t_cover_big/${game.cover?.image_id}.jpg`\r\n    );\r\n    setTitleList([]);\r\n  };\r\n\r\n  const titleBlurHandler = () => {\r\n    if (titleList.length > 0) {\r\n    }\r\n  };\r\n\r\n  const colorChangeHandler = (color) => setColor(color.hex);\r\n  const genreChangeHandler = (genre) => {\r\n    setCurrentGenre(genre);\r\n    setChangingGenre(false);\r\n  };\r\n\r\n  // Determine cancel button functionality\r\n  const cancelButtonHandler = () => {\r\n    // If user is changing avatars, return to editing profile\r\n    if (changingAvatar) {\r\n      setChangingAvatar(false);\r\n      setUsingImgLink(false);\r\n    }\r\n    // If the user is editing profile, return to all profiles\r\n    else {\r\n      props.viewAllProfiles();\r\n    }\r\n  };\r\n\r\n  // Delete single profile\r\n  const deleteProfileHandler = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const request = await axios.delete(`${baseURL}/app/delete_profile`, {\r\n        data: { email: props.userEmail, name: currentProfile.name },\r\n      });\r\n      props.saveEdit(request.data.response);\r\n      props.viewAllProfiles();\r\n    } catch (error) {\r\n      console.log(error);\r\n      return error;\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Avatar profile image handling\r\n  const updateAvatar = async (e, method) => {\r\n    setLoading(true);\r\n    // Append email and profile name to find correct profile to update\r\n    const data = new FormData();\r\n    data.append(\"email\", props.userEmail);\r\n    data.append(\"name\", currentProfile.name);\r\n    // User uploads image\r\n    if (method == \"file\") {\r\n      data.append(\"avatar\", e.target.files[0]);\r\n      try {\r\n        const request = await axios.post(\r\n          `${baseURL}/app/update_avatar_file`,\r\n          data\r\n        );\r\n        setCurrentAvatar(URL.createObjectURL(e.target.files[0]));\r\n      } catch (e) {\r\n        console.log(e);\r\n        return e;\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    // If user uses a link to an image\r\n    else {\r\n      const data = {\r\n        email: props.userEmail,\r\n        name: currentProfile.name,\r\n        avatar: imgLink,\r\n      };\r\n      try {\r\n        const request = await axios.post(\r\n          `${baseURL}/app/update_avatar_link`,\r\n          data\r\n        );\r\n        setCurrentAvatar(imgLink);\r\n      } catch (e) {\r\n        console.log(e);\r\n        return e;\r\n      }\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // If user isn't using the link, display the link modal\r\n  // Or else submit the link url and close the modal\r\n  const determineLinkAction = (e) => {\r\n    if (!usingImgLink) {\r\n      setUsingImgLink(true);\r\n    } else {\r\n      updateAvatar(e, \"link\");\r\n    }\r\n  };\r\n\r\n  // Update Profile in Mongo Database\r\n  const saveUserData = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    // Make inputs OPTIONAL\r\n    const userData = {\r\n      email: props.userEmail,\r\n      originalName: currentProfile.name,\r\n      newName: nameValue.trim(),\r\n      newColor: color,\r\n      favoriteGenre: currentGenre ? currentGenre.trim() : \"Action\",\r\n      favoriteGame: titleValue ? titleValue.trim() : \"None\",\r\n      gameId: titleId,\r\n      imageURL: titleImage,\r\n      favoriteConsole: consoleValue ? consoleValue.trim() : \"None\",\r\n      twitchToken: props.twitchToken,\r\n    };\r\n\r\n    try {\r\n      const request = await axios.post(\r\n        `${baseURL}/app/update_user_profile`,\r\n        userData\r\n      );\r\n\r\n      localStorage.setItem(\"user\", request.data.response.user.email);\r\n      localStorage.setItem(\"profile\", request.data.response.profile.name);\r\n      setStatusMessage(request.data.message);\r\n      props.saveEdit(request.data.response);\r\n      props.viewAllProfiles();\r\n    } catch (error) {\r\n      setStatusMessage(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  // Loading spinner\r\n  if (loading) {\r\n    return (\r\n      <div className=\"profile_edit__container\">\r\n        <div className=\"profile_edit__header\">\r\n          <h3>GAMEFLIX</h3>\r\n        </div>\r\n        <div className=\"profile_edit__form_wrapper\">\r\n          <div className=\"profile__loading\">\r\n            <div className=\"profile__loading_spinner\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile_edit__container\">\r\n      <div className=\"profile_edit__header\">\r\n        <h3>GAMEFLIX</h3>\r\n      </div>\r\n      <div className=\"profile_edit__form_wrapper\">\r\n        <h3>{currentProfile !== true ? \"Edit Profile\" : \"Create Profile\"}</h3>\r\n        <div\r\n          className={`form_container ${\r\n            changingAvatar && \"avatar_select_container\"\r\n          }`}\r\n        >\r\n          {/* USER AVATAR CONTAINER */}\r\n          <div\r\n            style={{ paddingTop: changingAvatar && \"10px\" }}\r\n            className=\"form_avatar_container\"\r\n          >\r\n            <img\r\n              className={`current_avatar ${changingAvatar && \"avatar_select\"}`}\r\n              style={{\r\n                backgroundColor: color ? color : currentProfile.color,\r\n              }}\r\n              src={currentAvatar}\r\n            />\r\n            {!changingAvatar && (\r\n              <span\r\n                className=\"current_avatar_edit\"\r\n                onClick={() => setChangingAvatar(true)}\r\n              >\r\n                <MdEdit style={{ height: \"100%\" }} />\r\n              </span>\r\n            )}\r\n          </div>\r\n          {/* USER FORM */}\r\n          <div className=\"form_right\">\r\n            {!changingAvatar && (\r\n              <form className=\"profile_edit__form\">\r\n                {/* NAME */}\r\n                <input\r\n                  className=\"name_input\"\r\n                  onChange={(e) => setNameValue(e.target.value)}\r\n                  value={nameValue}\r\n                  autoFocus\r\n                />\r\n                {/* COLOR */}\r\n                <p>Color</p>\r\n                <input\r\n                  className=\"color_input\"\r\n                  style={{\r\n                    color: color,\r\n                  }}\r\n                  onChange={(e) => setColor(e.target.value)}\r\n                  value={color}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setChangingColor(!changingColor)}\r\n                  style={{\r\n                    backgroundColor: color,\r\n                  }}\r\n                />\r\n                {changingColor && (\r\n                  <SketchPicker\r\n                    color={color}\r\n                    onChangeComplete={colorChangeHandler}\r\n                    className=\"profile_color_palette\"\r\n                  />\r\n                )}\r\n              </form>\r\n            )}\r\n            {/* USER PERSONAL */}\r\n            <div\r\n              className={`form_personal ${changingAvatar && \"personal_avatar\"}`}\r\n            >\r\n              <h4\r\n                style={{\r\n                  textAlign: changingAvatar ? \"center\" : \"left\",\r\n                }}\r\n              >\r\n                {!changingAvatar ? \"Your Playstyle\" : \"Current\"}\r\n              </h4>\r\n              {/* AVATAR FILE */}\r\n              {changingAvatar && (\r\n                <>\r\n                  <div\r\n                    className={`upload_avatar_actions ${\r\n                      usingImgLink && \"img_link_actions\"\r\n                    }`}\r\n                  >\r\n                    <input\r\n                      className=\"upload_file_input\"\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      style={{ display: \"none\" }}\r\n                      multiple={false}\r\n                      ref={fileInputRef}\r\n                      onChange={(e) => updateAvatar(e, \"file\")}\r\n                    />\r\n\r\n                    {!usingImgLink && (\r\n                      <>\r\n                        <button onClick={() => fileInputRef.current.click()}>\r\n                          Upload\r\n                        </button>\r\n                        <p>OR</p>\r\n                      </>\r\n                    )}\r\n                    {/* AVATAR URL */}\r\n                    <button onClick={determineLinkAction}>\r\n                      {!usingImgLink ? \"Enter link\" : \"Submit\"}\r\n                    </button>\r\n                    {usingImgLink && (\r\n                      <input\r\n                        className={`console_input ${\r\n                          changingAvatar && \"img_input\"\r\n                        }`}\r\n                        placeholder={\"Enter link to image or gif\"}\r\n                        value={imgLink}\r\n                        onChange={(e) => setImgLink(e.target.value)}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </>\r\n              )}\r\n              {/* TITLE */}\r\n              {!changingAvatar && (\r\n                <>\r\n                  <p className=\"form_personal_title\">Favorite Title</p>\r\n                  <input\r\n                    ref={titleRef}\r\n                    value={titleValue}\r\n                    className=\"title_input\"\r\n                    onBlur={titleBlurHandler}\r\n                    onChange={(e) => {\r\n                      titleRef.current = titleValue;\r\n                      setTitleValue(e.target.value);\r\n                    }}\r\n                  />\r\n                  {searchLoading && (\r\n                    <div className=\"profile__search_loading\">\r\n                      <div className=\"profile__search_loading_spinner\" />\r\n                    </div>\r\n                  )}\r\n                  {titleList.length > 0 && titleValue !== \"\" && (\r\n                    <SearchList\r\n                      list={titleList}\r\n                      selectGame={selectGameHandler}\r\n                    />\r\n                  )}\r\n                </>\r\n              )}\r\n              {/* CONSOLE */}\r\n              {!changingAvatar && (\r\n                <>\r\n                  <p className=\"form_personal_console\">Favorite Console</p>\r\n                  <input\r\n                    ref={titleRef}\r\n                    value={consoleValue}\r\n                    onChange={(e) => {\r\n                      consoleRef.current = consoleValue;\r\n                      setConsoleValue(e.target.value);\r\n                    }}\r\n                    className={`console_input ${changingAvatar && \"img_input\"}`}\r\n                    placeholder={\r\n                      changingAvatar ? \"https://www.example.com\" : \"\"\r\n                    }\r\n                  />\r\n                </>\r\n              )}\r\n              {/* GENRE */}\r\n              <div className=\"genre_dropdown\">\r\n                {!changingAvatar && (\r\n                  <>\r\n                    <p className=\"form_personal_genre\">Favorite Genre</p>\r\n                    <button onClick={() => setChangingGenre(!changingGenre)}>\r\n                      {currentGenre !== undefined\r\n                        ? `${currentGenre}`\r\n                        : \"Action\"}{\" \"}\r\n                      <FaAngleDown className=\"genre_arrow\" />\r\n                    </button>\r\n                  </>\r\n                )}\r\n                {/* <FaAngleDown className='genre_arrow' /> */}\r\n                {changingGenre && (\r\n                  <div ref={genreRef} className=\"genre_dropdown_content\">\r\n                    {genreList.map((genre) => (\r\n                      <span\r\n                        onClick={() => genreChangeHandler(genre)}\r\n                        key={genre}\r\n                      >\r\n                        {genre}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* FORM ACTIONS */}\r\n        <div className=\"form_actions\">\r\n          {!changingAvatar && (\r\n            <button className=\"save_btn\" onClick={saveUserData}>\r\n              Save\r\n            </button>\r\n          )}\r\n          <button className=\"cancel_btn\" onClick={cancelButtonHandler}>\r\n            {!changingAvatar ? \"Cancel\" : \"Back\"}\r\n          </button>\r\n          {!isAdmin && (\r\n            <button\r\n              className=\"delete_profile_btn justify-start\"\r\n              onClick={deleteProfileHandler}\r\n            >\r\n              Delete Profile\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileEditor;\r\n","import React, { useEffect } from 'react';\r\nimport SpotifyPlayer from 'react-spotify-web-playback';\r\nimport SpotifyWebApi from 'spotify-web-api-node';\r\nimport './SpotifyPlayback.css';\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n  clientId: process.env.REACT_APP_SPOTIFY_CLIENT_ID,\r\n});\r\n\r\nconst activeProfile = localStorage.getItem('profile');\r\n\r\nconst SpotifyPlayback = ({\r\n  trackUri,\r\n  playAudio,\r\n  beginPlayback,\r\n  pausePlayback,\r\n  spotifyToken,\r\n}) => {\r\n  useEffect(() => {\r\n    spotifyApi.setAccessToken(spotifyToken);\r\n  }, [spotifyToken]);\r\n\r\n  useEffect(() => {\r\n    beginPlayback();\r\n  }, [trackUri]);\r\n\r\n  if (!spotifyToken) return;\r\n  return (\r\n    <>\r\n      <div className='playback_container'>\r\n        <SpotifyPlayer\r\n          token={spotifyToken}\r\n          callback={(state) => {\r\n            if (!state.isPlaying) pausePlayback();\r\n          }}\r\n          uris={trackUri ? [trackUri] : []}\r\n          play={playAudio}\r\n          styles={{\r\n            color: 'white',\r\n            bgColor: 'rgba(0,0,0,0.8)',\r\n            sliderColor: activeProfile.color,\r\n            trackArtistColor: 'white',\r\n            trackNameColor: activeProfile.color,\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SpotifyPlayback;\r\n"],"names":["delay","className","style","animationDelay","onClick","e","stopPropagation","GamePreview","lazy","activeProfile","spotifyToken","genreDetails","playTrack","currentTrack","setGameDetails","resumePlayback","pausePlayback","isPlaying","currentGameOpen","closeGameWindow","openGame","updateGameStatus","setNotification","loading","hoverGame","hoverAway","currentHover","currentCollection","gameStatus","useState","currentGame","setCurrentGame","baseURL","process","currentPlaylist","setCurrentPlaylist","viewingSoundtrack","setViewingSoundtrack","viewingPreview","setViewingPreview","playlistLoading","setPlaylistLoading","genreTitle","genreList","fetchGameOST","game","axios","params","name","token","request","data","status","console","log","id","tracks","checkGameOwned","some","item","determineESRB","age_ratings","src","rpRating","hasRating","filter","rating","category","length","alt","eRating","tRating","mRating","map","undefined","cover","zIndex","onMouseOver","onMouseLeave","display","fetchGameDetails","viewGameSoundtrack","closeGameSoundtrack","track","color","fontWeight","title","split","selectTrackHandler","transformStyle","image_id","Suspense","fallback","gameCover","ratingImage","closeGame","Array","i","isLoading","setIsLoading","bannerGamesList","setBannerGamesList","serverError","setServerError","twitchToken","localStorage","getItem","fetchData","selectedGame","Math","floor","random","useEffect","displayNewBanner","newGame","splice","indexOf","addGame","bannerGame","useFetchBanner","str","n","hasArt","artworks","exists","collection","backgroundSize","backgroundImage","backgroundPosition","summary","substr","size","SPOTIFY_AUTH_URL","props","allProfiles","handleEsc","event","keyCode","closeNavDropdown","window","addEventListener","removeEventListener","sort","a","b","user","changeProfile","changeUserHandler","avatar","toProfilePage","editProfile","viewCollection","editAccount","href","to","logoutHandler","closeAccountSettings","setLoggedUser","currentUser","deletingAccount","setDeletingAccount","updateStatus","setUpdateStatus","email","emailValue","setEmailValue","newEmailValue","setNewEmailValue","changingEmail","setChangingEmail","password","passwordValue","setPasswordValue","hidePassword","setHidePassword","newPasswordValue","setNewPasswordValue","changingPassword","setChangingPassword","hiddenPassword","replace","updateEmail","originalEmail","newEmail","type","message","deleteAccountHandler","_id","location","removeItem","height","fontSize","marginLeft","onChange","target","value","placeholder","autoFocus","justifyContent","displayNav","setDisplayNav","displayDropdown","setDisplayDropdown","displaySearch","setDisplaySearch","searchRef","useRef","editingProfile","setEditingProfile","editingAccount","setEditingAccount","profile","scrollNavListener","scrollY","cancelEdit","document","body","overflowY","ProfileEditor","currentProfile","userEmail","viewAllProfiles","saveEdit","getProfile","test","selectProfile","onSubmit","preventDefault","searchValue","current","trim","fetchSubmittedGame","ref","defaultValue","searchedGame","onBlur","defaultAvatar","transform","changeUser","profiles","onLogout","updateCollection","games","setGames","currentFilter","setCurrentFilter","changingFilter","setChangingFilter","currentlyViewing","setCurrentlyViewing","setLoading","todaysDate","Date","weekDateFormat","getTime","monthDateFormat","setMonth","getMonth","yearDateFormat","filterUniques","list","uniques","filteredList","push","startDate","targetDate","retries","currentDate","changeFilterDate","innerText","convertDate","date","formattedDay","now","currentDay","getDate","getFullYear","onMouseOut","backgroundColor","human","trendingTitlesFetched","JSON","parse","sessionStorage","trendingTitles","uniqueTitles","Set","has","add","forEach","release_dates","findLast","dates","hypes","slice","setItem","stringify","fetchNewReleases","rating_count","requestId","genreId","GameDetails","Notification","UserCollection","code","URLSearchParams","search","get","Dashboard","userNotes","fetchGame","logoutUser","resetGameStatus","allGenres","existingToken","genreGamesList","setGenreGamesList","fetchGenres","last_updated","setDate","updateGenresAPI","genres_list","Promise","all","requestsIGDB","genre","genreTitles","completeGenreList","updateGenresCollection","useFetchGenres","displayNotification","notification","setCurrentTrack","playAudio","setPlayAudio","rowsLoading","viewingCollection","setViewingCollection","setCurrentGameOpen","hoveringGame","setHoveringGame","gameDetails","spotifyAccessToken","accessToken","setAccessToken","refreshToken","setRefreshToken","expiresIn","setExpiresIn","prevToken","spotifyAuthentication","tokenRequest","access_token","refresh_token","expires_in","history","pushState","refreshSpotifyToken","interval","setInterval","clearTimeout","useSpotifyAuth","steamCollection","setSteamCollection","fetchUserLibrary","config","useSteamAuth","overflow","closeDetails","action","hideNotification","backToHome","reload","Object","entries","openGameWindow","G","keys","SpotifyPlayback","beginPlayback","trackUri","uri","memo","selectGame","url","isAdmin","searchLoading","setSearchLoading","currentProfileName","nameValue","setNameValue","titleRef","favorite_game","titleValue","setTitleValue","titleId","setTitleId","titleImage","setTitleImage","titleList","setTitleList","consoleRef","favorite_console","consoleValue","setConsoleValue","setStatusMessage","currentAvatar","setCurrentAvatar","fileInputRef","imgLink","setImgLink","usingImgLink","setUsingImgLink","changingAvatar","setChangingAvatar","changingColor","setChangingColor","setColor","genreRef","changingGenre","setChangingGenre","favorite_genre","currentGenre","setCurrentGenre","delaySearch","setTimeout","fetchSearchedGame","gameName","handleClickOutside","contains","deleteProfileHandler","response","updateAvatar","method","FormData","append","files","URL","createObjectURL","saveUserData","userData","originalName","newName","newColor","favoriteGenre","favoriteGame","gameId","imageURL","favoriteConsole","paddingTop","onChangeComplete","hex","textAlign","accept","multiple","click","genreChangeHandler","spotifyApi","SpotifyWebApi","clientId","callback","state","uris","play","styles","bgColor","sliderColor","trackArtistColor","trackNameColor"],"sourceRoot":""}