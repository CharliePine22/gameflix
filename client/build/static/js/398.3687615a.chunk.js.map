{"version":3,"file":"static/js/398.3687615a.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-loading-skeleton/dist/index.mjs","components/SkeletonCard/SkeletonCard.js","hooks/usePagination.js","components/Pagination/Pagination.js","components/SearchResults/SearchResultsIGDB.js"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n","import React from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport './SkeletonCard.css';\r\n\r\nconst SkeletonCard = ({ count, type }) => {\r\n  if (type == 'full') {\r\n    return (\r\n      <section className='skeleton_card_wrapper'>\r\n        <ul className='list'>\r\n          {Array(count)\r\n            .fill()\r\n            .map((item, index) => (\r\n              <li className='card' key={index}>\r\n                <Skeleton\r\n                  height={180}\r\n                  className='card_banner'\r\n                  highlightColor='#323232'\r\n                />\r\n                <h4 className='card-title'>\r\n                  <Skeleton\r\n                    className='card_cover'\r\n                    baseCover='rgb(35, 35, 35)'\r\n                    highlightColor='#222222'\r\n                    circle={false}\r\n                  />{' '}\r\n                  &nbsp;\r\n                  <Skeleton\r\n                    className='skeleton_title'\r\n                    highlightColor='#222222'\r\n                    baseCover='rgb(35, 35, 35)'\r\n                  />\r\n                </h4>\r\n                <p>\r\n                  <Skeleton\r\n                    style={{ marginLeft: '10px' }}\r\n                    className='card-channel'\r\n                    width={`60%`}\r\n                    highlightColor='#222222'\r\n                  />\r\n                </p>\r\n                <div>\r\n                  <Skeleton\r\n                    style={{ marginLeft: '10px' }}\r\n                    className='card-metrics'\r\n                    width={`90%`}\r\n                    highlightColor='#222222'\r\n                  />\r\n                </div>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </section>\r\n    );\r\n  } else {\r\n    return (\r\n      <section className='skeleton_card_wrapper'>\r\n        <ul className='list_small'>\r\n          {Array(count)\r\n            .fill()\r\n            .map((item, index) => (\r\n              <li className='card_small' key={index}>\r\n                <Skeleton\r\n                  height={104}\r\n                  className='card_banner_small'\r\n                  highlightColor='#222222'\r\n                  enableAnimation={false}\r\n                />\r\n                <h4 className='card-title_small'>\r\n                  <Skeleton\r\n                    className='card_cover_small'\r\n                    circle={false}\r\n                    highlightColor='#222222'\r\n                  />{' '}\r\n                  &nbsp;\r\n                  <Skeleton\r\n                    className='skeleton_title_small'\r\n                    highlightColor='#222222'\r\n                  />\r\n                </h4>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SkeletonCard;\r\n","import React from 'react';\r\nimport { useMemo } from 'react';\r\n\r\nexport const DOTS = '...';\r\n\r\nconst range = (start, end) => {\r\n  let length = end - start + 1;\r\n  return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport const usePagination = ({\r\n  totalCount,\r\n  pageSize,\r\n  siblingCount = 1,\r\n  currentPage,\r\n}) => {\r\n  const paginationRange = useMemo(() => {\r\n    const totalPageCount = Math.ceil(totalCount / pageSize);\r\n\r\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\r\n    const totalPageNumbers = siblingCount + 5;\r\n\r\n    /*\r\n      Case 1:\r\n      If the number of pages is less than the page numbers we want to show in our\r\n      paginationComponent, we return the range [1..totalPageCount]\r\n    */\r\n    if (totalPageNumbers >= totalPageCount) {\r\n      return range(1, totalPageCount);\r\n    }\r\n\r\n    /*\r\n    \tCalculate left and right sibling index and make sure they are within range 1 and totalPageCount\r\n    */\r\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n    const rightSiblingIndex = Math.min(\r\n      currentPage + siblingCount,\r\n      totalPageCount\r\n    );\r\n\r\n    /*\r\n      We do not show dots just when there is just one page number to be inserted between the extremes of sibling and the page limits i.e 1 and totalPageCount. Hence we are using leftSiblingIndex > 2 and rightSiblingIndex < totalPageCount - 2\r\n    */\r\n    const shouldShowLeftDots = leftSiblingIndex > 2;\r\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n    const firstPageIndex = 1;\r\n    const lastPageIndex = totalPageCount;\r\n\r\n    /*\r\n    \tCase 2: No left dots to show, but rights dots to be shown\r\n    */\r\n    if (!shouldShowLeftDots && shouldShowRightDots) {\r\n      let leftItemCount = 3 + 2 * siblingCount;\r\n      let leftRange = range(1, leftItemCount);\r\n\r\n      return [...leftRange, DOTS, totalPageCount];\r\n    }\r\n\r\n    /*\r\n    \tCase 3: No right dots to show, but left dots to be shown\r\n    */\r\n    if (shouldShowLeftDots && !shouldShowRightDots) {\r\n      let rightItemCount = 3 + 2 * siblingCount;\r\n      let rightRange = range(\r\n        totalPageCount - rightItemCount + 1,\r\n        totalPageCount\r\n      );\r\n      return [firstPageIndex, DOTS, ...rightRange];\r\n    }\r\n\r\n    /*\r\n    \tCase 4: Both left and right dots to be shown\r\n    */\r\n    if (shouldShowLeftDots && shouldShowRightDots) {\r\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n    }\r\n  }, [totalCount, pageSize, siblingCount, currentPage]);\r\n\r\n  return paginationRange;\r\n};\r\n","import React from 'react';\r\nimport { usePagination, DOTS } from '../../hooks/usePagination';\r\nimport './Pagination.css';\r\nconst Pagination = (props) => {\r\n  const {\r\n    onPageChange,\r\n    totalCount,\r\n    siblingCount = 1,\r\n    currentPage,\r\n    pageSize,\r\n    className,\r\n  } = props;\r\n\r\n  const paginationRange = usePagination({\r\n    currentPage,\r\n    totalCount,\r\n    siblingCount,\r\n    pageSize,\r\n  });\r\n\r\n  // If there are less than 2 times in pagination range we shall not render the component\r\n  if (currentPage === 0 || paginationRange.length < 2) {\r\n    return null;\r\n  }\r\n\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const onPrevious = () => {\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  let lastPage = paginationRange[paginationRange.length - 1];\r\n  return (\r\n    <ul className='pagination-container'>\r\n      {/* Left navigation arrow */}\r\n      <li\r\n        className={`pagination-item ${currentPage === 1 && 'disabled'}`}\r\n        onClick={onPrevious}\r\n      >\r\n        <div className='arrow left' />\r\n      </li>\r\n      {paginationRange.map((pageNumber) => {\r\n        // If the pageItem is a DOT, render the DOTS unicode character\r\n        if (pageNumber === DOTS) {\r\n          return (\r\n            <li key={`dots ${pageNumber}`} className='pagination-item dots'>\r\n              ...\r\n            </li>\r\n          );\r\n        }\r\n\r\n        // Render our Page Pills\r\n        return (\r\n          <li\r\n            key={`number ${pageNumber}`}\r\n            className={`pagination-item ${\r\n              pageNumber === currentPage && 'selected'\r\n            }`}\r\n            onClick={() => onPageChange(pageNumber)}\r\n          >\r\n            {pageNumber}\r\n          </li>\r\n        );\r\n      })}\r\n      {/*  Right Navigation arrow */}\r\n      <li\r\n        className={`pagination-item ${currentPage == lastPage && 'disabled'}`}\r\n        onClick={onNext}\r\n      >\r\n        <div className='arrow right' />\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect, useMemo, lazy, Suspense } from 'react';\r\nimport './SearchResults.css';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport axios from 'axios';\r\nimport 'react-loading-skeleton/dist/skeleton.css';\r\nimport SkeletonCard from '../SkeletonCard/SkeletonCard';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport eRating from '../../assets/images/ESRB_E.png';\r\nimport tRating from '../../assets/images/ESRB_T.png';\r\nimport mRating from '../../assets/images/ESRB_M.png';\r\nimport rpRating from '../../assets/images/ESRB_RP.png';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport GameDetails from '../GameDetails/GameDetails';\r\n\r\nconst GamePreview = lazy(() => import('../Row/GamePreview/GamePreview'));\r\nlet PageSize = 13;\r\n\r\nconst SearchResultsIGDB = ({\r\n  setGameDetails,\r\n  game,\r\n  closeSearchResults,\r\n  currentGameOpen,\r\n  openGame,\r\n  closeGameWindow,\r\n  addGameHandler,\r\n}) => {\r\n  const twitchToken = localStorage.getItem('twitch_auth');\r\n  const recentSearches = JSON.parse(localStorage.getItem('searches'));\r\n  const location = useLocation();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [recentSearchList, setRecentSearchList] = useState(recentSearches);\r\n\r\n  // Game Preview States\r\n  const [currentGame, setCurrentGame] = useState('');\r\n  const [viewingPreview, setViewingPreview] = useState(false);\r\n  const [searchParams] = useSearchParams();\r\n\r\n  // Search States\r\n  const searchString = location.state.name;\r\n  const [searchValue, setSearchValue] = useState(searchString);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchFinished, setSearchFinished] = useState(false);\r\n  const [searchSubmitted, setSearchSubmitted] = useState(false);\r\n  const query = searchParams.get('name');\r\n\r\n  // Slice searched data based on current pagincation settings\r\n  const currentTableData = useMemo(() => {\r\n    const firstPageIndex = (currentPage - 1) * PageSize;\r\n    const lastPageIndex = firstPageIndex + PageSize;\r\n\r\n    return searchResults.slice(firstPageIndex, lastPageIndex);\r\n  }, [currentPage, searchResults]);\r\n\r\n  const searchGame = async (game) => {\r\n    try {\r\n      setSearchSubmitted(true);\r\n      setSearchFinished(false);\r\n      let newGame = game.replace('Poke', 'Poké');\r\n      const request = await axios.post('/app/search_game', {\r\n        token: twitchToken,\r\n        gameName: newGame,\r\n      });\r\n\r\n      setSearchResults(request.data);\r\n      setCurrentPage(1);\r\n      if (searchString !== '') {\r\n        if (!recentSearches) {\r\n          localStorage.setItem('searches', JSON.stringify([searchString]));\r\n          setRecentSearchList(recentSearches);\r\n        } else {\r\n          recentSearches.push(searchString);\r\n          setRecentSearchList(recentSearches);\r\n          localStorage.setItem('searches', JSON.stringify(recentSearches));\r\n        }\r\n      }\r\n      setSearchSubmitted(false);\r\n      setSearchFinished(true);\r\n      return searchResults;\r\n    } catch (error) {\r\n      setSearchSubmitted(false);\r\n      setSearchFinished(true);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (query == '') return;\r\n    window.scrollTo(0, 0);\r\n    searchGame(query);\r\n  }, [query]);\r\n\r\n  const removeRecentSearchItem = (name) => {\r\n    const newList = recentSearches.filter((item) => item !== name);\r\n    setRecentSearchList([]);\r\n    localStorage.setItem('searches', JSON.stringify(newList));\r\n  };\r\n\r\n  const submitSearchHandler = (e) => {\r\n    if (e.key === 'Enter') {\r\n      searchGame(searchValue);\r\n    }\r\n  };\r\n\r\n  const uniqueSearches = (searches) => {\r\n    let result = [];\r\n    for (let item of searches) {\r\n      if (result.indexOf(item) === -1) {\r\n        result.push(item);\r\n      }\r\n    }\r\n    localStorage.setItem('searches', JSON.stringify(result));\r\n    return result.reverse();\r\n  };\r\n\r\n  const determineESRB = (game) => {\r\n    if (!game || !game.age_ratings)\r\n      return <img className='row__poster__esrb_img' src={rpRating} />;\r\n    const hasRating = game?.age_ratings.filter(\r\n      (rating) => rating.category == 1 || rating.category == 2\r\n    );\r\n\r\n    if (hasRating.length == 0 || !game.age_ratings)\r\n      return <img className='row__poster__esrb_img' src={rpRating} />;\r\n    const esrb = hasRating[0].rating;\r\n\r\n    switch (esrb) {\r\n      case 1:\r\n      case 2:\r\n      case 8:\r\n      case 9:\r\n        return <img className='row__poster__esrb_img' src={eRating} />;\r\n      case 3:\r\n      case 4:\r\n      case 10:\r\n        return <img className='row__poster__esrb_img' src={tRating} />;\r\n      case 5:\r\n      case 11:\r\n        return <img className='row__poster__esrb_img' src={mRating} />;\r\n      default:\r\n        return <img className='row__poster__esrb_img' src={rpRating} />;\r\n    }\r\n  };\r\n\r\n  const displayGameCase = (e, game) => {\r\n    e.stopPropagation();\r\n    setCurrentGame(game);\r\n    openGame(game);\r\n  };\r\n\r\n  if (game) {\r\n    <>\r\n      <GameDetails\r\n        // setNotification={(status, message) =>\r\n        //   setNotification({ status, message })\r\n        // }\r\n        game={game}\r\n        closeDetails={() => setGameDetails(null)}\r\n        twitchToken={twitchToken}\r\n        // addGame={(game) => addGame(game)}\r\n        // removeGame={(game) => removeGame(game)}\r\n      />\r\n    </>;\r\n  }\r\n\r\n  // Skeleton Loader\r\n  if (searchSubmitted && !searchFinished) {\r\n    return (\r\n      <div className='search_results'>\r\n        <div className='search_results__nav'>\r\n          <span onClick={closeSearchResults}>X</span>\r\n          <div className='search_results__nav_search'>\r\n            <input\r\n              placeholder={`${\r\n                searchString !== '' ? searchString : 'Search...'\r\n              }`}\r\n              value={searchValue}\r\n              onKeyDown={submitSearchHandler}\r\n              onChange={(e) => setSearchValue(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='search_results__container_skeleton'>\r\n          <div className='top_results_row_skeleton'>\r\n            <h2>Top Results</h2>\r\n            <SkeletonCard count={3} type='full' />\r\n          </div>\r\n          <div className='remainder_results_skeleton'>\r\n            <h2>Results</h2>\r\n            <SkeletonCard count={9} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='search_results'>\r\n      {/* SEARCH NAV */}\r\n      <div className='search_results__nav'>\r\n        <span onClick={closeSearchResults}>X</span>\r\n        <div className='search_results__nav_search'>\r\n          <input\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n            placeholder='Search..'\r\n            onKeyDown={submitSearchHandler}\r\n          />\r\n          <FaSearch\r\n            className='search_results__nav_search_icon'\r\n            onClick={submitSearchHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='search_results__container'>\r\n        {currentGameOpen === currentGame.id && (\r\n          <div className='search_results__game_preview'>\r\n            <h1 onClick={closeGameWindow}>X</h1>\r\n            <Suspense fallback={<>...</>}>\r\n              <GamePreview\r\n                style={{ top: '230px' }}\r\n                game={currentGame}\r\n                gameCover={`https://images.igdb.com/igdb/image/upload/t_1080p_2x/${currentGame.cover?.image_id}.jpg`}\r\n                ratingImage={determineESRB(currentGame)}\r\n                addGame={addGameHandler}\r\n                displayDetails={setGameDetails}\r\n                hideDetails={closeGameWindow}\r\n                fetchGameDetails={(game) => {\r\n                  setGameDetails(game);\r\n                }}\r\n                viewingPreview={viewingPreview}\r\n                openGame={() => setViewingPreview(true)}\r\n                closeGame={() => setViewingPreview(false)}\r\n              />\r\n            </Suspense>\r\n          </div>\r\n        )}\r\n\r\n        {searchResults.length == 0 && (\r\n          <div className='search_results__error'>\r\n            <p>\r\n              Sorry, no results for current game, please refine your search and\r\n              try again!\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {currentTableData.length > 0 && (\r\n          <>\r\n            <h2>Top Results</h2>\r\n            {/* Top 3 Search Results */}\r\n            <div className='top_results_row'>\r\n              {searchResults.slice(0, 3)?.map((game) => (\r\n                <div\r\n                  className='top_result_container'\r\n                  key={game.id}\r\n                  onClick={() => setGameDetails(game)}\r\n                >\r\n                  <div className='top_result_upper'>\r\n                    <div\r\n                      className='result_publisher'\r\n                      onClick={(e) => displayGameCase(e, game)}\r\n                    >\r\n                      <h3>3D</h3>\r\n                    </div>\r\n                    <img\r\n                      src={`https://images.igdb.com/igdb/image/upload/t_screenshot_big/${\r\n                        game.artworks\r\n                          ? game.artworks[0]?.image_id\r\n                          : game.cover?.image_id\r\n                      }.jpg`}\r\n                    />\r\n                  </div>\r\n                  <div className='top_result_lower'>\r\n                    <h3 className='game_name'>\r\n                      {game.name || <Skeleton count={1} />}\r\n                    </h3>\r\n                    <ul className='game_theme_list'>\r\n                      {game.themes?.map(\r\n                        (theme) =>\r\n                          theme.name !== 'Sandbox' && (\r\n                            <li key={theme.id}>{theme.name}</li>\r\n                          )\r\n                      )}\r\n                    </ul>\r\n                  </div>\r\n                  <div\r\n                    className='game_cover'\r\n                    style={{\r\n                      backgroundSize: '100% 100%',\r\n                      backgroundImage: `url(https://images.igdb.com/igdb/image/upload/t_cover_big/${game.cover?.image_id}.jpg)`,\r\n                      backgroundPosition: 'center',\r\n                    }}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n        {/* Remaining Games */}\r\n        {currentTableData.length > 3 && (\r\n          <div className='remainder_results'>\r\n            <h2>Results</h2>\r\n            {currentTableData.slice(3)?.map(\r\n              (game) =>\r\n                game.cover !== undefined && (\r\n                  <div\r\n                    className='results_container'\r\n                    key={game.id}\r\n                    onClick={() => setGameDetails(game)}\r\n                  >\r\n                    <div\r\n                      className='remainder_3d'\r\n                      onClick={(e) => displayGameCase(e, game)}\r\n                    >\r\n                      <h3>3D</h3>\r\n                    </div>\r\n                    <div\r\n                      className='results_container_img'\r\n                      style={{\r\n                        backgroundSize: '100% 105%',\r\n                        backgroundImage: `url(//images.igdb.com/igdb/image/upload/t_cover_big/${game.cover.image_id}.jpg)`,\r\n                        backgroundPosition: 'center',\r\n                      }}\r\n                    />\r\n                    <div className='results_container_content'>\r\n                      <h3 className='game_name_remainder'>{game.name}</h3>\r\n\r\n                      <ul className='game_theme_list_lower'>\r\n                        {game.themes?.map(\r\n                          (theme, i) =>\r\n                            theme.name !== 'Sandbox' &&\r\n                            i < 3 && <li key={theme.id}>{theme.name}</li>\r\n                        )}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                )\r\n            )}\r\n          </div>\r\n        )}\r\n        <Pagination\r\n          className='pagination-bar'\r\n          currentPage={currentPage}\r\n          totalCount={searchResults.length - 3}\r\n          pageSize={PageSize}\r\n          onPageChange={(page) => setCurrentPage(page)}\r\n        />\r\n      </div>\r\n      {/* <div className='search_bottom_fade' /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResultsIGDB;\r\n"],"names":["source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","SkeletonThemeContext","React","Skeleton","_a","_b","_c","count","Wrapper","wrapper","customClassName","className","containerClassName","containerTestId","circle","styleProp","style","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","entries","styleOptions","baseColor","highlightColor","width","height","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","map","el","type","Array","fill","item","index","baseCover","marginLeft","DOTS","range","start","end","from","_","idx","props","onPageChange","totalCount","siblingCount","currentPage","pageSize","paginationRange","useMemo","totalPageCount","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","lastPage","onClick","pageNumber","GamePreview","lazy","setGameDetails","game","closeSearchResults","currentGameOpen","openGame","closeGameWindow","addGameHandler","twitchToken","localStorage","getItem","recentSearches","JSON","parse","location","useLocation","useState","setCurrentPage","setRecentSearchList","currentGame","setCurrentGame","viewingPreview","setViewingPreview","useSearchParams","searchParams","searchString","state","name","searchValue","setSearchValue","searchResults","setSearchResults","searchFinished","setSearchFinished","searchSubmitted","setSearchSubmitted","query","get","currentTableData","slice","searchGame","newGame","replace","axios","token","gameName","request","data","setItem","stringify","console","log","useEffect","window","scrollTo","submitSearchHandler","e","displayGameCase","stopPropagation","GameDetails","placeholder","value","onKeyDown","onChange","id","Suspense","fallback","top","gameCover","cover","image_id","ratingImage","age_ratings","src","rpRating","hasRating","filter","rating","category","eRating","tRating","mRating","determineESRB","addGame","displayDetails","hideDetails","fetchGameDetails","closeGame","artworks","themes","theme","backgroundSize","backgroundImage","backgroundPosition","undefined","page"],"sourceRoot":""}