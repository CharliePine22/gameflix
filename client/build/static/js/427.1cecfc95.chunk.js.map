{"version":3,"file":"static/js/427.1cecfc95.chunk.js","mappings":"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","sources":["hooks/useContextMenu.js","components/UserGame/NoteDetails.js","components/UserGame/UserNotes.js","components/UserGame/UserGame.js","components/UserCollectionPage/UserCollection.js"],"sourcesContent":["import { useEffect, useCallback, useState } from 'react';\r\n\r\nconst useContextMenu = () => {\r\n  const [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\r\n  const [showBannerMenu, setShowBannerMenu] = useState(false);\r\n  const [showTitleMenu, setShowTitleMenu] = useState(false);\r\n  const handleContextMenu = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      if (\r\n        event.target.className === 'user_game_banner_img' &&\r\n        !showBannerMenu\r\n      ) {\r\n        setAnchorPoint({ x: event.offsetX, y: event.pageY });\r\n        setShowBannerMenu(true);\r\n        setShowTitleMenu(false);\r\n      }\r\n      if (event.target.className === 'title_list__item') {\r\n        setAnchorPoint({ x: event.movementX + 5, y: event.y + 20 });\r\n        setShowTitleMenu(true);\r\n        setShowBannerMenu(false);\r\n      }\r\n    },\r\n    [setAnchorPoint]\r\n  );\r\n\r\n  const handleClick = useCallback(() => {\r\n    if (showTitleMenu) setShowTitleMenu(false);\r\n    if (showBannerMenu) setShowBannerMenu(false);\r\n  }, [showTitleMenu, showBannerMenu]);\r\n\r\n  const resetContext = () => {\r\n    setShowBannerMenu(false);\r\n    setShowTitleMenu(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick);\r\n    document.addEventListener('contextmenu', handleContextMenu);\r\n    return () => {\r\n      document.removeEventListener('click', handleClick);\r\n      document.removeEventListener('contextmenu', handleContextMenu);\r\n    };\r\n  });\r\n  return { anchorPoint, showTitleMenu, showBannerMenu, resetContext };\r\n};\r\n\r\nexport default useContextMenu;\r\n","import React, { useState } from 'react';\r\nimport './UserNotes.css';\r\nimport { BsArrowLeft } from 'react-icons/bs';\r\n\r\nconst NoteDetails = ({ note, closeNote, updateNote, deleteNote }) => {\r\n  const [noteValue, setNoteValue] = useState(note.note);\r\n\r\n  return (\r\n    <div className='note_details__container'>\r\n      <span className='note_details__date'>{note.date}</span>\r\n      <BsArrowLeft className='note_details__back_icon' onClick={closeNote} />\r\n      <div className='note_details__details'>\r\n        <h4 className='note_details_note'>Note Details</h4>\r\n        <textarea\r\n          value={noteValue}\r\n          onChange={(e) => setNoteValue(e.target.value)}\r\n          className='note_details__editor'\r\n        />\r\n      </div>\r\n      <div className='note_details__actions'>\r\n        <button onClick={() => updateNote(note, noteValue)}>Save Note</button>\r\n        <button onClick={() => deleteNote(note.note)}>Delete Note</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteDetails;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './UserNotes.css';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\nimport { MdEditNote } from 'react-icons/md';\r\nimport { FaAngleDown } from 'react-icons/fa';\r\nimport { IoTrashOutline } from 'react-icons/io5';\r\nimport axios from 'axios';\r\nimport NoteDetails from './NoteDetails';\r\n\r\n// Get current date and format it\r\nconst today = new Date();\r\nconst yyyy = today.getFullYear();\r\nlet mm = today.getMonth() + 1; // Months start at 0!\r\nlet dd = today.getDate();\r\nif (dd < 10) dd = '0' + dd;\r\nif (mm < 10) mm = '0' + mm;\r\nconst formattedToday = mm + '/' + dd + '/' + yyyy;\r\n\r\nconst UserGameNotes = ({\r\n  profile,\r\n  windowViewHandler,\r\n  viewStatus,\r\n  gameNotes,\r\n}) => {\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const userEmail = localStorage.getItem('user');\r\n\r\n  // Tab Hooks\r\n  const [currentTab, setCurrentTab] = useState('');\r\n  const [editingTab, setEditingTab] = useState(false);\r\n  const [tabValue, setTabValue] = useState('');\r\n  const [addingTab, setAddingTab] = useState(false);\r\n  // Note Hooks\r\n  const [noteValue, setNoteValue] = useState('');\r\n  const [currentNote, setCurrentNote] = useState(null);\r\n  let noteTab = gameNotes?.gameNotes?.filter(\r\n    (item) => item.tabName == currentTab\r\n  )[0];\r\n  const notesRef = useRef(null);\r\n  const tabRef = useRef(null);\r\n  const tabEndRef = useRef(null);\r\n\r\n  const createNotes = async () => {\r\n    const request = await axios.post(`${baseURL}/notes/create_note`, {\r\n      email: userEmail,\r\n      profile: profile.name,\r\n    });\r\n    return request;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!profile.notesId) {\r\n      createNotes();\r\n    } else {\r\n      if (currentNote !== null) return;\r\n      notesRef?.current?.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [gameNotes, currentTab]);\r\n\r\n  useEffect(() => {\r\n    const handleEnter = (event) => {\r\n      if (editingTab) {\r\n        if (event.keyCode == 13) {\r\n          console.log(tabValue);\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleEnter);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEnter);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!gameNotes) return;\r\n    setCurrentTab(gameNotes?.gameNotes[0]?.tabName);\r\n    console.log('new game');\r\n  }, [gameNotes]);\r\n\r\n  useEffect(() => {\r\n    if (currentNote !== null) return;\r\n    tabRef.current.focus();\r\n    setEditingTab(false);\r\n    setNoteValue('');\r\n    setTabValue('');\r\n  }, [tabRef, noteTab]);\r\n\r\n  useEffect(() => {\r\n    // tabEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n  console.log(gameNotes);\r\n\r\n  const updateProfileNotes = async () => {\r\n    if (!gameNotes) return;\r\n    const request = await axios.put(`${baseURL}/notes/update_notes`, {\r\n      userNotesId: profile.notesId,\r\n      noteId: gameNotes.id,\r\n      notes: gameNotes,\r\n    });\r\n\r\n    console.log(request);\r\n  };\r\n\r\n  const editTabHandler = () => {\r\n    if (!editingTab) {\r\n      setEditingTab(true);\r\n    } else {\r\n      noteTab.tabName = tabRef.current.innerText;\r\n      updateProfileNotes();\r\n      setCurrentTab(tabRef.current.innerText);\r\n      setEditingTab(false);\r\n    }\r\n  };\r\n\r\n  let timer;\r\n  const addTabHandler = (e) => {\r\n    e.stopPropagation();\r\n    setAddingTab(true);\r\n    timer = setTimeout(\r\n      () => tabEndRef.current.scrollIntoView({ behavior: 'smooth' }),\r\n      150\r\n    );\r\n  };\r\n\r\n  const formSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (noteValue == '') return;\r\n    noteTab.notes.push({\r\n      id: noteTab.notes.length + 1,\r\n      note: noteValue,\r\n      date: formattedToday,\r\n    });\r\n    updateProfileNotes();\r\n    setNoteValue('');\r\n  };\r\n\r\n  const tabFormSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (tabValue == '') return;\r\n    gameNotes.gameNotes.push({\r\n      tabName: tabValue,\r\n      notes: [],\r\n    });\r\n    setCurrentTab(tabValue);\r\n    updateProfileNotes();\r\n    setTabValue('');\r\n    setAddingTab(false);\r\n  };\r\n\r\n  const viewNoteHandler = (note) => {\r\n    setCurrentNote(note);\r\n    setAddingTab(false);\r\n    setEditingTab(false);\r\n  };\r\n\r\n  const saveNoteHandler = (oldNote, newNote) => {\r\n    console.log(oldNote);\r\n    oldNote.note = newNote;\r\n    oldNote.date = formattedToday;\r\n    updateProfileNotes();\r\n\r\n    setCurrentNote(null);\r\n  };\r\n\r\n  const deleteNoteHandler = (note) => {\r\n    const updatedList = noteTab.notes.filter((item) => item.note !== note);\r\n    noteTab.notes = updatedList;\r\n    updateProfileNotes();\r\n\r\n    setCurrentNote(null);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`user_notes__wrapper ${\r\n        !viewStatus.notes && 'minimized_notes'\r\n      }`}\r\n    >\r\n      <FaAngleDown\r\n        style={{\r\n          transform: !viewStatus.notes ? 'rotate(0)' : 'rotate(180deg)',\r\n          display: currentNote && 'none',\r\n        }}\r\n        className='user_game__minimize_icon'\r\n        onClick={() => windowViewHandler('notes')}\r\n      />\r\n      {currentNote ? (\r\n        <NoteDetails\r\n          note={currentNote}\r\n          closeNote={() => setCurrentNote(null)}\r\n          updateNote={saveNoteHandler}\r\n          deleteNote={deleteNoteHandler}\r\n        />\r\n      ) : (\r\n        <>\r\n          <>\r\n            <h4\r\n              contentEditable={editingTab}\r\n              suppressContentEditableWarning={true}\r\n              onBlur={editTabHandler}\r\n              // onInput={(e) => e.preventDefault()}\r\n              onKeyPress={(e) => {\r\n                e.preventDefault();\r\n                console.log(e.currentTarget);\r\n                if (e.key === 'Enter') editTabHandler();\r\n              }}\r\n              // onKeyUp={(e) => {\r\n              //   if (e.key === 'Enter') editTabHandler();\r\n              // }}\r\n            >\r\n              <p\r\n                ref={tabRef}\r\n                style={{\r\n                  borderBottom: editingTab\r\n                    ? '2px solid #9147ff'\r\n                    : '2px solid transparent',\r\n                  userSelect: editingTab ? 'auto' : 'none',\r\n                  padding: '0px 6px',\r\n                  transition: 'all 200ms',\r\n                }}\r\n              >\r\n                {currentTab}\r\n              </p>{' '}\r\n              <MdEditNote\r\n                className='edit_tab_icon'\r\n                onClick={() => setEditingTab(!editingTab)}\r\n              />{' '}\r\n            </h4>\r\n            <div className='user_notes__header'>\r\n              <ul className='user_notes__tabs'>\r\n                {gameNotes?.gameNotes?.map((item) => (\r\n                  <li\r\n                    key={item.tabName}\r\n                    className='user_notes__tab'\r\n                    onClick={() => setCurrentTab(item.tabName)}\r\n                    style={{\r\n                      borderBottom:\r\n                        currentTab == item.tabName && '1px solid transparent',\r\n                    }}\r\n                  >\r\n                    {item.tabName}\r\n                  </li>\r\n                ))}\r\n                <li\r\n                  className={`user_notes__tab ${\r\n                    addingTab ? 'add_tab' : 'new_tab'\r\n                  }`}\r\n                  // onClick={() => !addingTab && setAddingTab(true)}\r\n                  onClick={addTabHandler}\r\n                >\r\n                  {!addingTab ? (\r\n                    <AiOutlinePlus />\r\n                  ) : (\r\n                    <div className='new_tab__container'>\r\n                      <form onSubmit={tabFormSubmitHandler}>\r\n                        <input\r\n                          value={tabValue}\r\n                          onChange={(e) => setTabValue(e.target.value)}\r\n                        />\r\n                      </form>\r\n                      <p\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          setAddingTab(false);\r\n                        }}\r\n                      >\r\n                        X\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </li>\r\n                <div ref={tabEndRef} />\r\n              </ul>\r\n            </div>\r\n          </>\r\n          <div className='user_notes__notes_wrapper'>\r\n            <ul className='user_notes__notes'>\r\n              {gameNotes?.gameNotes?.filter(\r\n                (item) => item.tabName == currentTab\r\n              )[0]?.notes?.length > 0 ? (\r\n                gameNotes?.gameNotes\r\n                  ?.filter((item) => item.tabName == currentTab)[0]\r\n                  ?.notes.map((note) => (\r\n                    <li\r\n                      key={note.note}\r\n                      className='user_note'\r\n                      onClick={() => viewNoteHandler(note)}\r\n                    >\r\n                      {note.note}\r\n                    </li>\r\n                  ))\r\n              ) : (\r\n                <p className='no_notes_msg'>No Notes</p>\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div ref={notesRef} style={{ width: '10px', marginLeft: '5px' }} />\r\n          <div\r\n            className='user_notes__form_container'\r\n            style={{ display: `${!viewStatus.notes ? 'none' : 'block'}` }}\r\n          >\r\n            <form className='user_notes__form' onSubmit={formSubmitHandler}>\r\n              <input\r\n                value={noteValue}\r\n                onChange={(e) => setNoteValue(e.target.value)}\r\n                className='user_notes__input'\r\n                placeholder='I think Clark Kent is Batman'\r\n              />\r\n            </form>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserGameNotes;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './UserGame.css';\r\nimport axios from 'axios';\r\nimport { FiClock } from 'react-icons/fi';\r\nimport { FaMedal, FaMusic, FaAngleDown } from 'react-icons/fa';\r\nimport { DynamicStar } from 'react-dynamic-star';\r\nimport useContextMenu from '../../hooks/useContextMenu';\r\nimport UserGameNotes from './UserNotes';\r\n\r\nconst today = new Date();\r\nconst yyyy = today.getFullYear();\r\nlet mm = today.getMonth() + 1; // Months start at 0!\r\nlet dd = today.getDate();\r\nif (dd < 10) dd = '0' + dd;\r\nif (mm < 10) mm = '0' + mm;\r\nconst formattedToday = mm + '/' + dd + '/' + yyyy;\r\n\r\nconst UserGame = ({\r\n  game,\r\n  activeProfile,\r\n  closeStats,\r\n  setProfile,\r\n  setNotification,\r\n  setCurrentGame,\r\n  updateCollection,\r\n  userNotes,\r\n}) => {\r\n  // RATING, PLAYTIME, ACHIEVEMENTS, SPOTIFY, NOTES, STATUS(COMPLETED, BACKLOG, ETC.), PLATFORMS OWNED\r\n  const { anchorPoint, showBannerMenu, resetContext } = useContextMenu();\r\n  // Achievement States\r\n  const [viewStatus, setViewStatus] = useState({\r\n    achievements: true,\r\n    notes: true,\r\n    trophies: true,\r\n  });\r\n  const [achievements, setAchievements] = useState(game.achievements);\r\n  const [trophies, setTrophies] = useState(game.trophies);\r\n  const [achievementFilter, setAchievementFilter] = useState('unlocked');\r\n  const [trophyFilter, setTrophyFilter] = useState('unlocked');\r\n  // Playtime States\r\n  const [playtime, setPlaytime] = useState(Math.floor(game.playtime / 60));\r\n  const [changingPlaytime, setChangingPlaytime] = useState(false);\r\n  // Rating States\r\n  const [rating, setRating] = useState(game.user_rating);\r\n  const [changingRating, setChangingRating] = useState(false);\r\n  const [gameNews, setGameNews] = useState(null);\r\n  const [changingBanner, setChangingBanner] = useState(false);\r\n  const [bannerLink, setBannerLink] = useState('');\r\n  // BACKLOG, CURRENTLY PLAYING, COMPLETED, STARTED, ABANDONED, 100%, NOT OWNED\r\n  const [backlogStatus, setBacklogStatus] = useState(game.status);\r\n  const [changingBacklog, setChangingBacklog] = useState(false);\r\n  // Hooks and Storage Variables\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const steamID = localStorage.getItem('steamID');\r\n  const achievementsIntegrated = localStorage.getItem('achivementsConn');\r\n  const userEmail = localStorage.getItem('user');\r\n  const trophyPercentage = Math.floor(\r\n    (trophies?.filter((game) => game.earned == true).length /\r\n      trophies?.length) *\r\n      100\r\n  );\r\n  const achievementPercentage = Math.floor(\r\n    (achievements?.filter(\r\n      (game) => game.achieved == true || game.earned == true\r\n    ).length /\r\n      achievements?.length) *\r\n      100\r\n  );\r\n\r\n  console.log(game);\r\n\r\n  const gamefaqsURL = `https://gamefaqs.gamespot.com/search?game=${game.name.replaceAll(\r\n    ' ',\r\n    '+'\r\n  )}`;\r\n\r\n  const addNoteItem = () => {\r\n    userNotes.notes_collection.push({\r\n      id: game.id,\r\n      gameNotes: [\r\n        {\r\n          tabName: 'Notes',\r\n          notes: [\r\n            {\r\n              id: 0,\r\n              note: `These are your notes for ${game.name}! Click me to edit this or start your own tab by clicking the +!`,\r\n              date: formattedToday,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userNotes.notes_collection.filter((g) => g.id == game.id).length > 0)\r\n      return;\r\n    else addNoteItem();\r\n  }, [game]);\r\n\r\n  useEffect(() => {\r\n    const handleEsc = (event) => {\r\n      if (event.keyCode === 27) {\r\n        setChangingRating(false);\r\n        setChangingBacklog(false);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleEsc);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEsc);\r\n    };\r\n  }, []);\r\n\r\n  // Runs everytime game changes\r\n  useEffect(() => {\r\n    setChangingPlaytime(false);\r\n    setChangingRating(false);\r\n    setChangingBacklog(false);\r\n    setBacklogStatus(game.status || 'BACKLOG');\r\n    setPlaytime(Math.floor(game.playtime / 60));\r\n    setRating(game.user_rating);\r\n    setAchievements(game.achievements);\r\n    setTrophies(game.trophies);\r\n    if (!steamID) {\r\n      console.log('No steam id');\r\n      return;\r\n    }\r\n\r\n    // Compare both achievement lists to get Icons\r\n    const getAchievementData = (arr1, arr2) => {\r\n      let dataList = [];\r\n      arr2.map(function (x) {\r\n        var result = arr1.filter((a1) => a1.name == x.displayName);\r\n        if (result.length > 0) {\r\n          x.achieved = result[0].achieved;\r\n        }\r\n        dataList.push(x);\r\n      });\r\n\r\n      // Sort Alphabetically\r\n      dataList.sort(function (a, b) {\r\n        var textA = a.displayName.toUpperCase();\r\n        var textB = b.displayName.toUpperCase();\r\n        return textA < textB ? -1 : textA > textB ? 1 : 0;\r\n      });\r\n\r\n      dataList.sort(function (a, b) {\r\n        return a.achieved < b.achieved ? 1 : a.achieved > b.achieved ? -1 : 0;\r\n      });\r\n      return dataList;\r\n    };\r\n\r\n    // Sort by unlocked Achievements\r\n    const fetchAppData = async () => {\r\n      const steamGameStats = await axios.get(\r\n        `${baseURL}/steam/get_game_stats`,\r\n        {\r\n          params: {\r\n            gameId: game.id,\r\n          },\r\n        }\r\n      );\r\n      if (Object.keys(steamGameStats.data).length == 0) {\r\n        setAchievements(null);\r\n        return;\r\n      }\r\n      try {\r\n        if (!game.achievements) {\r\n          const request = await axios.get(\r\n            `${baseURL}/steam/get_steam_achievements`,\r\n            {\r\n              params: {\r\n                gameId: game.id,\r\n                steamId: steamID,\r\n              },\r\n            }\r\n          );\r\n\r\n          const userAchievementData = getAchievementData(\r\n            request.data.achievements,\r\n            steamGameStats.data.availableGameStats.achievements\r\n          );\r\n\r\n          const addAchievements = await axios.put(\r\n            `${baseURL}/app/update_game_achievements`,\r\n            {\r\n              email: userEmail,\r\n              currentProfile: activeProfile.name,\r\n              achievements: userAchievementData,\r\n              gameId: game.id,\r\n            }\r\n          );\r\n\r\n          console.log(addAchievements);\r\n          setCurrentGame(request.data.response.game);\r\n          updateCollection(request.data.response.profile.collection);\r\n          setAchievements(addAchievements.data.response.game.achievements);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n\r\n      // setPlaytime(Math.floor(game.playtime / 60));\r\n      // setRating(game.user_rating);\r\n    };\r\n    fetchAppData();\r\n  }, [game]);\r\n\r\n  const handleMouseMove = (event) => {\r\n    const bounds = event.currentTarget.getBoundingClientRect();\r\n    const position = Math.floor(event.clientX - bounds.left) / 20;\r\n    setRating(Math.floor(event.clientX - bounds.left) / 20);\r\n  };\r\n\r\n  const getAchievementCount = (list) => {\r\n    if (!list) return 'N/A';\r\n    const numberAchieved = list.filter(\r\n      (game) => game.achieved == true || game.earned == true\r\n    ).length;\r\n    return numberAchieved + '/' + list.length;\r\n  };\r\n\r\n  // Convert steam minutes to numbers\r\n  function padTo2Digits(num) {\r\n    return num.toString().padStart(2, '0');\r\n  }\r\n\r\n  function toHoursAndMinutes(totalMinutes) {\r\n    if (totalMinutes <= 0 && game.type == 'steam') return 'Not Started';\r\n    else if (totalMinutes <= 0 && game.type !== 'steam') return 0 + ' hours';\r\n    else {\r\n      const minutes = totalMinutes % 60;\r\n      const hours = Math.floor(totalMinutes / 60);\r\n      if (minutes == 0) return hours + ' hours';\r\n      // setPlaytime(hours)\r\n      return `${hours}.${padTo2Digits(minutes)} hours`;\r\n    }\r\n  }\r\n\r\n  const updateRatingHandler = async () => {\r\n    let ratingValue = rating * 20;\r\n    if (rating * 20 >= 100) {\r\n      ratingValue = 100;\r\n    }\r\n\r\n    try {\r\n      const request = await axios.put(`${baseURL}/app/update_game_rating`, {\r\n        email: userEmail,\r\n        currentProfile: activeProfile.name,\r\n        rating: ratingValue,\r\n        gameId: game.id,\r\n      });\r\n      console.log(request);\r\n      localStorage.setItem('profile', request.data.response.profile.name);\r\n      // setProfile(request.data.response.profile);\r\n      setCurrentGame(request.data.response.game);\r\n      updateCollection(request.data.response.profile.collection);\r\n      // setNotification({\r\n      //   message: `${game.name} playtime successfully updated!`,\r\n      //   status: 'SUCCESS',\r\n      // });\r\n      setChangingRating(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      // setNotification({\r\n      //   message: `Something went wrong, please try again!`,\r\n      //   status: 'ERROR',\r\n      // });\r\n    }\r\n  };\r\n\r\n  const updatePlaytime = async () => {\r\n    if (game.playtime == playtime) {\r\n      console.log('No new changes');\r\n      return;\r\n    } else {\r\n      try {\r\n        const request = await axios.put(`${baseURL}/app/update_game_playtime`, {\r\n          email: userEmail,\r\n          currentProfile: activeProfile.name,\r\n          playtime: playtime * 60,\r\n          gameId: game.id,\r\n        });\r\n        console.log(request);\r\n        localStorage.setItem('profile', request.data.response.profile.name);\r\n        // setProfile(request.data.response.profile);\r\n        setCurrentGame(request.data.response.game);\r\n        updateCollection(request.data.response.profile.collection);\r\n        // setNotification({\r\n        //   message: `${game.name} playtime successfully updated!`,\r\n        //   status: 'SUCCESS',\r\n        // });\r\n        setChangingPlaytime(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        // setNotification({\r\n        //   message: `Something went wrong, please try again!`,\r\n        //   status: 'ERROR',\r\n        // });\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateBacklog = async (status) => {\r\n    console.log('HAPPENING');\r\n\r\n    try {\r\n      const request = await axios.put(`${baseURL}/app/update_game_backlog`, {\r\n        email: userEmail,\r\n        currentProfile: activeProfile.name,\r\n        status: status,\r\n        gameId: game.id,\r\n      });\r\n      console.log(request);\r\n      localStorage.setItem('profile', request.data.response.profile.name);\r\n      console.log(request.data);\r\n      console.log(request.data.response.profile.collection);\r\n      setCurrentGame(request.data.response.game);\r\n      updateCollection(request.data.response.profile.collection);\r\n      // setNotification({\r\n      //   message: `${game.name} backlog successfully updated!`,\r\n      //   status: 'SUCCESS',\r\n      // });\r\n      setChangingBacklog(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      // setNotification({\r\n      //   message: `Something went wrong, please try again!`,\r\n      //   status: 'ERROR',\r\n      // });\r\n    }\r\n  };\r\n\r\n  const updateBacklogHandler = (status) => {\r\n    updateBacklog(status);\r\n    setChangingBacklog(false);\r\n  };\r\n\r\n  // Minimzie or Maximize Height of Game Component\r\n  const windowViewHandler = (data) => {\r\n    setViewStatus({ ...viewStatus, [data]: !viewStatus[data] });\r\n  };\r\n\r\n  // Determine if user is updating or canceling playtime change\r\n  const determinePlaytimeAction = (e) => {\r\n    if (e.key === 'Enter') {\r\n      updatePlaytime();\r\n    }\r\n    if (e.key === 'Escape') {\r\n      setChangingPlaytime(false);\r\n      setPlaytime(Math.floor(game.playtime / 60));\r\n    }\r\n  };\r\n\r\n  const changeBannerHandler = (e) => {\r\n    e.preventDefault();\r\n    setChangingBanner(true);\r\n    resetContext();\r\n  };\r\n\r\n  const updateBanner = async () => {\r\n    if (bannerLink.trim() == '') return;\r\n    try {\r\n      const request = await axios.put(`${baseURL}/app/update_game_banner`, {\r\n        email: userEmail,\r\n        currentProfile: activeProfile.name,\r\n        url: bannerLink,\r\n        gameId: game.id,\r\n      });\r\n      localStorage.setItem('profile', request.data.response.profile.name);\r\n      setCurrentGame(request.data.response.game);\r\n      updateCollection(request.data.response.profile.collection);\r\n      // setNotification({\r\n      //   message: `${game.name} playtime successfully updated!`,\r\n      //   status: 'SUCCESS',\r\n      // });\r\n    } catch (error) {\r\n      console.log(error);\r\n      //   setNotification({\r\n      //     message: `Something went wrong, please try again!`,\r\n      //     status: 'ERROR',\r\n      //   });\r\n    }\r\n    setChangingBanner(false);\r\n    setBannerLink('');\r\n  };\r\n\r\n  return (\r\n    <div className='user_game__wrapper'>\r\n      {changingBanner && (\r\n        <div className='user_game__modal'>\r\n          <div className='modal_content'>\r\n            <h2\r\n              style={{\r\n                maxWidth: '75%',\r\n                textAlign: 'center',\r\n                marginBottom: '25px',\r\n              }}\r\n            >\r\n              Please enter the link to any image or gif below.\r\n            </h2>\r\n\r\n            <div className='modal_form' style={{ width: '100%' }}>\r\n              <input\r\n                style={{ width: '80%' }}\r\n                value={bannerLink}\r\n                onChange={(e) => setBannerLink(e.target.value)}\r\n              />\r\n              <button onClick={updateBanner}>Submit</button>\r\n              <button onClick={() => setChangingBanner(false)}>Back</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className='user_game__banner'>\r\n        {showBannerMenu && (\r\n          <ul\r\n            className='user_game__banner_context'\r\n            style={{ top: anchorPoint.y + 5, left: anchorPoint.x }}\r\n          >\r\n            <li className='banner_context__item' onClick={changeBannerHandler}>\r\n              Set Custom Banner\r\n            </li>\r\n            <li className='banner_context__item'>Set Custom Logo</li>\r\n            <li className='banner_context__item'>Set Default Image</li>\r\n          </ul>\r\n        )}\r\n\r\n        <div className='user_game__exit' onClick={closeStats}>\r\n          X\r\n        </div>\r\n        <img\r\n          className='user_game_banner_img'\r\n          src={\r\n            game.banner_image ||\r\n            game.imageURL.replace('cover_big_2x', '1080p_2x')\r\n          }\r\n        />\r\n        <div className='user_game__current_stats'>\r\n          {/* PLAYTIME */}\r\n          <div className='playtime_container'>\r\n            <FiClock className='playtime_clock_icon' />\r\n            <div className='stats_item'>\r\n              <h3 style={{ color: changingPlaytime && '#9147ff' }}>\r\n                PLAY TIME\r\n              </h3>\r\n              <span\r\n                style={{ display: changingPlaytime && 'none' }}\r\n                className='previous_playtime'\r\n                onClick={() => setChangingPlaytime(true)}\r\n              >\r\n                {toHoursAndMinutes(game.playtime)}\r\n              </span>\r\n              <input\r\n                type='number'\r\n                value={playtime}\r\n                min='0'\r\n                onKeyDown={determinePlaytimeAction}\r\n                onChange={(e) => setPlaytime(e.target.value)}\r\n                className={`playtime_input ${\r\n                  changingPlaytime && 'playtime_focused'\r\n                }`}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* RATING */}\r\n          <div className='rating_container'>\r\n            <div className='stats_item'>\r\n              <h3 style={{ paddingBottom: changingRating && '4px' }}>RATING</h3>\r\n              <span\r\n                onClick={() => setChangingRating(true)}\r\n                className='previous_rating'\r\n                style={{ display: changingRating && 'none' }}\r\n              >\r\n                {game.user_rating || 0}%\r\n              </span>\r\n              <div\r\n                className='rating_stars'\r\n                onMouseMove={handleMouseMove}\r\n                onClick={updateRatingHandler}\r\n                style={{\r\n                  width: !changingRating && '0px',\r\n                  display: !changingRating && 'none',\r\n                }}\r\n              >\r\n                <DynamicStar\r\n                  rating={rating}\r\n                  totalStars={5}\r\n                  width={20}\r\n                  height={20}\r\n                  outlined={true}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* BACKLOG STATUS */}\r\n          <div className='achievement_count_container'>\r\n            <div className='stats_item'>\r\n              <h3 style={{ paddingTop: '5px' }}>STATUS</h3>\r\n              <button\r\n                onClick={() => setChangingBacklog(!changingBacklog)}\r\n                style={{\r\n                  backgroundColor:\r\n                    backlogStatus == 'BACKLOG'\r\n                      ? 'dodgerblue'\r\n                      : backlogStatus == 'STARTED'\r\n                      ? 'aqua'\r\n                      : backlogStatus == 'FINISHED'\r\n                      ? 'green'\r\n                      : backlogStatus == 'PLAYING'\r\n                      ? 'pink'\r\n                      : backlogStatus == '100%'\r\n                      ? 'gold'\r\n                      : backlogStatus == 'ABANDONDED'\r\n                      ? 'red'\r\n                      : 'grey',\r\n                }}\r\n                className='status_btn'\r\n              >\r\n                {backlogStatus}\r\n              </button>\r\n            </div>\r\n            {changingBacklog && (\r\n              <div className='backlog_items'>\r\n                <ul className='backlog_items_list'>\r\n                  <li\r\n                    style={{\r\n                      backgroundColor: 'BACKLOG' == game.status && '#9147ff',\r\n                      color: 'BACKLOG' == game.status && 'white',\r\n                    }}\r\n                    className='backlog_items_item'\r\n                    onClick={() => {\r\n                      updateBacklogHandler('BACKLOG');\r\n                    }}\r\n                  >\r\n                    Backlog\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      backgroundColor: 'STARTED' == game.status && '#9147ff',\r\n                      color: 'STARTED' == game.status && 'white',\r\n                    }}\r\n                    className='backlog_items_item'\r\n                    onClick={() => {\r\n                      updateBacklogHandler('STARTED');\r\n                    }}\r\n                  >\r\n                    Started\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      backgroundColor: 'PLAYING' == game.status && '#9147ff',\r\n                      color: 'PLAYING' == game.status && 'white',\r\n                    }}\r\n                    className='backlog_items_item'\r\n                    onClick={() => {\r\n                      updateBacklogHandler('PLAYING');\r\n                    }}\r\n                  >\r\n                    Currently Playing\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      backgroundColor: 'FINISHED' == game.status && '#9147ff',\r\n                      color: 'FINISHED' == game.status && 'white',\r\n                    }}\r\n                    className='backlog_items_item'\r\n                    onClick={() => {\r\n                      updateBacklogHandler('FINISHED');\r\n                    }}\r\n                  >\r\n                    Finished\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      backgroundColor: '100%' == game.status && '#9147ff',\r\n                      color: '100%' == game.status && 'white',\r\n                    }}\r\n                    className='backlog_items_item'\r\n                    onClick={() => {\r\n                      updateBacklogHandler('100%');\r\n                    }}\r\n                  >\r\n                    100% Completed\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      backgroundColor: 'ABANDONDED' == game.status && '#9147ff',\r\n                      color: 'ABANDONDED' == game.status && 'white',\r\n                    }}\r\n                    className='backlog_items_item'\r\n                    onClick={() => {\r\n                      updateBacklogHandler('ABANDONDED');\r\n                    }}\r\n                  >\r\n                    Abandonded\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      backgroundColor: 'NOT OWNED' == game.status && '#9147ff',\r\n                      color: 'NOT OWNED' == game.status && 'white',\r\n                    }}\r\n                    className='backlog_items_item'\r\n                    onClick={() => {\r\n                      updateBacklogHandler('NOT OWNED');\r\n                    }}\r\n                  >\r\n                    Not Owned\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* SPOTIFY MUSIC */}\r\n          <div className='music_icon_container'>\r\n            <div className='stats_item' style={{ alignItems: 'center' }}>\r\n              <h3>MUSIC</h3>\r\n              <FaMusic className='music_icon' />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* GAME NEWS AND DATA */}\r\n      <div className='user_game__data_wrapper'>\r\n        <div className='user_game__data'>\r\n          {/* OWNED PLATFORMS */}\r\n          {/* <div className='user_game__platforms'>\r\n            <h4>Platforms Owned</h4>\r\n            <ul>{game.origin == 'steam' && <li>Steam</li>}</ul>\r\n          </div> */}\r\n\r\n          {/* ACHIEVEMENT LIST */}\r\n          {achievements && (\r\n            <div\r\n              className={`user_game__achievements_wrapper ${\r\n                !viewStatus.achievements && 'minimized'\r\n              }`}\r\n            >\r\n              <div className='user_game__achievements'>\r\n                <div className='user_game__achievements_banner'>\r\n                  <FaAngleDown\r\n                    style={{\r\n                      transform: !viewStatus.achievements\r\n                        ? 'rotate(0)'\r\n                        : 'rotate(180deg)',\r\n                    }}\r\n                    className='user_game__minimize_icon'\r\n                    onClick={() => windowViewHandler('achievements')}\r\n                  />\r\n                  {achievementPercentage === 100 && (\r\n                    <FaMedal className='user_game__completion_medal' />\r\n                  )}\r\n                  <h4>\r\n                    <p>Achievements</p>\r\n                  </h4>\r\n                  <p>\r\n                    You've unlocked {getAchievementCount(achievements)} (\r\n                    {achievementPercentage}\r\n                    %)\r\n                  </p>\r\n                  <div className='user_game__achievements_progress_bar_container'>\r\n                    <div\r\n                      className='user_game__achievements_progress_bar'\r\n                      style={{\r\n                        width: `${achievementPercentage}%`,\r\n                        background: activeProfile.color,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className='user_game__achievements_actions'>\r\n                    <button\r\n                      className={achievementFilter == 'unlocked' && 'active'}\r\n                      onClick={() => setAchievementFilter('unlocked')}\r\n                    >\r\n                      Unlocked\r\n                    </button>\r\n                    <button\r\n                      className={`${achievementFilter == 'locked' && 'active'}`}\r\n                      onClick={() => setAchievementFilter('locked')}\r\n                    >\r\n                      In Progress\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <ul className='user_game__achievements_list'>\r\n                  {achievements\r\n                    .filter((achievement) =>\r\n                      achievementFilter == 'unlocked'\r\n                        ? achievement.achieved\r\n                        : !achievement.achieved\r\n                    )\r\n                    .sort((a, b) =>\r\n                      a.displayName > b.displayName\r\n                        ? 1\r\n                        : b.displayName > a.displayName\r\n                        ? -1\r\n                        : 0\r\n                    )\r\n                    .map((item) => (\r\n                      <li className='achievement_item'>\r\n                        <div\r\n                          className='achievement_item_icon'\r\n                          style={{ border: `1px solid ${activeProfile.color}` }}\r\n                        >\r\n                          <img\r\n                            className='achievement_item_icon__img'\r\n                            src={item.achieved ? item.icon : item.icongray}\r\n                          />\r\n                        </div>\r\n                        <div className='achievement_item_headers'>\r\n                          <h4>{item.displayName}</h4>\r\n                          {item.description && <p>{item.description}</p>}\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* PLAYSTATION TROPHIES */}\r\n          {trophies && (\r\n            <div\r\n              className={`user_game__achievements_wrapper ${\r\n                !viewStatus.trophies && 'minimized'\r\n              }`}\r\n            >\r\n              <div\r\n                className={`user_game__achievements ${\r\n                  trophyPercentage == 100 && 'completed'\r\n                }`}\r\n              >\r\n                <div className='user_game__achievements_banner'>\r\n                  <FaAngleDown\r\n                    style={{\r\n                      transform: !viewStatus.trophies\r\n                        ? 'rotate(0)'\r\n                        : 'rotate(180deg)',\r\n                    }}\r\n                    className='user_game__minimize_icon'\r\n                    onClick={() => windowViewHandler('trophies')}\r\n                  />\r\n                  {trophyPercentage === 100 && (\r\n                    <FaMedal className='user_game__completion_medal' />\r\n                  )}\r\n                  <h4>\r\n                    <p>Trophies</p>\r\n                  </h4>\r\n                  <p>\r\n                    You've unlocked {getAchievementCount(trophies)} (\r\n                    {trophyPercentage}%)\r\n                  </p>\r\n                  <div className='user_game__achievements_progress_bar_container'>\r\n                    <div\r\n                      className='user_game__achievements_progress_bar'\r\n                      style={{\r\n                        width: `${trophyPercentage}%`,\r\n                        background: activeProfile.color,\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='user_game__achievements_actions'>\r\n                    <button\r\n                      className={trophyFilter == 'unlocked' && 'active'}\r\n                      onClick={() => setTrophyFilter('unlocked')}\r\n                    >\r\n                      Unlocked\r\n                    </button>\r\n                    {trophyPercentage < 100 && (\r\n                      <button\r\n                        className={`${trophyFilter == 'locked' && 'active'}`}\r\n                        onClick={() => setTrophyFilter('locked')}\r\n                      >\r\n                        In Progress\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <ul className='user_game__achievements_list'>\r\n                  {trophies\r\n                    .filter((trophy) =>\r\n                      trophyFilter == 'unlocked'\r\n                        ? trophy.earned\r\n                        : !trophy.earned\r\n                    )\r\n                    .sort((a, b) =>\r\n                      a.trophyName > b.trophyName\r\n                        ? 1\r\n                        : b.trophyName > a.trophyName\r\n                        ? -1\r\n                        : 0\r\n                    )\r\n                    .map((item) => (\r\n                      <li className='achievement_item' key={item.trophyName}>\r\n                        <div\r\n                          className='achievement_item_icon'\r\n                          style={{ border: `1px solid ${activeProfile.color}` }}\r\n                        >\r\n                          <img\r\n                            className={`achievement_item_icon__img ${\r\n                              !item.earned && 'greyscale'\r\n                            }`}\r\n                            src={item.trophyIconUrl}\r\n                          />\r\n                        </div>\r\n                        <div className='achievement_item_headers'>\r\n                          <h4>{item.trophyName}</h4>\r\n                          {item.trophyDetail && <p>{item.trophyDetail}</p>}\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <UserGameNotes\r\n            profile={activeProfile}\r\n            windowViewHandler={windowViewHandler}\r\n            viewStatus={viewStatus}\r\n            gameNotes={\r\n              userNotes?.notes_collection?.filter(\r\n                (item) => item.id == game.id\r\n              )[0]\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserGame;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './UserCollection.css';\r\nimport { FaSistrix, FaHome, FaStar } from 'react-icons/fa';\r\nimport UserGame from '../UserGame/UserGame';\r\nimport useContextMenu from '../../hooks/useContextMenu';\r\nimport bronzeTrophy from '../../assets/images/ps-trophy-bronze.png';\r\nimport goldTrophy from '../../assets/images/ps-trophy-gold.png';\r\nimport platinumTrophy from '../../assets/images/ps-trophy-platinum.png';\r\n\r\nconst UserCollection = ({\r\n  collection,\r\n  activeProfile,\r\n  backToHome,\r\n  playTrack,\r\n  currentTrack,\r\n  isPlaying,\r\n  pausePlayback,\r\n  resumePlayback,\r\n  spotifyToken,\r\n  setSelectedProfile,\r\n  removeGame,\r\n  updateCollection,\r\n  userNotes,\r\n}) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [searchList, setSearchList] = useState([]);\r\n  const [viewingList, setViewingList] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [currentGame, setCurrentGame] = useState(null);\r\n  const [currentlyAdjusting, setCurrentlyAdjusting] = useState(null);\r\n  const [changingGame, setChangingGame] = useState(false);\r\n  // SPOTLIGHT STATES\r\n  const [spotlightList, setSpotlightList] = useState([]);\r\n  const [spotlightFilter, setSpotlightFilter] = useState('playtime');\r\n  // COVER LIST STATES\r\n  const [listFilter, setListFilter] = useState('alphabetical');\r\n  const [filteredList, setFilteredList] = useState([]);\r\n  // STATUS LIST STATES\r\n  const [statusFilter, setStatusFilter] = useState('backlog');\r\n  const filterRef = useRef();\r\n\r\n  const { anchorPoint, showTitleMenu } = useContextMenu();\r\n  const trophies = [platinumTrophy, goldTrophy, bronzeTrophy];\r\n\r\n  // If user is typing, filter titles that reflect inputted value\r\n  useEffect(() => {\r\n    if (searchValue == '') {\r\n      setSearchList([]);\r\n      return;\r\n    }\r\n    const delaySearch = setTimeout(() => {\r\n      const res = collection.filter((item) =>\r\n        item.name.toLowerCase().includes(searchValue.toLowerCase())\r\n      );\r\n      setSearchList(res);\r\n    }, 250);\r\n\r\n    return () => clearTimeout(delaySearch);\r\n  }, [searchValue]);\r\n\r\n  // Listen for screen size to determine if user is on mobile\r\n  useEffect(() => {\r\n    if (window.innerWidth <= 600) {\r\n      setIsMobile(true);\r\n    }\r\n    function handleResize() {\r\n      if (window.innerWidth <= 600) {\r\n        setIsMobile(true);\r\n      } else {\r\n        setIsMobile(false);\r\n      }\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Listen for spotlight filter change\r\n  useEffect(() => {\r\n    if (spotlightFilter == 'playtime') {\r\n      setSpotlightList(\r\n        [...collection].sort((a, b) => b[spotlightFilter] - a[spotlightFilter])\r\n      );\r\n    } else if (spotlightFilter == 'user_rating') {\r\n      setSpotlightList(\r\n        collection\r\n          .filter((game) => game.user_rating)\r\n          .sort((a, b) => b['user_rating'] - a['user_rating'])\r\n      );\r\n    } else {\r\n      setSpotlightList(\r\n        collection\r\n          .filter((game) => game.achievements)\r\n          .sort((a, b) => b['achievements'] - a['achievements'])\r\n      );\r\n    }\r\n  }, [spotlightFilter, collection]);\r\n\r\n  // Listen for list filter change\r\n  useEffect(() => {\r\n    if (listFilter == 'achievements') {\r\n      setFilteredList(\r\n        [...collection]\r\n          .filter((game) => game.achievements)\r\n          .sort((a, b) => b['achievements'] - a['achievements'])\r\n      );\r\n    } else if (listFilter == 'playtime') {\r\n      setFilteredList(\r\n        [...collection]\r\n          .filter((game) => game.playtime > 0)\r\n          .sort((a, b) => b.playtime - a.playtime)\r\n      );\r\n    } else if (listFilter == 'status') {\r\n      setFilteredList(\r\n        [...collection].filter(\r\n          (game) => game.status == statusFilter.toUpperCase()\r\n        )\r\n      );\r\n    } else if (listFilter == 'rating') {\r\n      setFilteredList(\r\n        [...collection]\r\n          .filter((game) => game.user_rating)\r\n          .sort((a, b) => b.user_rating - a.user_rating)\r\n      );\r\n    } else if (listFilter == 'trophies') {\r\n      // const earnedTrophyCount = game.trophies.filter((game) => game.earned);\r\n      setFilteredList(\r\n        [...collection]\r\n          .filter((game) => game.trophies)\r\n          .sort((a, b) => a.trophies - b.trophies)\r\n      );\r\n    } else {\r\n      setFilteredList(\r\n        [...collection].sort((a, b) =>\r\n          a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n        )\r\n      );\r\n    }\r\n  }, [listFilter, statusFilter]);\r\n\r\n  // Select which game is being viewed\r\n  const viewGameHandler = (game) => {\r\n    setCurrentGame(game);\r\n  };\r\n\r\n  // Open up the menu when the user right clicks\r\n  const viewGameHeaders = (e, game) => {\r\n    e.preventDefault();\r\n    setCurrentlyAdjusting(game);\r\n  };\r\n\r\n  // Determine what stat to show based on current filter\r\n  const getFilterStat = (game) => {\r\n    switch (listFilter) {\r\n      case 'playtime':\r\n        if (Math.floor(game.playtime / 60) >= 1) {\r\n          return (\r\n            <span className='filter_stat'>\r\n              {Math.floor(game.playtime / 60)}{' '}\r\n              {Math.floor(game.playtime / 60) == 1 ? 'hour' : 'hours'}\r\n            </span>\r\n          );\r\n        } else {\r\n          return (\r\n            <span className='filter_stat'>\r\n              {game.playtime} {game.playtime == 1 ? 'minute' : 'minutes'}\r\n            </span>\r\n          );\r\n        }\r\n      case 'rating':\r\n        return (\r\n          <span className='filter_stat rating_stat'>{game.user_rating}%</span>\r\n        );\r\n      case 'trophies':\r\n        if (!game.trophies) break;\r\n        const earnedTrophyCount = game?.trophies?.filter((game) => game.earned);\r\n        return (\r\n          <span className='filter_stat'>\r\n            {Math.floor(\r\n              (earnedTrophyCount.length / game.trophies.length) * 100\r\n            )}\r\n            % earned\r\n          </span>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const removeGameHandler = (e) => {\r\n    e.stopPropagation();\r\n    if (\r\n      Object.keys(currentGame).length > 0 &&\r\n      currentlyAdjusting.id === currentGame.id\r\n    )\r\n      setCurrentGame(null);\r\n    removeGame(currentlyAdjusting);\r\n    setCurrentlyAdjusting(null);\r\n  };\r\n\r\n  // HTML RENDER\r\n  return (\r\n    <div className='user_collection__wrapper'>\r\n      <div\r\n        className='user_collection__container'\r\n        style={{\r\n          background: '#111',\r\n        }}\r\n      >\r\n        {/* LEFT SIDE */}\r\n        <div\r\n          className='user_collection__left'\r\n          style={{\r\n            height: viewingList && '250%',\r\n            marginBottom: viewingList && '25px',\r\n            display: isMobile && currentGame && 'none',\r\n          }}\r\n        >\r\n          <div className='user_collection__left_header'>\r\n            <h2>\r\n              <img\r\n                style={{\r\n                  height: '50px',\r\n                  width: '50px',\r\n                  borderRadius: '4px',\r\n                }}\r\n                src={activeProfile.avatar}\r\n              />\r\n              {activeProfile.name.trim()}'s Collection\r\n              <FaHome\r\n                className='user_collection__home_icon'\r\n                onClick={backToHome}\r\n              />\r\n            </h2>\r\n\r\n            <div className='user_collection__search'>\r\n              <FaSistrix className='user_collection__search_icon' />\r\n              <input\r\n                className='user_collection__search_input'\r\n                value={searchValue}\r\n                onChange={(e) => setSearchValue(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <ul\r\n            className='user_collection__title_list'\r\n            style={{\r\n              height: viewingList && '100%',\r\n              display: viewingList && 'flex',\r\n            }}\r\n          >\r\n            <p\r\n              className='user_collection__total'\r\n              style={{\r\n                color: 'white',\r\n                paddingLeft: '7px',\r\n                marginBottom: '5px',\r\n                position: 'fixed',\r\n                top: '132px',\r\n                left: '1px',\r\n                fontSize: '.95rem',\r\n                width: '100%',\r\n                height: '22px',\r\n                background:\r\n                  'linear-gradient(to right, rgba(25,25,25,.5) 0%,rgba(17,17,17,1) 46%,rgba(1,1,1,1) 50%,rgba(10,10,10,1) 53%,rgba(78,78,78,1) 76%,rgba(56,56,56,1) 87%,rgba(27,27,27,1) 100%)',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              {searchList.length <= 0 && searchValue == '' ? 'All' : 'Results'}{' '}\r\n              (\r\n              <span style={{ fontSize: '.75rem' }}>\r\n                {searchValue == '' ? collection.length : searchList.length}\r\n              </span>\r\n              )\r\n            </p>\r\n\r\n            {searchValue == '' ? (\r\n              collection\r\n                .sort((a, b) =>\r\n                  a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n                )\r\n                .map((game) => (\r\n                  <li\r\n                    className='title_list__item'\r\n                    key={game.id}\r\n                    onClick={() => viewGameHandler(game)}\r\n                    onContextMenu={(e) => viewGameHeaders(e, game)}\r\n                    style={{\r\n                      background: currentGame?.id == game.id && '#9147ff',\r\n                      color: currentGame?.id == game.id && 'white',\r\n                    }}\r\n                  >\r\n                    {' '}\r\n                    <img src={game.imageURL} />\r\n                    <p>{game.name}</p>\r\n                    {game.name == activeProfile.favorite_game && (\r\n                      <FaStar className='list_item_favorite' />\r\n                    )}\r\n                    {showTitleMenu && (\r\n                      <ul\r\n                        onMouseEnter={(e) => e.stopPropagation(true)}\r\n                        className='user_collection__game_context'\r\n                        style={{\r\n                          top: anchorPoint.y,\r\n                          left: anchorPoint.x,\r\n                          zIndex: 6,\r\n                        }}\r\n                      >\r\n                        <li className='banner_context__item'>\r\n                          Add to Favorites\r\n                        </li>\r\n                        <li\r\n                          className='banner_context__item'\r\n                          onClick={(e) => removeGameHandler(e, game)}\r\n                        >\r\n                          Delete Game\r\n                        </li>\r\n                      </ul>\r\n                    )}\r\n                  </li>\r\n                ))\r\n            ) : searchList.length > 0 && searchValue != '' ? (\r\n              searchList.map((game) => (\r\n                <li\r\n                  className='title_list__item'\r\n                  key={game.id}\r\n                  onClick={() => viewGameHandler(game)}\r\n                >\r\n                  {' '}\r\n                  <img src={game.imageURL} />\r\n                  <p>{game.name}</p>\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <p\r\n                style={{\r\n                  color: 'white',\r\n                  fontSize: '3.2rem',\r\n                  position: 'absolute',\r\n                  top: '44%',\r\n                  left: '16px',\r\n                }}\r\n              >\r\n                No Matches\r\n              </p>\r\n            )}\r\n            <div className='user_collection__title_list_shadow' />\r\n            <div className='user_collection__title_list_shadow top_shadow' />\r\n          </ul>\r\n          <div className='user_collection__actions'>\r\n            <button className='persona_font' onClick={backToHome}>\r\n              Back\r\n              {/* <div className='persona_box' style={{ background: '#1cfeff' }} />\r\n              <div className='persona_box' style={{ background: 'white' }} />\r\n              <div className='persona_box' style={{ background: '#ff0022' }} /> */}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* RIGHT SIDE */}\r\n        <div className='user_collection__right'>\r\n          {currentGame !== null && (\r\n            <>\r\n              <UserGame\r\n                game={currentGame}\r\n                activeProfile={activeProfile}\r\n                closeStats={() => setCurrentGame(null)}\r\n                setProfile={(profile) => setSelectedProfile(profile)}\r\n                setCurrentGame={(game) => setCurrentGame(game)}\r\n                updateCollection={updateCollection}\r\n                userNotes={userNotes}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {!currentGame && (\r\n            // SPOTLIGHT\r\n            <>\r\n              {!isMobile && (\r\n                <div className='user_collection__spotlight_wrapper'>\r\n                  <div className='spotlight_filters'>\r\n                    {/* MOST PLAYED, HIGHEST RATED, MOST ACHIEVEMENTS */}\r\n                    <h2 className='spotlight_filter'>\r\n                      {spotlightFilter == 'playtime'\r\n                        ? 'Most Played'\r\n                        : spotlightFilter == 'user_rating'\r\n                        ? 'Highest Rated'\r\n                        : 'Most Achievements'}{' '}\r\n                    </h2>\r\n                    <ul className='spotlight_filter__options'>\r\n                      <li\r\n                        onClick={() => setSpotlightFilter('playtime')}\r\n                        style={{\r\n                          color: spotlightFilter == 'playtime' && 'white',\r\n                        }}\r\n                      >\r\n                        Most Played\r\n                      </li>\r\n                      <li\r\n                        onClick={() => setSpotlightFilter('user_rating')}\r\n                        style={{\r\n                          color: spotlightFilter == 'user_rating' && 'white',\r\n                        }}\r\n                      >\r\n                        Highest Rated\r\n                      </li>\r\n                      <li\r\n                        onClick={() => setSpotlightFilter('achievements')}\r\n                        style={{\r\n                          color: spotlightFilter == 'achievements' && 'white',\r\n                        }}\r\n                      >\r\n                        Most Achievements\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className='user_collection__spotlight'>\r\n                    {spotlightList.slice(0, 3).map((top, i) => (\r\n                      <figure\r\n                        key={top.id}\r\n                        className='spotlight_container'\r\n                        onClick={() => viewGameHandler(top)}\r\n                      >\r\n                        <img\r\n                          className='spotlight_image'\r\n                          src={top.banner_url || top.imageURL}\r\n                        />\r\n                        <div className='spotlight_container__row'>\r\n                          <img\r\n                            className='spotlight_trophy_image'\r\n                            src={trophies[i]}\r\n                          />\r\n                          <figcaption className='spotlight_details'>\r\n                            <p>\r\n                              {spotlightFilter == 'playtime'\r\n                                ? `${Math.floor(top.playtime / 60)} hours`\r\n                                : spotlightFilter == 'user_rating'\r\n                                ? top.user_rating + '%'\r\n                                : 'ACHIEVE'}{' '}\r\n                            </p>\r\n                          </figcaption>\r\n                        </div>\r\n                      </figure>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* COVER LIST */}\r\n              <div className='user_collection__list_container'>\r\n                <div className='user_collection__list_filters'>\r\n                  <p style={{ marginBottom: '2px', fontSize: '1.5rem' }}>\r\n                    {listFilter == 'alphabetical'\r\n                      ? 'All Games'\r\n                      : listFilter == 'achievements'\r\n                      ? 'Achievements'\r\n                      : listFilter == 'playtime'\r\n                      ? 'Playtime'\r\n                      : listFilter == 'rating'\r\n                      ? 'Rating'\r\n                      : listFilter == 'status'\r\n                      ? 'Status'\r\n                      : 'Trophies'}\r\n                  </p>\r\n                  <ul className='user_collection__list_filters__list'>\r\n                    <li\r\n                      style={{ color: listFilter == 'alphabetical' && 'white' }}\r\n                      onClick={() => setListFilter('alphabetical')}\r\n                    >\r\n                      All\r\n                    </li>\r\n                    <span> | </span>\r\n                    <li\r\n                      style={{ color: listFilter == 'achievements' && 'white' }}\r\n                      onClick={() => setListFilter('achievements')}\r\n                    >\r\n                      Achievements\r\n                    </li>\r\n                    <span> | </span>\r\n\r\n                    <li\r\n                      style={{ color: listFilter == 'playtime' && 'white' }}\r\n                      onClick={() => setListFilter('playtime')}\r\n                    >\r\n                      Playtime\r\n                    </li>\r\n                    <span> | </span>\r\n\r\n                    <li\r\n                      style={{ color: listFilter == 'rating' && 'white' }}\r\n                      onClick={() => setListFilter('rating')}\r\n                    >\r\n                      Rating\r\n                    </li>\r\n                    <span> | </span>\r\n\r\n                    <li\r\n                      style={{ color: listFilter == 'status' && 'white' }}\r\n                      onClick={() => {\r\n                        setListFilter('status');\r\n                        setStatusFilter('backlog');\r\n                      }}\r\n                    >\r\n                      Status\r\n                    </li>\r\n                    <span> | </span>\r\n\r\n                    <li\r\n                      style={{ color: listFilter == 'trophies' && 'white' }}\r\n                      onClick={() => setListFilter('trophies')}\r\n                    >\r\n                      Trophies\r\n                    </li>\r\n                  </ul>\r\n                  {listFilter == 'status' && (\r\n                    <div\r\n                      className='user_collection__list_filters__list'\r\n                      style={{ margin: '0' }}\r\n                    >\r\n                      <ul\r\n                        className='user_collection__list_filters__list_status'\r\n                        style={{ flexDirection: 'row' }}\r\n                      >\r\n                        <li\r\n                          style={{\r\n                            color: statusFilter == 'backlog' && 'white',\r\n                          }}\r\n                          onClick={() => setStatusFilter('backlog')}\r\n                        >\r\n                          Backlog\r\n                        </li>\r\n                        <span> | </span>\r\n                        <li\r\n                          style={{\r\n                            color: statusFilter == 'started' && 'white',\r\n                          }}\r\n                          onClick={() => setStatusFilter('started')}\r\n                        >\r\n                          Started\r\n                        </li>\r\n                        <span> | </span>\r\n                        <li\r\n                          style={{\r\n                            color: statusFilter == 'playing' && 'white',\r\n                          }}\r\n                          onClick={() => setStatusFilter('playing')}\r\n                        >\r\n                          Playing\r\n                        </li>\r\n                        <span> | </span>\r\n                        <li\r\n                          style={{\r\n                            color: statusFilter == 'finished' && 'white',\r\n                          }}\r\n                          onClick={() => setStatusFilter('finished')}\r\n                        >\r\n                          Finished\r\n                        </li>\r\n                        <span> | </span>\r\n                        <li\r\n                          style={{\r\n                            color: statusFilter == '100%' && 'white',\r\n                          }}\r\n                          onClick={() => setStatusFilter('100%')}\r\n                        >\r\n                          100%\r\n                        </li>\r\n                        <span> | </span>\r\n                        <li\r\n                          style={{\r\n                            color: statusFilter == 'abandonded' && 'white',\r\n                          }}\r\n                          onClick={() => setStatusFilter('abandonded')}\r\n                        >\r\n                          Abandonded\r\n                        </li>\r\n                        <span> | </span>\r\n                        <li\r\n                          style={{\r\n                            color: statusFilter == 'not owned' && 'white',\r\n                          }}\r\n                          onClick={() => setStatusFilter('not owned')}\r\n                        >\r\n                          Not Owned\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <ul className='user_collection__list'>\r\n                  {!isMobile || (isMobile && searchValue == '')\r\n                    ? filteredList.map((game) => (\r\n                        <li\r\n                          className='list_item'\r\n                          key={game.id}\r\n                          onClick={() => viewGameHandler(game)}\r\n                        >\r\n                          <div className='user_collection__poster_container'>\r\n                            <div className='gradient' />\r\n                            <>\r\n                              {/* FRONT OF POSTER */}\r\n                              <div className='user_collection__poster_front'>\r\n                                <img\r\n                                  loading='lazy'\r\n                                  className='user_collection__poster'\r\n                                  src={game.imageURL}\r\n                                  alt={game.name}\r\n                                />\r\n                              </div>\r\n                            </>\r\n                          </div>\r\n                          {getFilterStat(game)}\r\n                        </li>\r\n                      ))\r\n                    : searchList.map((game) => (\r\n                        <li\r\n                          className='list_item'\r\n                          key={game.id}\r\n                          onClick={() => viewGameHandler(game)}\r\n                        >\r\n                          <div className='user_collection__poster_container'>\r\n                            <div className='gradient' />\r\n                            <>\r\n                              {/* FRONT OF POSTER */}\r\n                              <div className='user_collection__poster_front'>\r\n                                <img\r\n                                  loading='lazy'\r\n                                  className='user_collection__poster'\r\n                                  src={\r\n                                    isMobile\r\n                                      ? game.imageURL.replace(\r\n                                          'cover_big',\r\n                                          '1080p'\r\n                                        )\r\n                                      : game.imageURL\r\n                                  }\r\n                                  alt={game.name}\r\n                                />\r\n                              </div>\r\n                            </>\r\n                          </div>\r\n                        </li>\r\n                      ))}\r\n                </ul>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCollection;\r\n"],"names":["useState","x","y","anchorPoint","setAnchorPoint","showBannerMenu","setShowBannerMenu","showTitleMenu","setShowTitleMenu","handleContextMenu","useCallback","event","preventDefault","target","className","offsetX","pageY","movementX","handleClick","useEffect","document","addEventListener","removeEventListener","resetContext","note","closeNote","updateNote","deleteNote","noteValue","setNoteValue","date","onClick","value","onChange","e","today","Date","yyyy","getFullYear","mm","getMonth","dd","getDate","formattedToday","profile","windowViewHandler","viewStatus","gameNotes","baseURL","process","userEmail","localStorage","getItem","currentTab","setCurrentTab","editingTab","setEditingTab","tabValue","setTabValue","addingTab","setAddingTab","currentNote","setCurrentNote","noteTab","filter","item","tabName","notesRef","useRef","tabRef","tabEndRef","createNotes","axios","email","name","request","notesId","current","scrollIntoView","behavior","handleEnter","keyCode","console","log","window","focus","clearTimeout","timer","updateProfileNotes","userNotesId","noteId","id","notes","editTabHandler","innerText","tabFormSubmitHandler","push","style","transform","display","oldNote","newNote","updatedList","contentEditable","suppressContentEditableWarning","onBlur","onKeyPress","currentTarget","key","ref","borderBottom","userSelect","padding","transition","map","stopPropagation","setTimeout","onSubmit","length","viewNoteHandler","width","marginLeft","placeholder","game","activeProfile","closeStats","setCurrentGame","setProfile","setNotification","updateCollection","userNotes","useContextMenu","achievements","trophies","setViewStatus","setAchievements","setTrophies","achievementFilter","setAchievementFilter","trophyFilter","setTrophyFilter","Math","floor","playtime","setPlaytime","changingPlaytime","setChangingPlaytime","user_rating","rating","setRating","changingRating","setChangingRating","changingBanner","setChangingBanner","bannerLink","setBannerLink","status","backlogStatus","setBacklogStatus","changingBacklog","setChangingBacklog","steamID","trophyPercentage","earned","achievementPercentage","achieved","replaceAll","notes_collection","g","handleEsc","getAchievementData","arr1","arr2","dataList","result","a1","displayName","sort","a","b","textA","toUpperCase","textB","fetchAppData","params","gameId","steamGameStats","Object","keys","data","steamId","userAchievementData","availableGameStats","currentProfile","addAchievements","response","collection","getAchievementCount","list","numberAchieved","updateRatingHandler","ratingValue","setItem","updatePlaytime","updateBacklog","updateBacklogHandler","updateBanner","trim","url","maxWidth","textAlign","marginBottom","top","left","src","banner_image","imageURL","replace","color","totalMinutes","type","minutes","hours","toString","padStart","toHoursAndMinutes","min","onKeyDown","paddingBottom","onMouseMove","bounds","getBoundingClientRect","clientX","totalStars","height","outlined","paddingTop","backgroundColor","alignItems","background","achievement","border","icon","icongray","description","trophy","trophyName","trophyIconUrl","trophyDetail","backToHome","setSelectedProfile","playTrack","currentTrack","isPlaying","pausePlayback","resumePlayback","spotifyToken","removeGame","searchValue","setSearchValue","searchList","setSearchList","viewingList","isMobile","setIsMobile","currentGame","currentlyAdjusting","setCurrentlyAdjusting","spotlightList","setSpotlightList","spotlightFilter","setSpotlightFilter","listFilter","setListFilter","filteredList","setFilteredList","statusFilter","setStatusFilter","platinumTrophy","goldTrophy","bronzeTrophy","delaySearch","res","toLowerCase","includes","handleResize","innerWidth","viewGameHandler","getFilterStat","earnedTrophyCount","borderRadius","avatar","paddingLeft","position","fontSize","onContextMenu","viewGameHeaders","favorite_game","onMouseEnter","zIndex","removeGameHandler","slice","i","banner_url","margin","flexDirection","loading","alt"],"sourceRoot":""}