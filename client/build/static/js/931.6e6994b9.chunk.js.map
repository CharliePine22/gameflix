{"version":3,"file":"static/js/931.6e6994b9.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-loading-skeleton/dist/index.mjs","components/SkeletonCard/SkeletonCard.js","components/SearchResults/SearchResultsIGDB.js"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b, _c;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    const countCeil = Math.ceil(count);\n    for (let i = 0; i < countCeil; i++) {\n        let thisStyle = style;\n        if (countCeil > count && i === countCeil - 1) {\n            // count is not an integer and we've reached the last iteration of\n            // the loop, so add a \"fractional\" skeleton.\n            //\n            // For example, if count is 3.5, we've already added 3 full\n            // skeletons, so now we add one more skeleton that is 0.5 times the\n            // original width.\n            const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n            const fractionalPart = count % 1;\n            const fractionalWidth = typeof width === 'number'\n                ? width * fractionalPart\n                : `calc(${width} * ${fractionalPart})`;\n            thisStyle = { ...thisStyle, width: fractionalWidth };\n        }\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: thisStyle, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            // Without the <br />, the skeleton lines will all run together if\n            // `width` is specified\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n","import React from 'react';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport './SkeletonCard.css';\r\n\r\nconst SkeletonCard = ({ count, type }) => {\r\n  if (type == 'full') {\r\n    return (\r\n      <section className='skeleton_card_wrapper'>\r\n        <ul className='list'>\r\n          {Array(count)\r\n            .fill()\r\n            .map((item, index) => (\r\n              <li className='card' key={index}>\r\n                <Skeleton\r\n                  height={180}\r\n                  className='card_banner'\r\n                  highlightColor='#323232'\r\n                />\r\n                <h4 className='card-title'>\r\n                  <Skeleton\r\n                    className='card_cover'\r\n                    baseCover='rgb(35, 35, 35)'\r\n                    highlightColor='#222222'\r\n                    circle={false}\r\n                  />{' '}\r\n                  &nbsp;\r\n                  <Skeleton\r\n                    className='skeleton_title'\r\n                    highlightColor='#222222'\r\n                    baseCover='rgb(35, 35, 35)'\r\n                  />\r\n                </h4>\r\n                <p>\r\n                  <Skeleton\r\n                    style={{ marginLeft: '10px' }}\r\n                    className='card-channel'\r\n                    width={`60%`}\r\n                    highlightColor='#222222'\r\n                  />\r\n                </p>\r\n                <div>\r\n                  <Skeleton\r\n                    style={{ marginLeft: '10px' }}\r\n                    className='card-metrics'\r\n                    width={`90%`}\r\n                    highlightColor='#222222'\r\n                  />\r\n                </div>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </section>\r\n    );\r\n  } else {\r\n    return (\r\n      <section className='skeleton_card_wrapper'>\r\n        <ul className='list_small'>\r\n          {Array(count)\r\n            .fill()\r\n            .map((item, index) => (\r\n              <li className='card_small' key={index}>\r\n                <Skeleton\r\n                  height={104}\r\n                  className='card_banner_small'\r\n                  highlightColor='#222222'\r\n                  enableAnimation={false}\r\n                />\r\n                <h4 className='card-title_small'>\r\n                  <Skeleton\r\n                    className='card_cover_small'\r\n                    circle={false}\r\n                    highlightColor='#222222'\r\n                  />{' '}\r\n                  &nbsp;\r\n                  <Skeleton\r\n                    className='skeleton_title_small'\r\n                    highlightColor='#222222'\r\n                  />\r\n                </h4>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SkeletonCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './SearchResults.css';\r\nimport Skeleton from 'react-loading-skeleton';\r\nimport axios from 'axios';\r\nimport 'react-loading-skeleton/dist/skeleton.css';\r\nimport SkeletonCard from '../SkeletonCard/SkeletonCard';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport GamePreview from '../Row/GamePreview/GamePreview';\r\nimport eRating from '../../assets/images/ESRB_E.png';\r\nimport tRating from '../../assets/images/ESRB_T.png';\r\nimport mRating from '../../assets/images/ESRB_M.png';\r\nimport rpRating from '../../assets/images/ESRB_RP.png';\r\nimport GameDetails from '../GameDetails/GameDetails';\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst SearchResultsIGDB = ({\r\n  setGameDetails,\r\n  game,\r\n  closeSearchResults,\r\n  currentGameOpen,\r\n  openGame,\r\n  closeGameWindow,\r\n  addGameHandler,\r\n}) => {\r\n  const twitchToken = localStorage.getItem('twitch_auth');\r\n  const recentSearches = JSON.parse(localStorage.getItem('searches'));\r\n  const location = useLocation();\r\n\r\n  const [recentSearchList, setRecentSearchList] = useState(recentSearches);\r\n\r\n  // Game Preview States\r\n  const [currentGame, setCurrentGame] = useState('');\r\n  const [viewingPreview, setViewingPreview] = useState(false);\r\n\r\n  // Search States\r\n  const searchString = location.state.name;\r\n  const [searchValue, setSearchValue] = useState(searchString);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [searchFinished, setSearchFinished] = useState(false);\r\n  const [searchSubmitted, setSearchSubmitted] = useState(false);\r\n\r\n  const searchGame = async (game) => {\r\n    try {\r\n      setSearchSubmitted(true);\r\n      setSearchFinished(false);\r\n      let newGame = game.replace('Poke', 'Poké');\r\n      const request = await axios.post('/app/search_game', {\r\n        token: twitchToken,\r\n        gameName: newGame,\r\n      });\r\n\r\n      setSearchResults(request.data);\r\n      if (searchString !== '') {\r\n        if (!recentSearches) {\r\n          localStorage.setItem('searches', JSON.stringify([searchString]));\r\n          setRecentSearchList(recentSearches);\r\n        } else {\r\n          recentSearches.push(searchString);\r\n          setRecentSearchList(recentSearches);\r\n          localStorage.setItem('searches', JSON.stringify(recentSearches));\r\n        }\r\n      }\r\n      setSearchSubmitted(false);\r\n      setSearchFinished(true);\r\n      return searchResults;\r\n    } catch (error) {\r\n      setSearchSubmitted(false);\r\n      setSearchFinished(true);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchString == '') return;\r\n    window.scrollTo(0, 0);\r\n    searchGame(searchString);\r\n  }, [searchString]);\r\n\r\n  const removeRecentSearchItem = (name) => {\r\n    const newList = recentSearches.filter((item) => item !== name);\r\n    setRecentSearchList([]);\r\n    localStorage.setItem('searches', JSON.stringify(newList));\r\n  };\r\n\r\n  const submitSearchHandler = (e) => {\r\n    if (e.key === 'Enter') {\r\n      searchGame(searchValue);\r\n    }\r\n  };\r\n\r\n  const uniqueSearches = (searches) => {\r\n    let result = [];\r\n    for (let item of searches) {\r\n      if (result.indexOf(item) === -1) {\r\n        result.push(item);\r\n      }\r\n    }\r\n    localStorage.setItem('searches', JSON.stringify(result));\r\n    return result.reverse();\r\n  };\r\n\r\n  const determineESRB = (game) => {\r\n    if (!game || !game.age_ratings)\r\n      return <img className='row__poster__esrb_img' src={rpRating} />;\r\n    const hasRating = game?.age_ratings.filter(\r\n      (rating) => rating.category == 1 || rating.category == 2\r\n    );\r\n\r\n    if (hasRating.length == 0 || !game.age_ratings)\r\n      return <img className='row__poster__esrb_img' src={rpRating} />;\r\n    const esrb = hasRating[0].rating;\r\n\r\n    switch (esrb) {\r\n      case 1:\r\n      case 2:\r\n      case 8:\r\n      case 9:\r\n        return <img className='row__poster__esrb_img' src={eRating} />;\r\n      case 3:\r\n      case 4:\r\n      case 10:\r\n        return <img className='row__poster__esrb_img' src={tRating} />;\r\n      case 5:\r\n      case 11:\r\n        return <img className='row__poster__esrb_img' src={mRating} />;\r\n      default:\r\n        return <img className='row__poster__esrb_img' src={rpRating} />;\r\n    }\r\n  };\r\n\r\n  const displayGameCase = (e, game) => {\r\n    e.stopPropagation();\r\n    setCurrentGame(game);\r\n    openGame(game);\r\n  };\r\n\r\n  console.log(game);\r\n\r\n  // if(gameDetails) {\r\n  //   <><GameDetails\r\n  //     setNotification={(status, message) => setNotification({ status, message })}\r\n  //     game={gameDetails}\r\n  //     closeDetails={() => setGameDetails(null)}\r\n  //     twitchToken={twitchToken}\r\n  //     addGame={(game) => addGame(game)}\r\n  //     removeGame={(game) => removeGame(game)}\r\n  //     activeProfile={currentProfile} /><Notification\r\n  //       notification={notification}\r\n  //       displayNotification={displayNotification}\r\n  //       hideNotification={() => {\r\n  //         setNotification({ message: '', status: '' });\r\n  //       } } /></>\r\n  // }\r\n\r\n  // Skeleton Loader\r\n  if (searchSubmitted && !searchFinished) {\r\n    return (\r\n      <div className='search_results'>\r\n        <div className='search_results__nav'>\r\n          <span onClick={closeSearchResults}>X</span>\r\n          <div className='search_results__nav_search'>\r\n            <input\r\n              placeholder={`${\r\n                searchString !== '' ? searchString : 'Search...'\r\n              }`}\r\n              value={searchValue}\r\n              onKeyDown={submitSearchHandler}\r\n              onChange={(e) => setSearchValue(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='search_results__container_skeleton'>\r\n          <div className='search_results__recents'>\r\n            <h2>Recent Searches</h2>\r\n            <ul className='recent_searches'>\r\n              {recentSearches &&\r\n                uniqueSearches(recentSearches)\r\n                  .slice(0, 4)\r\n                  .map((name, i) => (\r\n                    <li key={i} className='recent_searches__item'>\r\n                      <p onClick={() => searchGame(name)}>{name}</p>\r\n                      <span onClick={() => removeRecentSearchItem(name)}>\r\n                        X\r\n                      </span>\r\n                    </li>\r\n                  ))}\r\n            </ul>\r\n          </div>\r\n          <div className='top_results_row_skeleton'>\r\n            <h2>Top Results</h2>\r\n            <SkeletonCard count={3} type='full' />\r\n          </div>\r\n          <div className='remainder_results_skeleton'>\r\n            <h2>Results</h2>\r\n            <SkeletonCard count={9} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='search_results'>\r\n      {/* SEARCH NAV */}\r\n      <div className='search_results__nav'>\r\n        <span onClick={closeSearchResults}>X</span>\r\n        <div className='search_results__nav_search'>\r\n          <input\r\n            value={searchValue}\r\n            onChange={(e) => setSearchValue(e.target.value)}\r\n            placeholder='Search..'\r\n            onKeyDown={submitSearchHandler}\r\n          />\r\n          <FaSearch\r\n            className='search_results__nav_search_icon'\r\n            onClick={submitSearchHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='search_results__container'>\r\n        {currentGameOpen === currentGame.id && (\r\n          <div className='search_results__game_preview'>\r\n            <h1 onClick={closeGameWindow}>X</h1>\r\n            <GamePreview\r\n              style={{ top: '230px' }}\r\n              game={currentGame}\r\n              gameCover={`//images.igdb.com/igdb/image/upload/t_1080p_2x/${currentGame.cover?.image_id}.jpg`}\r\n              ratingImage={determineESRB(currentGame)}\r\n              addGame={addGameHandler}\r\n              displayDetails={setGameDetails}\r\n              hideDetails={closeGameWindow}\r\n              fetchGameDetails={(game) => {\r\n                setGameDetails(game);\r\n              }}\r\n              viewingPreview={viewingPreview}\r\n              openGame={() => setViewingPreview(true)}\r\n              closeGame={() => setViewingPreview(false)}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        {/* RECENT SEARCHES */}\r\n        <div className='search_results__recents'>\r\n          <h2>Recent Searches</h2>\r\n          <ul className='recent_searches'>\r\n            {recentSearchList &&\r\n              uniqueSearches(recentSearchList)\r\n                .slice(0, 4)\r\n                .map((name, i) => (\r\n                  <li key={i} className='recent_searches__item'>\r\n                    <p onClick={() => searchGame(name)}>{name}</p>\r\n                    <span onClick={() => removeRecentSearchItem(name)}>X</span>\r\n                  </li>\r\n                ))}\r\n          </ul>\r\n        </div>\r\n        {searchResults.length == 0 && (\r\n          <div className='search_results__error'>\r\n            <p>\r\n              Sorry, no results for current game, please refine your search and\r\n              try again!\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {searchResults.length > 0 && (\r\n          <>\r\n            <h2>Top Results</h2>\r\n            {/* Top 3 Search Results */}\r\n            <div className='top_results_row'>\r\n              {searchResults.slice(0, 3)?.map((game) => (\r\n                <div\r\n                  className='top_result_container'\r\n                  key={game.id}\r\n                  onClick={() => setGameDetails(game)}\r\n                >\r\n                  <div className='top_result_upper'>\r\n                    <div\r\n                      className='result_publisher'\r\n                      onClick={(e) => displayGameCase(e, game)}\r\n                    >\r\n                      <h3>3D</h3>\r\n                    </div>\r\n                    <img\r\n                      src={`//images.igdb.com/igdb/image/upload/t_screenshot_big/${\r\n                        game.artworks\r\n                          ? game.artworks[0]?.image_id\r\n                          : game.cover?.image_id\r\n                      }.jpg`}\r\n                    />\r\n                  </div>\r\n                  <div className='top_result_lower'>\r\n                    <h3 className='game_name'>\r\n                      {game.name || <Skeleton count={1} />}\r\n                    </h3>\r\n                    <ul className='game_theme_list'>\r\n                      {game.themes?.map(\r\n                        (theme) =>\r\n                          theme.name !== 'Sandbox' && (\r\n                            <li key={theme.id}>{theme.name}</li>\r\n                          )\r\n                      )}\r\n                    </ul>\r\n                  </div>\r\n                  <div\r\n                    className='game_cover'\r\n                    style={{\r\n                      backgroundSize: '100% 100%',\r\n                      backgroundImage: `url(//images.igdb.com/igdb/image/upload/t_cover_big/${game.cover?.image_id}.jpg)`,\r\n                      backgroundPosition: 'center',\r\n                    }}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n        {/* Remaining Games */}\r\n        {searchResults.length > 0 && (\r\n          <div className='remainder_results'>\r\n            <h2>Results</h2>\r\n            {searchResults.slice(3)?.map(\r\n              (game) =>\r\n                game.cover !== undefined && (\r\n                  <div\r\n                    className='results_container'\r\n                    key={game.id}\r\n                    onClick={() => setGameDetails(game)}\r\n                  >\r\n                    <div\r\n                      className='results_container_img'\r\n                      style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(//images.igdb.com/igdb/image/upload/t_cover_big/${game.cover.image_id}.jpg)`,\r\n                        backgroundPosition: 'center',\r\n                      }}\r\n                    />\r\n                    <div className='results_container_content'>\r\n                      <h3 className='game_name_remainder'>{game.name}</h3>\r\n                      <div\r\n                        className='remainder_3d'\r\n                        onClick={(e) => displayGameCase(e, game)}\r\n                      >\r\n                        <h3>3D</h3>\r\n                      </div>\r\n                      {/* <p>{game.publisher}</p> */}\r\n                      <ul className='game_theme_list_lower'>\r\n                        {game.themes?.map(\r\n                          (theme, i) =>\r\n                            theme.name !== 'Sandbox' &&\r\n                            i < 3 && <li key={theme.id}>{theme.name}</li>\r\n                        )}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                )\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className='search_bottom_fade' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResultsIGDB;\r\n"],"names":["source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","SkeletonThemeContext","React","Skeleton","_a","_b","_c","count","Wrapper","wrapper","customClassName","className","containerClassName","containerTestId","circle","styleProp","style","originalPropsStyleOptions","contextStyleOptions","propsStyleOptions","entries","styleOptions","baseColor","highlightColor","width","height","borderRadius","direction","duration","enableAnimation","styleOptionsToCssProperties","inline","elements","countCeil","Math","ceil","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","map","el","type","Array","fill","item","index","baseCover","marginLeft","setGameDetails","game","closeSearchResults","currentGameOpen","openGame","closeGameWindow","addGameHandler","twitchToken","localStorage","getItem","recentSearches","JSON","parse","location","useLocation","useState","recentSearchList","setRecentSearchList","currentGame","setCurrentGame","viewingPreview","setViewingPreview","searchString","state","name","searchValue","setSearchValue","searchResults","setSearchResults","searchFinished","setSearchFinished","searchSubmitted","setSearchSubmitted","searchGame","newGame","replace","axios","token","gameName","request","data","setItem","stringify","console","log","useEffect","window","scrollTo","removeRecentSearchItem","newList","filter","submitSearchHandler","e","uniqueSearches","searches","result","reverse","displayGameCase","stopPropagation","onClick","placeholder","value","onKeyDown","onChange","slice","id","GamePreview","top","gameCover","cover","image_id","ratingImage","age_ratings","src","rpRating","hasRating","rating","category","eRating","tRating","mRating","determineESRB","addGame","displayDetails","hideDetails","fetchGameDetails","closeGame","artworks","themes","theme","backgroundSize","backgroundImage","backgroundPosition","undefined"],"sourceRoot":""}