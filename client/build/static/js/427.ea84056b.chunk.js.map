{"version":3,"file":"static/js/427.ea84056b.chunk.js","mappings":"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","sources":["hooks/useContextMenu.js","components/UserGame/NoteDetails.js","components/UserGame/UserNotes.js","components/UserGame/UserGame.js","components/UserCollectionPage/UserCollection.js"],"sourcesContent":["import { useEffect, useCallback, useState } from 'react';\r\n\r\nconst useContextMenu = () => {\r\n  const [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\r\n  const [showBannerMenu, setShowBannerMenu] = useState(false);\r\n  const [showTitleMenu, setShowTitleMenu] = useState(false);\r\n  const handleContextMenu = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      if (\r\n        event.target.className === 'user_game_banner_img' &&\r\n        !showBannerMenu\r\n      ) {\r\n        setAnchorPoint({ x: event.offsetX, y: event.pageY });\r\n        setShowBannerMenu(true);\r\n        setShowTitleMenu(false);\r\n      }\r\n      if (event.target.className === 'title_list__item') {\r\n        setAnchorPoint({ x: event.movementX + 5, y: event.y + 20 });\r\n        setShowTitleMenu(true);\r\n        setShowBannerMenu(false);\r\n      }\r\n    },\r\n    [setAnchorPoint]\r\n  );\r\n\r\n  const handleClick = useCallback(() => {\r\n    if (showTitleMenu) setShowTitleMenu(false);\r\n    if (showBannerMenu) setShowBannerMenu(false);\r\n  }, [showTitleMenu, showBannerMenu]);\r\n\r\n  const resetContext = () => {\r\n    setShowBannerMenu(false);\r\n    setShowTitleMenu(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick);\r\n    document.addEventListener('contextmenu', handleContextMenu);\r\n    return () => {\r\n      document.removeEventListener('click', handleClick);\r\n      document.removeEventListener('contextmenu', handleContextMenu);\r\n    };\r\n  });\r\n  return { anchorPoint, showTitleMenu, showBannerMenu, resetContext };\r\n};\r\n\r\nexport default useContextMenu;\r\n","import React, { useState } from 'react';\r\nimport './UserNotes.css';\r\nimport { BsArrowLeft } from 'react-icons/bs';\r\n\r\nconst NoteDetails = ({ note, closeNote, updateNote, deleteNote }) => {\r\n  const [noteValue, setNoteValue] = useState(note.note);\r\n\r\n  return (\r\n    <div className='note_details__container'>\r\n      <span className='note_details__date'>{note.date}</span>\r\n      <BsArrowLeft className='note_details__back_icon' onClick={closeNote} />\r\n      <div className='note_details__details'>\r\n        <h4 className='note_details_note'>Note Details</h4>\r\n        <textarea\r\n          value={noteValue}\r\n          onChange={(e) => setNoteValue(e.target.value)}\r\n          className='note_details__editor'\r\n        />\r\n      </div>\r\n      <div className='note_details__actions'>\r\n        <button onClick={() => updateNote(note, noteValue)}>Save Note</button>\r\n        <button onClick={() => deleteNote(note.note)}>Delete Note</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteDetails;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './UserNotes.css';\r\nimport { AiOutlinePlus } from 'react-icons/ai';\r\nimport { MdEditNote } from 'react-icons/md';\r\nimport { FaAngleDown } from 'react-icons/fa';\r\nimport axios from 'axios';\r\nimport NoteDetails from './NoteDetails';\r\n\r\n// Get current date and format it\r\nconst today = new Date();\r\nconst yyyy = today.getFullYear();\r\nlet mm = today.getMonth() + 1; // Months start at 0!\r\nlet dd = today.getDate();\r\nif (dd < 10) dd = '0' + dd;\r\nif (mm < 10) mm = '0' + mm;\r\nconst formattedToday = mm + '/' + dd + '/' + yyyy;\r\n\r\nconst UserGameNotes = ({\r\n  profile,\r\n  windowViewHandler,\r\n  viewStatus,\r\n  gameNotes,\r\n}) => {\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const userEmail = localStorage.getItem('user');\r\n  console.log(gameNotes);\r\n\r\n  // Tab Hooks\r\n  const [currentTab, setCurrentTab] = useState('');\r\n  const [editingTab, setEditingTab] = useState(false);\r\n  const [tabValue, setTabValue] = useState('');\r\n  const [addingTab, setAddingTab] = useState(false);\r\n  // Note Hooks\r\n  const [noteValue, setNoteValue] = useState('');\r\n  const [currentNote, setCurrentNote] = useState(null);\r\n  let noteTab = gameNotes?.tabs?.filter(\r\n    (item) => item.tabName == currentTab\r\n  )[0];\r\n  const notesRef = useRef(null);\r\n  const tabRef = useRef(null);\r\n  const tabEndRef = useRef(null);\r\n\r\n  const createNotes = async () => {\r\n    const request = await axios.post(`${baseURL}/notes/create_note`, {\r\n      email: userEmail,\r\n      profile: profile.name,\r\n    });\r\n    return request;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!profile.notesId) {\r\n      createNotes();\r\n    } else {\r\n      setCurrentTab(noteTab);\r\n    }\r\n  }, [gameNotes, currentTab]);\r\n\r\n  useEffect(() => {\r\n    const handleEnter = (event) => {\r\n      if (editingTab) {\r\n        if (event.keyCode == 13) {\r\n          console.log(tabValue);\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleEnter);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEnter);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!gameNotes) return;\r\n    setCurrentTab(gameNotes?.tabs[0]?.tabName);\r\n  }, [gameNotes]);\r\n\r\n  useEffect(() => {\r\n    if (currentNote !== null) return;\r\n    tabRef.current.focus();\r\n    setEditingTab(false);\r\n    setNoteValue('');\r\n    setTabValue('');\r\n  }, [tabRef, noteTab]);\r\n\r\n  useEffect(() => {\r\n    notesRef?.current?.scrollIntoView({ behavior: 'smooth' });\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const updateProfileNotes = async () => {\r\n    if (!gameNotes) return;\r\n    const request = await axios.put(`${baseURL}/notes/update_notes`, {\r\n      userNotesId: profile.notesId,\r\n      noteId: gameNotes.id,\r\n      notes: gameNotes,\r\n    });\r\n    console.log(request);\r\n\r\n    return request;\r\n  };\r\n\r\n  const editTabHandler = () => {\r\n    if (!editingTab) {\r\n      setEditingTab(true);\r\n    } else {\r\n      noteTab.tabName = tabRef.current.innerText;\r\n      updateProfileNotes();\r\n      setCurrentTab(tabRef.current.innerText);\r\n      setEditingTab(false);\r\n    }\r\n  };\r\n\r\n  let timer;\r\n  const addTabHandler = (e) => {\r\n    e.stopPropagation();\r\n    setAddingTab(true);\r\n    timer = setTimeout(\r\n      () => tabEndRef.current.scrollIntoView({ behavior: 'smooth' }),\r\n      150\r\n    );\r\n  };\r\n\r\n  const formSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (noteValue == '') return;\r\n    noteTab.notes.push({\r\n      id: noteTab.notes.length + 1,\r\n      note: noteValue,\r\n      date: formattedToday,\r\n    });\r\n    updateProfileNotes();\r\n    setNoteValue('');\r\n  };\r\n\r\n  const tabFormSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (tabValue == '') return;\r\n    gameNotes.tabs.push({\r\n      tabName: tabValue,\r\n      notes: [],\r\n    });\r\n    setCurrentTab(tabValue);\r\n    updateProfileNotes();\r\n    setTabValue('');\r\n    setAddingTab(false);\r\n  };\r\n\r\n  const viewNoteHandler = (note) => {\r\n    setCurrentNote(note);\r\n    setAddingTab(false);\r\n    setEditingTab(false);\r\n  };\r\n\r\n  const saveNoteHandler = (oldNote, newNote) => {\r\n    console.log(oldNote);\r\n    oldNote.note = newNote;\r\n    oldNote.date = formattedToday;\r\n    updateProfileNotes();\r\n\r\n    setCurrentNote(null);\r\n  };\r\n\r\n  const deleteNoteHandler = (note) => {\r\n    const updatedList = noteTab.notes.filter((item) => item.note !== note);\r\n    noteTab.notes = updatedList;\r\n    updateProfileNotes();\r\n\r\n    setCurrentNote(null);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`user_notes__wrapper ${\r\n        !viewStatus.notes && 'minimized_notes'\r\n      }`}\r\n    >\r\n      <FaAngleDown\r\n        style={{\r\n          transform: !viewStatus.notes ? 'rotate(0)' : 'rotate(180deg)',\r\n          display: currentNote && 'none',\r\n        }}\r\n        className='user_game__minimize_icon'\r\n        onClick={() => windowViewHandler('notes')}\r\n      />\r\n      {currentNote ? (\r\n        <NoteDetails\r\n          note={currentNote}\r\n          closeNote={() => setCurrentNote(null)}\r\n          updateNote={saveNoteHandler}\r\n          deleteNote={deleteNoteHandler}\r\n        />\r\n      ) : (\r\n        <>\r\n          <>\r\n            <h4\r\n              contentEditable={editingTab}\r\n              suppressContentEditableWarning={true}\r\n              onBlur={editTabHandler}\r\n              // onInput={(e) => e.preventDefault()}\r\n              onKeyPress={(e) => {\r\n                e.preventDefault();\r\n                console.log(e.currentTarget);\r\n                if (e.key === 'Enter') editTabHandler();\r\n              }}\r\n              // onKeyUp={(e) => {\r\n              //   if (e.key === 'Enter') editTabHandler();\r\n              // }}\r\n            >\r\n              <p\r\n                ref={tabRef}\r\n                style={{\r\n                  borderBottom: editingTab\r\n                    ? '2px solid #9147ff'\r\n                    : '2px solid transparent',\r\n                  userSelect: editingTab ? 'auto' : 'none',\r\n                  padding: '0px 6px',\r\n                  transition: 'all 200ms',\r\n                }}\r\n              >\r\n                {currentTab}\r\n              </p>{' '}\r\n              <MdEditNote\r\n                className='edit_tab_icon'\r\n                onClick={() => setEditingTab(!editingTab)}\r\n              />{' '}\r\n            </h4>\r\n            <div className='user_notes__header'>\r\n              <ul className='user_notes__tabs'>\r\n                {gameNotes?.tabs.map((item) => (\r\n                  <li\r\n                    key={item.tabName}\r\n                    className='user_notes__tab'\r\n                    onClick={() => setCurrentTab(item.tabName)}\r\n                    style={{\r\n                      borderBottom:\r\n                        currentTab == item.tabName && '1px solid transparent',\r\n                    }}\r\n                  >\r\n                    {item.tabName}\r\n                  </li>\r\n                ))}\r\n                <li\r\n                  className={`user_notes__tab ${\r\n                    addingTab ? 'add_tab' : 'new_tab'\r\n                  }`}\r\n                  // onClick={() => !addingTab && setAddingTab(true)}\r\n                  onClick={addTabHandler}\r\n                >\r\n                  {!addingTab ? (\r\n                    <AiOutlinePlus />\r\n                  ) : (\r\n                    <div className='new_tab__container'>\r\n                      <form onSubmit={tabFormSubmitHandler}>\r\n                        <input\r\n                          value={tabValue}\r\n                          onChange={(e) => setTabValue(e.target.value)}\r\n                        />\r\n                      </form>\r\n                      <p\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          setAddingTab(false);\r\n                        }}\r\n                      >\r\n                        X\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </li>\r\n                <div ref={tabEndRef} />\r\n              </ul>\r\n            </div>\r\n          </>\r\n          <div className='user_notes__notes_wrapper'>\r\n            <ul className='user_notes__notes'>\r\n              {gameNotes?.tabs?.filter((item) => item.tabName == currentTab)[0]\r\n                ?.notes?.length > 0 ? (\r\n                gameNotes?.tabs\r\n                  ?.filter((item) => item.tabName == currentTab)[0]\r\n                  ?.notes.map((note) => (\r\n                    <li\r\n                      key={note.note}\r\n                      className='user_note'\r\n                      onClick={() => viewNoteHandler(note)}\r\n                    >\r\n                      {note.note}\r\n                    </li>\r\n                  ))\r\n              ) : (\r\n                <p className='no_notes_msg'>No Notes</p>\r\n              )}\r\n            </ul>\r\n          </div>\r\n          <div ref={notesRef} style={{ width: '10px', marginLeft: '5px' }} />\r\n          <div\r\n            className='user_notes__form_container'\r\n            style={{ display: `${!viewStatus.notes ? 'none' : 'block'}` }}\r\n          >\r\n            <form className='user_notes__form' onSubmit={formSubmitHandler}>\r\n              <input\r\n                value={noteValue}\r\n                onChange={(e) => setNoteValue(e.target.value)}\r\n                className='user_notes__input'\r\n                placeholder='I think Clark Kent is Batman'\r\n              />\r\n            </form>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserGameNotes;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './UserGame.css';\r\nimport axios from 'axios';\r\nimport { FiClock } from 'react-icons/fi';\r\nimport { FaMedal, FaMusic, FaAngleDown } from 'react-icons/fa';\r\nimport { DynamicStar } from 'react-dynamic-star';\r\nimport useContextMenu from '../../hooks/useContextMenu';\r\nimport UserGameNotes from './UserNotes';\r\n\r\nconst today = new Date();\r\nconst yyyy = today.getFullYear();\r\nlet mm = today.getMonth() + 1; // Months start at 0!\r\nlet dd = today.getDate();\r\nif (dd < 10) dd = '0' + dd;\r\nif (mm < 10) mm = '0' + mm;\r\nconst formattedToday = mm + '/' + dd + '/' + yyyy;\r\n\r\nconst UserGame = ({\r\n  game,\r\n  activeProfile,\r\n  closeStats,\r\n  setProfile,\r\n  setNotification,\r\n  setCurrentGame,\r\n  updateCollection,\r\n  userNotes,\r\n}) => {\r\n  // RATING, PLAYTIME, ACHIEVEMENTS, SPOTIFY, NOTES, STATUS(COMPLETED, BACKLOG, ETC.), PLATFORMS OWNED\r\n  const { anchorPoint, showBannerMenu, resetContext } = useContextMenu();\r\n  // Achievement States\r\n  const [viewStatus, setViewStatus] = useState({\r\n    achievements: true,\r\n    notes: true,\r\n    trophies: true,\r\n  });\r\n  const [achievements, setAchievements] = useState(game.achievements);\r\n  const [trophies, setTrophies] = useState(game.trophies);\r\n  const [achievementFilter, setAchievementFilter] = useState('unlocked');\r\n  const [trophyFilter, setTrophyFilter] = useState('unlocked');\r\n  const [currentGameNotes, setCurrentGameNotes] = useState(null);\r\n  // Playtime States\r\n  const [playtime, setPlaytime] = useState(Math.floor(game.playtime / 60));\r\n  const [changingPlaytime, setChangingPlaytime] = useState(false);\r\n  // Rating States\r\n  const [rating, setRating] = useState(game.user_rating);\r\n  const [changingRating, setChangingRating] = useState(false);\r\n  const [changingBanner, setChangingBanner] = useState(false);\r\n  const [bannerLink, setBannerLink] = useState('');\r\n  // BACKLOG, CURRENTLY PLAYING, COMPLETED, STARTED, ABANDONED, 100%, NOT OWNED\r\n  const [backlogStatus, setBacklogStatus] = useState(game.status);\r\n  const [changingBacklog, setChangingBacklog] = useState(false);\r\n  // Hooks and Storage Variables\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const steamID = localStorage.getItem('steamID');\r\n  const userEmail = localStorage.getItem('user');\r\n  const trophyPercentage = Math.floor(\r\n    (trophies?.filter((game) => game.earned == true).length /\r\n      trophies?.length) *\r\n      100\r\n  );\r\n  const achievementPercentage = Math.floor(\r\n    (achievements?.filter(\r\n      (game) => game.achieved == true || game.earned == true\r\n    ).length /\r\n      achievements?.length) *\r\n      100\r\n  );\r\n\r\n  const addNoteItem = () => {\r\n    userNotes.notes_collection.push({\r\n      id: game.id,\r\n      tabs: [\r\n        {\r\n          tabName: 'Notes',\r\n          notes: [\r\n            {\r\n              id: 0,\r\n              note: `These are your notes for ${game.name}! Click me to edit this or start your own tab by clicking the +!`,\r\n              date: formattedToday,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    });\r\n    setCurrentGameNotes({\r\n      id: game.id,\r\n      tabs: [\r\n        {\r\n          tabName: 'Notes',\r\n          notes: [\r\n            {\r\n              id: 0,\r\n              note: `These are your notes for ${game.name}! Click me to edit this or start your own tab by clicking the +!`,\r\n              date: formattedToday,\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  console.log(userNotes);\r\n\r\n  useEffect(() => {\r\n    if (!userNotes) return;\r\n    if (userNotes.notes_collection.filter((g) => g.id == game.id).length > 0) {\r\n      console.log('WHO');\r\n      setCurrentGameNotes(\r\n        userNotes.notes_collection.filter((g) => g.id == game.id)[0]\r\n      );\r\n    } else {\r\n      console.log('WHAT');\r\n      addNoteItem();\r\n    }\r\n  }, [game, userNotes]);\r\n\r\n  useEffect(() => {\r\n    const handleEsc = (event) => {\r\n      if (event.keyCode === 27) {\r\n        setChangingRating(false);\r\n        setChangingBacklog(false);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleEsc);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEsc);\r\n    };\r\n  }, []);\r\n\r\n  // Runs everytime game changes\r\n  useEffect(() => {\r\n    setChangingPlaytime(false);\r\n    setChangingRating(false);\r\n    setChangingBacklog(false);\r\n    setBacklogStatus(game.status || 'BACKLOG');\r\n    setPlaytime(Math.floor(game.playtime / 60));\r\n    setRating(game.user_rating);\r\n    setAchievements(game.achievements);\r\n    setTrophies(game.trophies);\r\n    if (!steamID) {\r\n      console.log('No steam id');\r\n      return;\r\n    }\r\n\r\n    // Compare both achievement lists to get Icons\r\n    const getAchievementData = (arr1, arr2) => {\r\n      let dataList = [];\r\n      arr2.map(function (x) {\r\n        var result = arr1.filter((a1) => a1.name == x.displayName);\r\n        if (result.length > 0) {\r\n          x.achieved = result[0].achieved;\r\n        }\r\n        dataList.push(x);\r\n      });\r\n\r\n      // Sort Alphabetically\r\n      dataList.sort(function (a, b) {\r\n        var textA = a.displayName.toUpperCase();\r\n        var textB = b.displayName.toUpperCase();\r\n        return textA < textB ? -1 : textA > textB ? 1 : 0;\r\n      });\r\n\r\n      dataList.sort(function (a, b) {\r\n        return a.achieved < b.achieved ? 1 : a.achieved > b.achieved ? -1 : 0;\r\n      });\r\n      return dataList;\r\n    };\r\n\r\n    // Sort by unlocked Achievements\r\n    const fetchAppData = async () => {\r\n      const steamGameStats = await axios.get(\r\n        `${baseURL}/steam/get_game_stats`,\r\n        {\r\n          params: {\r\n            gameId: game.id,\r\n          },\r\n        }\r\n      );\r\n      if (Object.keys(steamGameStats.data).length == 0) {\r\n        setAchievements(null);\r\n        return;\r\n      }\r\n      try {\r\n        if (!game.achievements) {\r\n          const request = await axios.get(\r\n            `${baseURL}/steam/get_steam_achievements`,\r\n            {\r\n              params: {\r\n                gameId: game.id,\r\n                steamId: steamID,\r\n              },\r\n            }\r\n          );\r\n\r\n          const userAchievementData = getAchievementData(\r\n            request.data.achievements,\r\n            steamGameStats.data.availableGameStats.achievements\r\n          );\r\n\r\n          const addAchievements = await axios.put(\r\n            `${baseURL}/app/update_game_achievements`,\r\n            {\r\n              email: userEmail,\r\n              currentProfile: activeProfile.name,\r\n              achievements: userAchievementData,\r\n              gameId: game.id,\r\n            }\r\n          );\r\n\r\n          setCurrentGame(request.data.response.game);\r\n          updateCollection(request.data.response.profile.collection);\r\n          setAchievements(addAchievements.data.response.game.achievements);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchAppData();\r\n  }, [game]);\r\n\r\n  const handleMouseMove = (event) => {\r\n    const bounds = event.currentTarget.getBoundingClientRect();\r\n    const position = Math.floor(event.clientX - bounds.left) / 20;\r\n    setRating(Math.floor(event.clientX - bounds.left) / 20);\r\n  };\r\n\r\n  const getAchievementCount = (list) => {\r\n    if (!list) return 'N/A';\r\n    const numberAchieved = list.filter(\r\n      (game) => game.achieved == true || game.earned == true\r\n    ).length;\r\n    return numberAchieved + '/' + list.length;\r\n  };\r\n\r\n  // Convert steam minutes to numbers\r\n  function padTo2Digits(num) {\r\n    return num.toString().padStart(2, '0');\r\n  }\r\n\r\n  function toHoursAndMinutes(totalMinutes) {\r\n    if (totalMinutes <= 0 && game.type == 'steam') return 'Not Started';\r\n    else if (totalMinutes <= 0 && game.type !== 'steam') return 0 + ' hours';\r\n    else {\r\n      const minutes = totalMinutes % 60;\r\n      const hours = Math.floor(totalMinutes / 60);\r\n      if (minutes == 0) return hours + ' hours';\r\n      // setPlaytime(hours)\r\n      return `${hours}.${padTo2Digits(minutes)} hours`;\r\n    }\r\n  }\r\n\r\n  const updateRatingHandler = async () => {\r\n    let ratingValue = rating * 20;\r\n    if (rating * 20 >= 100) {\r\n      ratingValue = 100;\r\n    }\r\n\r\n    try {\r\n      const request = await axios.put(`${baseURL}/app/update_game_rating`, {\r\n        email: userEmail,\r\n        currentProfile: activeProfile.name,\r\n        rating: ratingValue,\r\n        gameId: game.id,\r\n      });\r\n      localStorage.setItem('profile', request.data.response.profile.name);\r\n      // setProfile(request.data.response.profile);\r\n      setCurrentGame(request.data.response.game);\r\n      updateCollection(request.data.response.profile.collection);\r\n      // setNotification({\r\n      //   message: `${game.name} playtime successfully updated!`,\r\n      //   status: 'SUCCESS',\r\n      // });\r\n      setChangingRating(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      // setNotification({\r\n      //   message: `Something went wrong, please try again!`,\r\n      //   status: 'ERROR',\r\n      // });\r\n    }\r\n  };\r\n\r\n  const updatePlaytime = async () => {\r\n    if (game.playtime == playtime) {\r\n      return;\r\n    } else {\r\n      try {\r\n        const request = await axios.put(`${baseURL}/app/update_game_playtime`, {\r\n          email: userEmail,\r\n          currentProfile: activeProfile.name,\r\n          playtime: playtime * 60,\r\n          gameId: game.id,\r\n        });\r\n\r\n        localStorage.setItem('profile', request.data.response.profile.name);\r\n        // setProfile(request.data.response.profile);\r\n        setCurrentGame(request.data.response.game);\r\n        updateCollection(request.data.response.profile.collection);\r\n        // setNotification({\r\n        //   message: `${game.name} playtime successfully updated!`,\r\n        //   status: 'SUCCESS',\r\n        // });\r\n        setChangingPlaytime(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        // setNotification({\r\n        //   message: `Something went wrong, please try again!`,\r\n        //   status: 'ERROR',\r\n        // });\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateBacklog = async (status) => {\r\n    try {\r\n      const request = await axios.put(`${baseURL}/app/update_game_backlog`, {\r\n        email: userEmail,\r\n        currentProfile: activeProfile.name,\r\n        status: status,\r\n        gameId: game.id,\r\n      });\r\n\r\n      localStorage.setItem('profile', request.data.response.profile.name);\r\n\r\n      setCurrentGame(request.data.response.game);\r\n      updateCollection(request.data.response.profile.collection);\r\n      // setNotification({\r\n      //   message: `${game.name} backlog successfully updated!`,\r\n      //   status: 'SUCCESS',\r\n      // });\r\n      setChangingBacklog(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      // setNotification({\r\n      //   message: `Something went wrong, please try again!`,\r\n      //   status: 'ERROR',\r\n      // });\r\n    }\r\n  };\r\n\r\n  const updateBacklogHandler = (status) => {\r\n    updateBacklog(status);\r\n    setChangingBacklog(false);\r\n  };\r\n\r\n  // Minimzie or Maximize Height of Game Component\r\n  const windowViewHandler = (data) => {\r\n    setViewStatus({ ...viewStatus, [data]: !viewStatus[data] });\r\n  };\r\n\r\n  // Determine if user is updating or canceling playtime change\r\n  const determinePlaytimeAction = (e) => {\r\n    if (e.key === 'Enter') {\r\n      updatePlaytime();\r\n    }\r\n    if (e.key === 'Escape') {\r\n      setChangingPlaytime(false);\r\n      setPlaytime(Math.floor(game.playtime / 60));\r\n    }\r\n  };\r\n\r\n  const changeBannerHandler = (e) => {\r\n    e.preventDefault();\r\n    setChangingBanner(true);\r\n    resetContext();\r\n  };\r\n\r\n  const updateBanner = async () => {\r\n    if (bannerLink.trim() == '') return;\r\n    try {\r\n      const request = await axios.put(`${baseURL}/app/update_game_banner`, {\r\n        email: userEmail,\r\n        currentProfile: activeProfile.name,\r\n        url: bannerLink,\r\n        gameId: game.id,\r\n      });\r\n      localStorage.setItem('profile', request.data.response.profile.name);\r\n      setCurrentGame(request.data.response.game);\r\n      updateCollection(request.data.response.profile.collection);\r\n      // setNotification({\r\n      //   message: `${game.name} playtime successfully updated!`,\r\n      //   status: 'SUCCESS',\r\n      // });\r\n    } catch (error) {\r\n      console.log(error);\r\n      //   setNotification({\r\n      //     message: `Something went wrong, please try again!`,\r\n      //     status: 'ERROR',\r\n      //   });\r\n    }\r\n    setChangingBanner(false);\r\n    setBannerLink('');\r\n  };\r\n\r\n  return (\r\n    <div className='user_game__wrapper'>\r\n      {changingBanner && (\r\n        <div className='user_game__modal'>\r\n          <div className='modal_content'>\r\n            <h2\r\n              style={{\r\n                maxWidth: '75%',\r\n                textAlign: 'center',\r\n                marginBottom: '25px',\r\n              }}\r\n            >\r\n              Please enter the link to any image or gif below.\r\n            </h2>\r\n\r\n            <div className='modal_form' style={{ width: '100%' }}>\r\n              <input\r\n                style={{ width: '80%' }}\r\n                value={bannerLink}\r\n                onChange={(e) => setBannerLink(e.target.value)}\r\n              />\r\n              <button onClick={updateBanner}>Submit</button>\r\n              <button onClick={() => setChangingBanner(false)}>Back</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className='user_game__banner'>\r\n        {showBannerMenu && (\r\n          <ul\r\n            className='user_game__banner_context'\r\n            style={{ top: anchorPoint.y + 5, left: anchorPoint.x }}\r\n          >\r\n            <li className='banner_context__item' onClick={changeBannerHandler}>\r\n              Set Custom Banner\r\n            </li>\r\n            <li className='banner_context__item'>Set Custom Logo</li>\r\n            <li className='banner_context__item'>Set Default Image</li>\r\n          </ul>\r\n        )}\r\n\r\n        <div className='user_game__exit' onClick={closeStats}>\r\n          X\r\n        </div>\r\n        <img\r\n          className='user_game_banner_img'\r\n          src={\r\n            game.banner_image ||\r\n            game.cover_image.replace('cover_big_2x', '1080p_2x')\r\n          }\r\n        />\r\n        <div className='user_game__current_stats'>\r\n          {/* PLAYTIME */}\r\n          <div className='playtime_container'>\r\n            <FiClock className='playtime_clock_icon' />\r\n            <div className='stats_item'>\r\n              <h3 style={{ color: changingPlaytime && '#9147ff' }}>\r\n                PLAY TIME\r\n              </h3>\r\n              <span\r\n                style={{ display: changingPlaytime && 'none' }}\r\n                className='previous_playtime'\r\n                onClick={() => setChangingPlaytime(true)}\r\n              >\r\n                {toHoursAndMinutes(game.playtime)}\r\n              </span>\r\n              <input\r\n                type='number'\r\n                value={playtime}\r\n                min='0'\r\n                onKeyDown={determinePlaytimeAction}\r\n                onChange={(e) => setPlaytime(e.target.value)}\r\n                className={`playtime_input ${\r\n                  changingPlaytime && 'playtime_focused'\r\n                }`}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* RATING */}\r\n          <div className='rating_container'>\r\n            <div className='stats_item'>\r\n              <h3 style={{ paddingBottom: changingRating && '4px' }}>RATING</h3>\r\n              <span\r\n                onClick={() => setChangingRating(true)}\r\n                className='previous_rating'\r\n                style={{ display: changingRating && 'none' }}\r\n              >\r\n                {game.user_rating || 0}%\r\n              </span>\r\n              <div\r\n                className='rating_stars'\r\n                onMouseMove={handleMouseMove}\r\n                onClick={updateRatingHandler}\r\n                style={{\r\n                  width: !changingRating && '0px',\r\n                  display: !changingRating && 'none',\r\n                }}\r\n              >\r\n                <DynamicStar\r\n                  rating={rating}\r\n                  totalStars={5}\r\n                  width={20}\r\n                  height={20}\r\n                  outlined={true}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* BACKLOG STATUS */}\r\n          <div className='achievement_count_container'>\r\n            <div className='stats_item'>\r\n              <h3 style={{ paddingTop: '5px' }}>STATUS</h3>\r\n              <button\r\n                onClick={() => setChangingBacklog(!changingBacklog)}\r\n                style={{\r\n                  backgroundColor:\r\n                    backlogStatus == 'BACKLOG'\r\n                      ? 'dodgerblue'\r\n                      : backlogStatus == 'STARTED'\r\n                      ? 'aqua'\r\n                      : backlogStatus == 'FINISHED'\r\n                      ? 'green'\r\n                      : backlogStatus == 'PLAYING'\r\n                      ? 'pink'\r\n                      : backlogStatus == '100%'\r\n                      ? 'gold'\r\n                      : backlogStatus == 'ABANDONDED'\r\n                      ? 'red'\r\n                      : 'grey',\r\n                }}\r\n                className='status_btn'\r\n              >\r\n                {backlogStatus}\r\n              </button>\r\n            </div>\r\n            {changingBacklog && (\r\n              <div className='backlog_items'>\r\n                <ul className='backlog_items_list'>\r\n                  <li\r\n                    style={{\r\n                      backgroundColor: 'BACKLOG' == game.status && '#9147ff',\r\n                      color: 'BACKLOG' == game.status && 'white',\r\n                    }}\r\n                    className='backlog_items_item'\r\n                    onClick={() => {\r\n                      updateBacklogHandler('BACKLOG');\r\n                    }}\r\n                  >\r\n                    Backlog\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      backgroundColor: 'STARTED' == game.status && '#9147ff',\r\n                      color: 'STARTED' == game.status && 'white',\r\n                    }}\r\n                    className='backlog_items_item'\r\n                    onClick={() => {\r\n                      updateBacklogHandler('STARTED');\r\n                    }}\r\n                  >\r\n                    Started\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      backgroundColor: 'PLAYING' == game.status && '#9147ff',\r\n                      color: 'PLAYING' == game.status && 'white',\r\n                    }}\r\n                    className='backlog_items_item'\r\n                    onClick={() => {\r\n                      updateBacklogHandler('PLAYING');\r\n                    }}\r\n                  >\r\n                    Currently Playing\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      backgroundColor: 'FINISHED' == game.status && '#9147ff',\r\n                      color: 'FINISHED' == game.status && 'white',\r\n                    }}\r\n                    className='backlog_items_item'\r\n                    onClick={() => {\r\n                      updateBacklogHandler('FINISHED');\r\n                    }}\r\n                  >\r\n                    Finished\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      backgroundColor: '100%' == game.status && '#9147ff',\r\n                      color: '100%' == game.status && 'white',\r\n                    }}\r\n                    className='backlog_items_item'\r\n                    onClick={() => {\r\n                      updateBacklogHandler('100%');\r\n                    }}\r\n                  >\r\n                    100% Completed\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      backgroundColor: 'ABANDONDED' == game.status && '#9147ff',\r\n                      color: 'ABANDONDED' == game.status && 'white',\r\n                    }}\r\n                    className='backlog_items_item'\r\n                    onClick={() => {\r\n                      updateBacklogHandler('ABANDONDED');\r\n                    }}\r\n                  >\r\n                    Abandonded\r\n                  </li>\r\n                  <li\r\n                    style={{\r\n                      backgroundColor: 'NOT OWNED' == game.status && '#9147ff',\r\n                      color: 'NOT OWNED' == game.status && 'white',\r\n                    }}\r\n                    className='backlog_items_item'\r\n                    onClick={() => {\r\n                      updateBacklogHandler('NOT OWNED');\r\n                    }}\r\n                  >\r\n                    Not Owned\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* SPOTIFY MUSIC */}\r\n          <div className='music_icon_container'>\r\n            <div className='stats_item' style={{ alignItems: 'center' }}>\r\n              <h3>MUSIC</h3>\r\n              <FaMusic className='music_icon' />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* GAME NEWS AND DATA */}\r\n      <div className='user_game__data_wrapper'>\r\n        <div className='user_game__data'>\r\n          {/* OWNED PLATFORMS */}\r\n          {/* <div className='user_game__platforms'>\r\n            <h4>Platforms Owned</h4>\r\n            <ul>{game.origin == 'steam' && <li>Steam</li>}</ul>\r\n          </div> */}\r\n\r\n          {/* ACHIEVEMENT LIST */}\r\n          {achievements && (\r\n            <div\r\n              className={`user_game__achievements_wrapper ${\r\n                !viewStatus.achievements && 'minimized'\r\n              }`}\r\n            >\r\n              <div className='user_game__achievements'>\r\n                <div className='user_game__achievements_banner'>\r\n                  <FaAngleDown\r\n                    style={{\r\n                      transform: !viewStatus.achievements\r\n                        ? 'rotate(0)'\r\n                        : 'rotate(180deg)',\r\n                    }}\r\n                    className='user_game__minimize_icon'\r\n                    onClick={() => windowViewHandler('achievements')}\r\n                  />\r\n                  {achievementPercentage === 100 && (\r\n                    <FaMedal className='user_game__completion_medal' />\r\n                  )}\r\n                  <h4>\r\n                    <p>Achievements</p>\r\n                  </h4>\r\n                  <p>\r\n                    You've unlocked {getAchievementCount(achievements)} (\r\n                    {achievementPercentage}\r\n                    %)\r\n                  </p>\r\n                  <div className='user_game__achievements_progress_bar_container'>\r\n                    <div\r\n                      className='user_game__achievements_progress_bar'\r\n                      style={{\r\n                        width: `${achievementPercentage}%`,\r\n                        background: activeProfile.color,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className='user_game__achievements_actions'>\r\n                    <button\r\n                      className={achievementFilter == 'unlocked' && 'active'}\r\n                      onClick={() => setAchievementFilter('unlocked')}\r\n                    >\r\n                      Unlocked\r\n                    </button>\r\n                    <button\r\n                      className={`${achievementFilter == 'locked' && 'active'}`}\r\n                      onClick={() => setAchievementFilter('locked')}\r\n                    >\r\n                      In Progress\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <ul className='user_game__achievements_list'>\r\n                  {achievements\r\n                    .filter((achievement) =>\r\n                      achievementFilter == 'unlocked'\r\n                        ? achievement.achieved\r\n                        : !achievement.achieved\r\n                    )\r\n                    .sort((a, b) =>\r\n                      a.displayName > b.displayName\r\n                        ? 1\r\n                        : b.displayName > a.displayName\r\n                        ? -1\r\n                        : 0\r\n                    )\r\n                    .map((item) => (\r\n                      <li className='achievement_item'>\r\n                        <div\r\n                          className='achievement_item_icon'\r\n                          style={{ border: `1px solid ${activeProfile.color}` }}\r\n                        >\r\n                          <img\r\n                            className='achievement_item_icon__img'\r\n                            src={item.achieved ? item.icon : item.icongray}\r\n                          />\r\n                        </div>\r\n                        <div className='achievement_item_headers'>\r\n                          <h4>{item.displayName}</h4>\r\n                          {item.description && <p>{item.description}</p>}\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {/* PLAYSTATION TROPHIES */}\r\n          {trophies && (\r\n            <div\r\n              className={`user_game__achievements_wrapper ${\r\n                !viewStatus.trophies && 'minimized'\r\n              }`}\r\n            >\r\n              <div\r\n                className={`user_game__achievements ${\r\n                  trophyPercentage == 100 && 'completed'\r\n                }`}\r\n              >\r\n                <div className='user_game__achievements_banner'>\r\n                  <FaAngleDown\r\n                    style={{\r\n                      transform: !viewStatus.trophies\r\n                        ? 'rotate(0)'\r\n                        : 'rotate(180deg)',\r\n                    }}\r\n                    className='user_game__minimize_icon'\r\n                    onClick={() => windowViewHandler('trophies')}\r\n                  />\r\n                  {trophyPercentage === 100 && (\r\n                    <FaMedal className='user_game__completion_medal' />\r\n                  )}\r\n                  <h4>\r\n                    <p>Trophies</p>\r\n                  </h4>\r\n                  <p>\r\n                    You've unlocked {getAchievementCount(trophies)} (\r\n                    {trophyPercentage}%)\r\n                  </p>\r\n                  <div className='user_game__achievements_progress_bar_container'>\r\n                    <div\r\n                      className='user_game__achievements_progress_bar'\r\n                      style={{\r\n                        width: `${trophyPercentage}%`,\r\n                        background: activeProfile.color,\r\n                      }}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='user_game__achievements_actions'>\r\n                    <button\r\n                      className={trophyFilter == 'unlocked' && 'active'}\r\n                      onClick={() => setTrophyFilter('unlocked')}\r\n                    >\r\n                      Unlocked\r\n                    </button>\r\n                    {trophyPercentage < 100 && (\r\n                      <button\r\n                        className={`${trophyFilter == 'locked' && 'active'}`}\r\n                        onClick={() => setTrophyFilter('locked')}\r\n                      >\r\n                        In Progress\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <ul className='user_game__achievements_list'>\r\n                  {trophies\r\n                    .filter((trophy) =>\r\n                      trophyFilter == 'unlocked'\r\n                        ? trophy.earned\r\n                        : !trophy.earned\r\n                    )\r\n                    .sort((a, b) =>\r\n                      a.trophyName > b.trophyName\r\n                        ? 1\r\n                        : b.trophyName > a.trophyName\r\n                        ? -1\r\n                        : 0\r\n                    )\r\n                    .map((item) => (\r\n                      <li className='achievement_item' key={item.trophyName}>\r\n                        <div\r\n                          className='achievement_item_icon'\r\n                          style={{ border: `1px solid ${activeProfile.color}` }}\r\n                        >\r\n                          <img\r\n                            className={`achievement_item_icon__img ${\r\n                              !item.earned && 'greyscale'\r\n                            }`}\r\n                            src={item.trophyIconUrl}\r\n                          />\r\n                        </div>\r\n                        <div className='achievement_item_headers'>\r\n                          <h4>{item.trophyName}</h4>\r\n                          {item.trophyDetail && <p>{item.trophyDetail}</p>}\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <UserGameNotes\r\n            profile={activeProfile}\r\n            windowViewHandler={windowViewHandler}\r\n            viewStatus={viewStatus}\r\n            gameNotes={currentGameNotes}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserGame;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './UserCollection.css';\r\nimport { FaSistrix, FaHome, FaStar } from 'react-icons/fa';\r\nimport { CiSquareMore } from 'react-icons/ci';\r\nimport { read, utils, writeFile } from 'xlsx';\r\nimport axios from 'axios';\r\n\r\nimport UserGame from '../UserGame/UserGame';\r\nimport useContextMenu from '../../hooks/useContextMenu';\r\nimport bronzeTrophy from '../../assets/images/ps-trophy-bronze.png';\r\nimport goldTrophy from '../../assets/images/ps-trophy-gold.png';\r\nimport platinumTrophy from '../../assets/images/ps-trophy-platinum.png';\r\n\r\nconst UserCollection = ({\r\n  collection,\r\n  activeProfile,\r\n  backToHome,\r\n  playTrack,\r\n  currentTrack,\r\n  isPlaying,\r\n  pausePlayback,\r\n  resumePlayback,\r\n  spotifyToken,\r\n  setSelectedProfile,\r\n  removeGame,\r\n  updateCollection,\r\n  userNotes,\r\n}) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [searchList, setSearchList] = useState([]);\r\n  const [viewingList, setViewingList] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [currentGame, setCurrentGame] = useState(null);\r\n  const [currentlyAdjusting, setCurrentlyAdjusting] = useState(null);\r\n  const [viewingCSVDropdown, setViewingCSVDropdown] = useState(false);\r\n  // SPOTLIGHT STATES\r\n  const [spotlightList, setSpotlightList] = useState([]);\r\n  const [spotlightFilter, setSpotlightFilter] = useState('playtime');\r\n  // COVER LIST STATES\r\n  const [listFilter, setListFilter] = useState('alphabetical');\r\n  const [filteredList, setFilteredList] = useState([]);\r\n  // STATUS LIST STATES\r\n  const [statusFilter, setStatusFilter] = useState('backlog');\r\n\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const { anchorPoint, showTitleMenu } = useContextMenu();\r\n  const trophies = [platinumTrophy, goldTrophy, bronzeTrophy];\r\n\r\n  // If user is typing, filter titles that reflect inputted value\r\n  useEffect(() => {\r\n    if (searchValue == '') {\r\n      setSearchList([]);\r\n      return;\r\n    }\r\n    const delaySearch = setTimeout(() => {\r\n      const res = collection.filter((item) =>\r\n        item.name.toLowerCase().includes(searchValue.toLowerCase())\r\n      );\r\n      setSearchList(res);\r\n    }, 250);\r\n\r\n    return () => clearTimeout(delaySearch);\r\n  }, [searchValue]);\r\n\r\n  // Listen for screen size to determine if user is on mobile\r\n  useEffect(() => {\r\n    if (window.innerWidth <= 600) {\r\n      setIsMobile(true);\r\n    }\r\n    function handleResize() {\r\n      if (window.innerWidth <= 600) {\r\n        setIsMobile(true);\r\n      } else {\r\n        setIsMobile(false);\r\n      }\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // Listen for spotlight filter change\r\n  useEffect(() => {\r\n    if (spotlightFilter == 'playtime') {\r\n      setSpotlightList(\r\n        [...collection].sort((a, b) => b[spotlightFilter] - a[spotlightFilter])\r\n      );\r\n    } else if (spotlightFilter == 'user_rating') {\r\n      setSpotlightList(\r\n        collection\r\n          .filter((game) => game.user_rating)\r\n          .sort((a, b) => b['user_rating'] - a['user_rating'])\r\n      );\r\n    } else {\r\n      setSpotlightList(\r\n        collection\r\n          .filter((game) => game.achievements)\r\n          .sort((a, b) => b['achievements'] - a['achievements'])\r\n      );\r\n    }\r\n  }, [spotlightFilter, collection]);\r\n\r\n  // Listen for list filter change\r\n  useEffect(() => {\r\n    if (listFilter == 'achievements') {\r\n      setFilteredList(\r\n        [...collection]\r\n          .filter((game) => game.achievements)\r\n          .sort((a, b) => b['achievements'] - a['achievements'])\r\n      );\r\n    } else if (listFilter == 'playtime') {\r\n      setFilteredList(\r\n        [...collection]\r\n          .filter((game) => game.playtime > 0)\r\n          .sort((a, b) => b.playtime - a.playtime)\r\n      );\r\n    } else if (listFilter == 'status') {\r\n      setFilteredList(\r\n        [...collection].filter(\r\n          (game) => game.status == statusFilter.toUpperCase()\r\n        )\r\n      );\r\n    } else if (listFilter == 'rating') {\r\n      setFilteredList(\r\n        [...collection]\r\n          .filter((game) => game.user_rating)\r\n          .sort((a, b) => b.user_rating - a.user_rating)\r\n      );\r\n    } else if (listFilter == 'trophies') {\r\n      // const earnedTrophyCount = game.trophies.filter((game) => game.earned);\r\n      setFilteredList(\r\n        [...collection]\r\n          .filter((game) => game.trophies)\r\n          .sort((a, b) => a.trophies - b.trophies)\r\n      );\r\n    } else {\r\n      setFilteredList(\r\n        [...collection].sort((a, b) =>\r\n          a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n        )\r\n      );\r\n    }\r\n  }, [listFilter, statusFilter]);\r\n\r\n  // Select which game is being viewed\r\n  const viewGameHandler = (game) => {\r\n    setCurrentGame(game);\r\n  };\r\n\r\n  // Open up the menu when the user right clicks\r\n  const viewGameHeaders = (e, game) => {\r\n    e.preventDefault();\r\n    setCurrentlyAdjusting(game);\r\n  };\r\n\r\n  // Determine what stat to show based on current filter\r\n  const getFilterStat = (game) => {\r\n    switch (listFilter) {\r\n      case 'playtime':\r\n        if (Math.floor(game.playtime / 60) >= 1) {\r\n          return (\r\n            <span className='filter_stat'>\r\n              {Math.floor(game.playtime / 60)}{' '}\r\n              {Math.floor(game.playtime / 60) == 1 ? 'hour' : 'hours'}\r\n            </span>\r\n          );\r\n        } else {\r\n          return (\r\n            <span className='filter_stat'>\r\n              {game.playtime} {game.playtime == 1 ? 'minute' : 'minutes'}\r\n            </span>\r\n          );\r\n        }\r\n      case 'rating':\r\n        return (\r\n          <span className='filter_stat rating_stat'>{game.user_rating}%</span>\r\n        );\r\n      case 'trophies':\r\n        if (!game.trophies) break;\r\n        const earnedTrophyCount = game?.trophies?.filter((game) => game.earned);\r\n        return (\r\n          <span className='filter_stat'>\r\n            {Math.floor(\r\n              (earnedTrophyCount.length / game.trophies.length) * 100\r\n            )}\r\n            % earned\r\n          </span>\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const removeGameHandler = (e) => {\r\n    e.stopPropagation();\r\n    if (\r\n      Object.keys(currentGame).length > 0 &&\r\n      currentlyAdjusting.id === currentGame.id\r\n    )\r\n      setCurrentGame(null);\r\n    removeGame(currentlyAdjusting);\r\n    setCurrentlyAdjusting(null);\r\n  };\r\n\r\n  const importUserCollection = async (collection) => {\r\n    try {\r\n      const request = await axios.put(\r\n        `${baseURL}/app/add_imported_collection`,\r\n        {\r\n          email: localStorage.getItem('user'),\r\n          profile: localStorage.getItem('profile'),\r\n          collection,\r\n        }\r\n      );\r\n      console.log(request);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Allow user to import their own collection via CSV file\r\n  const handleImport = ($event) => {\r\n    const files = $event.target.files;\r\n    if (files.length) {\r\n      const file = files[0];\r\n      const reader = new FileReader();\r\n      reader.onload = (event) => {\r\n        const wb = read(event.target.result);\r\n        const sheets = wb.SheetNames;\r\n\r\n        if (sheets.length) {\r\n          const rows = utils.sheet_to_json(wb.Sheets[sheets[0]]);\r\n          setFilteredList(rows);\r\n          importUserCollection(rows);\r\n        }\r\n      };\r\n      reader.readAsArrayBuffer(file);\r\n    }\r\n    setViewingCSVDropdown(false);\r\n  };\r\n\r\n  // Allow user to export their collection from their own file\r\n  const handleExport = () => {\r\n    const headings = [\r\n      [\r\n        'name',\r\n        'id',\r\n        'cover_image',\r\n        'playtime',\r\n        'origin',\r\n        'status',\r\n        'user_rating',\r\n        'banner_image',\r\n      ],\r\n    ];\r\n    const wb = utils.book_new();\r\n    const ws = utils.json_to_sheet([]);\r\n    utils.sheet_add_aoa(ws, headings);\r\n    utils.sheet_add_json(ws, filteredList, { origin: 'A2', skipHeader: true });\r\n    utils.book_append_sheet(wb, ws, 'Game');\r\n    writeFile(wb, 'Game Collection.xlsx');\r\n    setViewingCSVDropdown(false);\r\n  };\r\n\r\n  // HTML RENDER\r\n  return (\r\n    <div className='user_collection__wrapper'>\r\n      <div\r\n        className='user_collection__container'\r\n        style={{\r\n          background: '#111',\r\n        }}\r\n      >\r\n        {/* LEFT SIDE */}\r\n        <div\r\n          className='user_collection__left'\r\n          style={{\r\n            height: viewingList && '250%',\r\n            marginBottom: viewingList && '25px',\r\n            display: isMobile && currentGame && 'none',\r\n          }}\r\n        >\r\n          <div className='user_collection__left_header'>\r\n            <h2>\r\n              <img\r\n                style={{\r\n                  height: '50px',\r\n                  width: '50px',\r\n                  borderRadius: '4px',\r\n                }}\r\n                src={activeProfile.avatar}\r\n              />\r\n              {activeProfile.name.trim()}'s Collection\r\n              <CiSquareMore\r\n                className='user_collection__upload_icon'\r\n                onClick={() => setViewingCSVDropdown(!viewingCSVDropdown)}\r\n              />\r\n              {viewingCSVDropdown && (\r\n                <div>\r\n                  <ul className='upload_dropdown_list'>\r\n                    <li>\r\n                      {' '}\r\n                      <input\r\n                        style={{ display: 'none' }}\r\n                        type='file'\r\n                        name='file'\r\n                        className='custom-file-input'\r\n                        id='inputGroupFile'\r\n                        required\r\n                        onChange={handleImport}\r\n                        accept='.csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel'\r\n                      />\r\n                      <label\r\n                        className='custom-file-label'\r\n                        htmlFor='inputGroupFile'\r\n                      >\r\n                        Import CSV\r\n                      </label>\r\n                    </li>\r\n                    <li onClick={handleExport}>Export CSV</li>\r\n                  </ul>\r\n                </div>\r\n              )}\r\n              <FaHome\r\n                className='user_collection__home_icon'\r\n                onClick={backToHome}\r\n              />\r\n            </h2>\r\n\r\n            <div className='user_collection__search'>\r\n              <FaSistrix className='user_collection__search_icon' />\r\n              <input\r\n                className='user_collection__search_input'\r\n                value={searchValue}\r\n                onChange={(e) => setSearchValue(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <ul\r\n            className='user_collection__title_list'\r\n            style={{\r\n              height: viewingList && '100%',\r\n              display: viewingList && 'flex',\r\n            }}\r\n          >\r\n            <p\r\n              className='user_collection__total'\r\n              style={{\r\n                color: 'white',\r\n                paddingLeft: '7px',\r\n                marginBottom: '5px',\r\n                position: 'fixed',\r\n                top: '132px',\r\n                left: '1px',\r\n                fontSize: '.95rem',\r\n                width: '100%',\r\n                height: '22px',\r\n                background:\r\n                  'linear-gradient(to right, rgba(25,25,25,.5) 0%,rgba(17,17,17,1) 46%,rgba(1,1,1,1) 50%,rgba(10,10,10,1) 53%,rgba(78,78,78,1) 76%,rgba(56,56,56,1) 87%,rgba(27,27,27,1) 100%)',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              {searchList.length <= 0 && searchValue == '' ? 'All' : 'Results'}{' '}\r\n              (\r\n              <span style={{ fontSize: '.75rem' }}>\r\n                {searchValue == '' ? collection.length : searchList.length}\r\n              </span>\r\n              )\r\n            </p>\r\n\r\n            {searchValue == '' ? (\r\n              collection\r\n                .sort((a, b) =>\r\n                  a.name > b.name ? 1 : b.name > a.name ? -1 : 0\r\n                )\r\n                .map((game) => (\r\n                  <li\r\n                    className='title_list__item'\r\n                    key={game.id}\r\n                    onClick={() => viewGameHandler(game)}\r\n                    onContextMenu={(e) => viewGameHeaders(e, game)}\r\n                    style={{\r\n                      background: currentGame?.id == game.id && '#9147ff',\r\n                      color: currentGame?.id == game.id && 'white',\r\n                    }}\r\n                  >\r\n                    {' '}\r\n                    <img src={game.cover_image} />\r\n                    <p>{game.name}</p>\r\n                    {game.name == activeProfile.favorite_game && (\r\n                      <FaStar className='list_item_favorite' />\r\n                    )}\r\n                    {showTitleMenu && (\r\n                      <ul\r\n                        onMouseEnter={(e) => e.stopPropagation(true)}\r\n                        className='user_collection__game_context'\r\n                        style={{\r\n                          top: anchorPoint.y,\r\n                          left: anchorPoint.x,\r\n                          zIndex: 6,\r\n                        }}\r\n                      >\r\n                        <li className='banner_context__item'>\r\n                          Add to Favorites\r\n                        </li>\r\n                        <li\r\n                          className='banner_context__item'\r\n                          onClick={(e) => removeGameHandler(e, game)}\r\n                        >\r\n                          Delete Game\r\n                        </li>\r\n                      </ul>\r\n                    )}\r\n                  </li>\r\n                ))\r\n            ) : searchList.length > 0 && searchValue != '' ? (\r\n              searchList.map((game) => (\r\n                <li\r\n                  className='title_list__item'\r\n                  key={game.id}\r\n                  onClick={() => viewGameHandler(game)}\r\n                >\r\n                  {' '}\r\n                  <img src={game.cover_image} />\r\n                  <p>{game.name}</p>\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <p\r\n                style={{\r\n                  color: 'white',\r\n                  fontSize: '3.2rem',\r\n                  position: 'absolute',\r\n                  top: '44%',\r\n                  left: '16px',\r\n                }}\r\n              >\r\n                No Matches\r\n              </p>\r\n            )}\r\n            <div className='user_collection__title_list_shadow' />\r\n            <div className='user_collection__title_list_shadow top_shadow' />\r\n          </ul>\r\n          <div className='user_collection__actions'>\r\n            <button className='persona_font' onClick={backToHome}>\r\n              Back\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* RIGHT SIDE */}\r\n        <div className='user_collection__right'>\r\n          {currentGame !== null && (\r\n            <>\r\n              <UserGame\r\n                game={currentGame}\r\n                activeProfile={activeProfile}\r\n                closeStats={() => setCurrentGame(null)}\r\n                setProfile={(profile) => setSelectedProfile(profile)}\r\n                setCurrentGame={(game) => setCurrentGame(game)}\r\n                updateCollection={updateCollection}\r\n                userNotes={userNotes}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {!currentGame && (\r\n            // SPOTLIGHT\r\n            <>\r\n              {!isMobile && (\r\n                <div className='user_collection__spotlight_wrapper'>\r\n                  <div className='spotlight_filters'>\r\n                    {/* MOST PLAYED, HIGHEST RATED, MOST ACHIEVEMENTS */}\r\n                    <h2 className='spotlight_filter'>\r\n                      {spotlightFilter == 'playtime'\r\n                        ? 'Most Played'\r\n                        : spotlightFilter == 'user_rating'\r\n                        ? 'Highest Rated'\r\n                        : 'Most Achievements'}{' '}\r\n                    </h2>\r\n                    <ul className='spotlight_filter__options'>\r\n                      <li\r\n                        onClick={() => setSpotlightFilter('playtime')}\r\n                        style={{\r\n                          color: spotlightFilter == 'playtime' && 'white',\r\n                        }}\r\n                      >\r\n                        Most Played\r\n                      </li>\r\n                      <li\r\n                        onClick={() => setSpotlightFilter('user_rating')}\r\n                        style={{\r\n                          color: spotlightFilter == 'user_rating' && 'white',\r\n                        }}\r\n                      >\r\n                        Highest Rated\r\n                      </li>\r\n                      <li\r\n                        onClick={() => setSpotlightFilter('achievements')}\r\n                        style={{\r\n                          color: spotlightFilter == 'achievements' && 'white',\r\n                        }}\r\n                      >\r\n                        Most Achievements\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className='user_collection__spotlight'>\r\n                    {spotlightList.slice(0, 3).map((top, i) => (\r\n                      <figure\r\n                        key={top.id}\r\n                        className='spotlight_container'\r\n                        onClick={() => viewGameHandler(top)}\r\n                      >\r\n                        <img\r\n                          className='spotlight_image'\r\n                          src={top.banner_url || top.cover_image}\r\n                        />\r\n                        <div className='spotlight_container__row'>\r\n                          <img\r\n                            className='spotlight_trophy_image'\r\n                            src={trophies[i]}\r\n                          />\r\n                          <figcaption className='spotlight_details'>\r\n                            <p>\r\n                              {spotlightFilter == 'playtime'\r\n                                ? `${Math.floor(top.playtime / 60)} hours`\r\n                                : spotlightFilter == 'user_rating'\r\n                                ? top.user_rating + '%'\r\n                                : 'ACHIEVE'}{' '}\r\n                            </p>\r\n                          </figcaption>\r\n                        </div>\r\n                      </figure>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* COVER LIST */}\r\n              <div className='user_collection__list_container'>\r\n                <div className='user_collection__list_filters'>\r\n                  <p style={{ marginBottom: '2px', fontSize: '1.5rem' }}>\r\n                    {listFilter == 'alphabetical'\r\n                      ? 'All Games'\r\n                      : listFilter == 'achievements'\r\n                      ? 'Achievements'\r\n                      : listFilter == 'playtime'\r\n                      ? 'Playtime'\r\n                      : listFilter == 'rating'\r\n                      ? 'Rating'\r\n                      : listFilter == 'status'\r\n                      ? 'Status'\r\n                      : 'Trophies'}\r\n                  </p>\r\n                  <ul className='user_collection__list_filters__list'>\r\n                    <li\r\n                      style={{ color: listFilter == 'alphabetical' && 'white' }}\r\n                      onClick={() => setListFilter('alphabetical')}\r\n                    >\r\n                      All\r\n                    </li>\r\n                    <span> | </span>\r\n                    <li\r\n                      style={{ color: listFilter == 'achievements' && 'white' }}\r\n                      onClick={() => setListFilter('achievements')}\r\n                    >\r\n                      Achievements\r\n                    </li>\r\n                    <span> | </span>\r\n\r\n                    <li\r\n                      style={{ color: listFilter == 'playtime' && 'white' }}\r\n                      onClick={() => setListFilter('playtime')}\r\n                    >\r\n                      Playtime\r\n                    </li>\r\n                    <span> | </span>\r\n\r\n                    <li\r\n                      style={{ color: listFilter == 'rating' && 'white' }}\r\n                      onClick={() => setListFilter('rating')}\r\n                    >\r\n                      Rating\r\n                    </li>\r\n                    <span> | </span>\r\n\r\n                    <li\r\n                      style={{ color: listFilter == 'status' && 'white' }}\r\n                      onClick={() => {\r\n                        setListFilter('status');\r\n                        setStatusFilter('backlog');\r\n                      }}\r\n                    >\r\n                      Status\r\n                    </li>\r\n                    <span> | </span>\r\n\r\n                    <li\r\n                      style={{ color: listFilter == 'trophies' && 'white' }}\r\n                      onClick={() => setListFilter('trophies')}\r\n                    >\r\n                      Trophies\r\n                    </li>\r\n                  </ul>\r\n                  {listFilter == 'status' && (\r\n                    <div\r\n                      className='user_collection__list_filters__list'\r\n                      style={{ margin: '0' }}\r\n                    >\r\n                      <ul\r\n                        className='user_collection__list_filters__list_status'\r\n                        style={{ flexDirection: 'row' }}\r\n                      >\r\n                        <li\r\n                          style={{\r\n                            color: statusFilter == 'backlog' && 'white',\r\n                          }}\r\n                          onClick={() => setStatusFilter('backlog')}\r\n                        >\r\n                          Backlog\r\n                        </li>\r\n                        <span> | </span>\r\n                        <li\r\n                          style={{\r\n                            color: statusFilter == 'started' && 'white',\r\n                          }}\r\n                          onClick={() => setStatusFilter('started')}\r\n                        >\r\n                          Started\r\n                        </li>\r\n                        <span> | </span>\r\n                        <li\r\n                          style={{\r\n                            color: statusFilter == 'playing' && 'white',\r\n                          }}\r\n                          onClick={() => setStatusFilter('playing')}\r\n                        >\r\n                          Playing\r\n                        </li>\r\n                        <span> | </span>\r\n                        <li\r\n                          style={{\r\n                            color: statusFilter == 'finished' && 'white',\r\n                          }}\r\n                          onClick={() => setStatusFilter('finished')}\r\n                        >\r\n                          Finished\r\n                        </li>\r\n                        <span> | </span>\r\n                        <li\r\n                          style={{\r\n                            color: statusFilter == '100%' && 'white',\r\n                          }}\r\n                          onClick={() => setStatusFilter('100%')}\r\n                        >\r\n                          100%\r\n                        </li>\r\n                        <span> | </span>\r\n                        <li\r\n                          style={{\r\n                            color: statusFilter == 'abandonded' && 'white',\r\n                          }}\r\n                          onClick={() => setStatusFilter('abandonded')}\r\n                        >\r\n                          Abandonded\r\n                        </li>\r\n                        <span> | </span>\r\n                        <li\r\n                          style={{\r\n                            color: statusFilter == 'not owned' && 'white',\r\n                          }}\r\n                          onClick={() => setStatusFilter('not owned')}\r\n                        >\r\n                          Not Owned\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <ul className='user_collection__list'>\r\n                  {!isMobile || (isMobile && searchValue == '')\r\n                    ? filteredList.map((game) => (\r\n                        <li\r\n                          className='list_item'\r\n                          key={game.id}\r\n                          onClick={() => viewGameHandler(game)}\r\n                        >\r\n                          <div className='user_collection__poster_container'>\r\n                            <div className='gradient' />\r\n                            <>\r\n                              {/* FRONT OF POSTER */}\r\n                              <div className='user_collection__poster_front'>\r\n                                <img\r\n                                  loading='lazy'\r\n                                  className='user_collection__poster'\r\n                                  src={game.cover_image}\r\n                                  alt={game.name}\r\n                                />\r\n                              </div>\r\n                            </>\r\n                          </div>\r\n                          {getFilterStat(game)}\r\n                        </li>\r\n                      ))\r\n                    : searchList.map((game) => (\r\n                        <li\r\n                          className='list_item'\r\n                          key={game.id}\r\n                          onClick={() => viewGameHandler(game)}\r\n                        >\r\n                          <div className='user_collection__poster_container'>\r\n                            <div className='gradient' />\r\n                            <>\r\n                              {/* FRONT OF POSTER */}\r\n                              <div className='user_collection__poster_front'>\r\n                                <img\r\n                                  loading='lazy'\r\n                                  className='user_collection__poster'\r\n                                  src={\r\n                                    isMobile\r\n                                      ? game.cover_image.replace(\r\n                                          'cover_big',\r\n                                          '1080p'\r\n                                        )\r\n                                      : game.cover_image\r\n                                  }\r\n                                  alt={game.name}\r\n                                />\r\n                              </div>\r\n                            </>\r\n                          </div>\r\n                        </li>\r\n                      ))}\r\n                </ul>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCollection;\r\n"],"names":["useState","x","y","anchorPoint","setAnchorPoint","showBannerMenu","setShowBannerMenu","showTitleMenu","setShowTitleMenu","handleContextMenu","useCallback","event","preventDefault","target","className","offsetX","pageY","movementX","handleClick","useEffect","document","addEventListener","removeEventListener","resetContext","note","closeNote","updateNote","deleteNote","noteValue","setNoteValue","date","onClick","value","onChange","e","today","Date","yyyy","getFullYear","mm","getMonth","dd","getDate","formattedToday","profile","windowViewHandler","viewStatus","gameNotes","baseURL","process","userEmail","localStorage","getItem","console","log","currentTab","setCurrentTab","editingTab","setEditingTab","tabValue","setTabValue","addingTab","setAddingTab","currentNote","setCurrentNote","noteTab","tabs","filter","item","tabName","notesRef","useRef","tabRef","tabEndRef","createNotes","axios","email","name","request","notesId","handleEnter","keyCode","window","current","focus","scrollIntoView","behavior","clearTimeout","timer","updateProfileNotes","userNotesId","noteId","id","notes","editTabHandler","innerText","tabFormSubmitHandler","push","style","transform","display","oldNote","newNote","updatedList","contentEditable","suppressContentEditableWarning","onBlur","onKeyPress","currentTarget","key","ref","borderBottom","userSelect","padding","transition","map","stopPropagation","setTimeout","onSubmit","length","viewNoteHandler","width","marginLeft","placeholder","game","activeProfile","closeStats","setCurrentGame","setProfile","setNotification","updateCollection","userNotes","useContextMenu","achievements","trophies","setViewStatus","setAchievements","setTrophies","achievementFilter","setAchievementFilter","trophyFilter","setTrophyFilter","currentGameNotes","setCurrentGameNotes","Math","floor","playtime","setPlaytime","changingPlaytime","setChangingPlaytime","user_rating","rating","setRating","changingRating","setChangingRating","changingBanner","setChangingBanner","bannerLink","setBannerLink","status","backlogStatus","setBacklogStatus","changingBacklog","setChangingBacklog","steamID","trophyPercentage","earned","achievementPercentage","achieved","notes_collection","g","handleEsc","getAchievementData","arr1","arr2","dataList","result","a1","displayName","sort","a","b","textA","toUpperCase","textB","fetchAppData","params","gameId","steamGameStats","Object","keys","data","steamId","userAchievementData","availableGameStats","currentProfile","addAchievements","response","collection","getAchievementCount","list","numberAchieved","updateRatingHandler","ratingValue","setItem","updatePlaytime","updateBacklog","updateBacklogHandler","updateBanner","trim","url","maxWidth","textAlign","marginBottom","top","left","src","banner_image","cover_image","replace","color","totalMinutes","type","minutes","hours","toString","padStart","toHoursAndMinutes","min","onKeyDown","paddingBottom","onMouseMove","bounds","getBoundingClientRect","clientX","totalStars","height","outlined","paddingTop","backgroundColor","alignItems","background","achievement","border","icon","icongray","description","trophy","trophyName","trophyIconUrl","trophyDetail","backToHome","setSelectedProfile","playTrack","currentTrack","isPlaying","pausePlayback","resumePlayback","spotifyToken","removeGame","searchValue","setSearchValue","searchList","setSearchList","viewingList","isMobile","setIsMobile","currentGame","currentlyAdjusting","setCurrentlyAdjusting","viewingCSVDropdown","setViewingCSVDropdown","spotlightList","setSpotlightList","spotlightFilter","setSpotlightFilter","listFilter","setListFilter","filteredList","setFilteredList","statusFilter","setStatusFilter","platinumTrophy","goldTrophy","bronzeTrophy","delaySearch","res","toLowerCase","includes","handleResize","innerWidth","viewGameHandler","getFilterStat","earnedTrophyCount","importUserCollection","borderRadius","avatar","required","$event","files","file","reader","FileReader","onload","wb","read","sheets","SheetNames","rows","utils","Sheets","readAsArrayBuffer","accept","htmlFor","ws","origin","skipHeader","writeFile","paddingLeft","position","fontSize","onContextMenu","viewGameHeaders","favorite_game","onMouseEnter","zIndex","removeGameHandler","slice","i","banner_url","margin","flexDirection","loading","alt"],"sourceRoot":""}