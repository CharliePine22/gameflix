{"version":3,"file":"static/js/865.019931d6.chunk.js","mappings":"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","sources":["components/LandingPage/NewUser/NewUser.js","components/LandingPage/LandingPage.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport defaultAvatar from '../../../assets/images/basic_avatar.png';\nimport { TwitterPicker } from 'react-color';\nimport axios from 'axios';\nimport './NewUser.css';\n\nconst NewUser = (props) => {\n  const baseURL = process.env.REACT_APP_BASE_URL;\n\n  const [currentStep, setCurrentStep] = useState(1);\n  const [error, setError] = useState(false);\n\n  // Color Picker States\n  const [color, setColor] = useState('#9147ff');\n\n  // Step 1 Refs\n  const [stepOneData, setStepOneData] = useState({});\n  const emailRef = useRef('');\n  const passwordRef = useRef('');\n  // Step 2 Refs\n  const [stepTwoData, setStepTwoData] = useState({});\n  const firstNameRef = useRef('');\n  const lastNameRef = useRef('');\n  // Step 3 Refs\n  const [imgFile, setImgFile] = useState(null);\n  const [imgPreview, setImgPreview] = useState(null);\n\n  const [loading, setLoading] = useState(false);\n\n  const fileUploadHandler = (e) => {\n    setImgPreview(URL.createObjectURL(e.target.files[0]));\n    setImgFile(e.target.files[0]);\n    console.log(e);\n  };\n\n  const colorChangeHandler = (color) => setColor(color);\n  console.log(color);\n\n  // Handler to go back and edit forms in previous steps\n  const backStepHandler = () => {\n    setColor('#9147ff');\n    setCurrentStep(currentStep - 1);\n    if (error) setError(false);\n  };\n\n  useEffect(() => {\n    if (error && emailRef.current) emailRef.current.focus();\n  }, []);\n\n  const validateEmail = (data) => {\n    let flag = false;\n    const request = axios\n      .post(`${baseURL}/authentication/signup`, data)\n      .then((response) => {\n        console.log(response);\n        return response;\n      })\n      .catch((e) => {\n        setError(e.response.data.message);\n        flag = true;\n      });\n\n    return request;\n  };\n\n  const formSubmitHandler = async (e) => {\n    e.preventDefault();\n    setError(false);\n    // Go throuh the steps until user gets to last step (3), then submit data\n    // Step 1\n    if (currentStep == 1) {\n      const email = emailRef.current.value.trim();\n      const password = passwordRef.current.value.trim();\n      if (email == '' || !email.includes('@')) {\n        setError('Please enter a valid email');\n      } else if (password == '' || password.length < 7) {\n        setError('Please enter a valid password that is 7 characters or more!');\n      } else {\n        setStepOneData({ email, password });\n        setCurrentStep(currentStep + 1);\n        setError(false);\n      }\n    }\n    // Step 2\n    else if (currentStep == 2) {\n      const firstName = firstNameRef.current.value;\n      const lastName = lastNameRef.current.value;\n      if (firstName.trim() == '' || lastName.trim() == '') {\n        setError(\"Please don't leave name fields empty!\");\n      } else {\n        setStepTwoData({ firstName, lastName });\n        setCurrentStep(currentStep + 1);\n        setError(false);\n      }\n    }\n    // Step 3\n    else {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append('firstName', stepTwoData.firstName);\n      formData.append('lastName', stepTwoData.lastName);\n      formData.append('email', stepOneData.email);\n      formData.append('password', stepOneData.password);\n      formData.append('color', color.hex);\n      formData.append('avatar', imgFile ? imgFile : defaultAvatar);\n\n      const result = await validateEmail(formData);\n      console.log(imgFile);\n      if (\n        !result &&\n        imgFile !== null &&\n        (imgFile.type.split('/')[1] == 'mp4' || imgFile.type == '')\n      ) {\n        setError(\n          'Invalid file type not supported, please use a valid PNG, JPG, JPEG, GIF, or ICO file.'\n        );\n        setLoading(false);\n        return;\n      } else if (!error && result && !result.data.message) {\n        localStorage.setItem('user', result.data.email);\n        window.location.reload();\n      } else {\n        setLoading(false);\n        console.log(result);\n        setCurrentStep(1);\n        setError(null);\n        return;\n      }\n    }\n  };\n\n  return (\n    <div className='new_user__page'>\n      <div className='new_user__header'>\n        <h1 className='header_brand' onClick={() => props.returnToLanding()}>\n          GAMEFLIX\n        </h1>\n        <button className='header_btn' onClick={props.toLoginHandler}>\n          Sign In\n        </button>\n      </div>\n\n      <div className='new_user__forms_container'>\n        <div className='new_user__forms'>\n          {!loading && (\n            <p className='forms_step'>\n              STEP <span className='bold'>{currentStep}</span> OF{' '}\n              <span className='bold'>3</span>\n            </p>\n          )}\n          {!loading && (\n            <>\n              <div className='forms_info'>\n                <h1 className='info_title'>\n                  {currentStep == 1\n                    ? 'Start now by creating an account to gain acess to your personal collection of games!'\n                    : currentStep == 2\n                    ? 'Tell us a little more about yourself, enter your first and last name in the boxes below!'\n                    : 'Click the image below to set your profile picture and select your favorite color!'}\n                </h1>\n              </div>\n              <form\n                className='new_user__form'\n                style={{ alignItems: currentStep >= 3 && 'center' }}\n                onSubmit={formSubmitHandler}\n                encType='multipart/form-data'\n              >\n                {/* STEP ONE INPUTS */}\n                {currentStep == 1 && (\n                  <>\n                    <input\n                      ref={emailRef}\n                      className={`form_text_input ${error && 'input_error'}`}\n                      type='email'\n                      onBlur={() => error && setError(null)}\n                      defaultValue={!error ? props.email : stepOneData.email}\n                    />\n                    <span className='form_placeholder__email'>Email</span>\n                    {error && <p className='user_email_error'>{error}</p>}\n                    <input\n                      ref={passwordRef}\n                      className='form_text_input'\n                      type='password'\n                    />\n                    <span className='form_placeholder__password'>Password</span>\n                  </>\n                )}\n                {/* STEP TWO INPUTS */}\n                {currentStep == 2 && (\n                  <>\n                    <input\n                      ref={firstNameRef}\n                      defaultValue={stepTwoData?.firstName}\n                      className='form_text_input'\n                    />\n                    {error && <p className='step_two__error'>{error}</p>}\n                    <span className='form_placeholder__first_name'>\n                      First Name\n                    </span>\n                    <input\n                      ref={lastNameRef}\n                      defaultValue={stepTwoData?.lastName}\n                      className='form_text_input'\n                    />\n                    <span className='form_placeholder__last_name'>\n                      Last Name\n                    </span>\n                  </>\n                )}\n                {/* STEP THREE INPUTS */}\n                {currentStep >= 3 && (\n                  <>\n                    {error && <p className='form_file_error'>{error}</p>}\n                    <div className='form_file_container'>\n                      <div\n                        className='form_file'\n                        style={{\n                          backgroundImage: `url(${\n                            imgFile == null ? defaultAvatar : imgPreview\n                          })`,\n                          backgroundSize: 'contain',\n                          backgroundPosition: 'center center',\n                          backgroundColor: color.hex,\n                        }}\n                      >\n                        <input\n                          onChange={fileUploadHandler}\n                          className='form_file_input'\n                          type='file'\n                        />\n                        {/* <img srsc={imgPreview} /> */}\n                      </div>\n                      <div className='color_picker_container'>\n                        <TwitterPicker\n                          color={color}\n                          onChangeComplete={colorChangeHandler}\n                        />\n                      </div>\n                    </div>\n                  </>\n                )}\n                <button\n                  className='form_actions_btn'\n                  type='submit'\n                  style={{ width: currentStep == 3 && '52%' }}\n                >\n                  {currentStep !== 3 ? 'Next' : 'Submit'}\n                </button>\n                {currentStep !== 1 && (\n                  <button\n                    type='button'\n                    onClick={backStepHandler}\n                    className='form_back_btn'\n                  >\n                    Back\n                  </button>\n                )}\n              </form>\n            </>\n          )}\n          {loading && (\n            <div className='new_user__loading'>\n              <div className='new_user__spinner' />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NewUser;\n","import React, { useEffect, useState, useRef } from 'react';\n// File Imports\nimport './LandingPage.css';\n// Package Imports\nimport axios from 'axios';\nimport { FaAngleRight } from 'react-icons/fa';\nimport ReactPlayer from 'react-player/lazy';\n// Asset Imports\nimport pcScreen from '../../assets/images/computer_screen.png';\nimport demoVideo from '../../assets/videos/gameflix-demo.webm';\nimport tvScreen from '../../assets/images/retro-tv.png';\nimport ff7Cloud from '../../assets/images/ff7-cloud.png';\nimport mario from '../../assets/images/mario.png';\nimport masterChief from '../../assets/images/master-chief.png';\nimport lozLink from '../../assets/images/loz-link.png';\nimport spyro from '../../assets/images/spyro.png';\nimport sonic from '../../assets/images/sonic.png';\nimport logos from '../../assets/images/console-logos.jpg';\nimport NewUser from './NewUser/NewUser';\n\nconst LandingPage = ({ toSignIn, images }) => {\n  const baseURL = process.env.REACT_APP_BASE_URL;\n  const [error, setError] = useState(null);\n  const [inputFocused, setInputFocused] = useState(false);\n  const [creatingNewUser, setCreatingNewUser] = useState(false);\n  document.body.style.overflow = 'auto';\n  const signUpRef = useRef('');\n  // Regex for email validity\n  const re =\n    /^(([^ <>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  // If there is a value in the input field, leave placeholder above value\n  const inputBlurHandler = () => {\n    if (signUpRef.current.value !== '') {\n      return;\n    } else {\n      setInputFocused(setInputFocused(false));\n    }\n  };\n\n  const toLoginHandler = () => {\n    toSignIn();\n  };\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    const email = signUpRef.current.value.toLowerCase().trim();\n    if (email == '') {\n      setError('Please enter a valid email.');\n      return;\n    }\n    axios\n      .post(`${baseURL}/authentication/email_verification`, { email })\n      .then((response) => {\n        setCreatingNewUser(true);\n        setInputFocused(false);\n      })\n      .catch((e) => {\n        setError(e.response.data.message);\n        signUpRef.current.blur();\n      });\n\n    // signUpRef.current.value = '';\n  };\n\n  const toWelcomeScreen = (email, password) => {\n    // .loginAuthentication(email, password);\n    // toSignIn();\n  };\n\n  const inputFocusHandler = () => {\n    setInputFocused(true);\n    if (error) {\n      signUpRef.current.value = '';\n      setError(null);\n    }\n  };\n\n  if (creatingNewUser && !error) {\n    return (\n      <NewUser\n        toWelcomeScreen={toWelcomeScreen}\n        email={signUpRef.current?.value}\n        returnToLanding={() => setCreatingNewUser(false)}\n        toLoginHandler={toLoginHandler}\n      />\n    );\n  }\n\n  return (\n    <div className='landing_page'>\n      {/* BANNER */}\n      <div className='landing_banner'>\n        <div className='landing_banner__fade_top' />\n        <div className='landing_nav'>\n          <div className='nav_left'>\n            <h3 className='nav_badge'>GAMEFLIX</h3>\n          </div>\n          <div className='nav_right'>\n            <button className='sign_in_btn' onClick={toLoginHandler}>\n              Sign In\n            </button>\n          </div>\n        </div>\n        <div className='landing_banner__content'>\n          <h1>\n            Looking for a big title, a taste of nostalgia, or a hidden gem?\n          </h1>\n          <h3>Watch trailers. Listen to OSTs.</h3>\n          <p>\n            Discover your favorites plus thousands more! Enter your email to get\n            started.\n          </p>\n          <form className='landing__form' onSubmit={formSubmitHandler}>\n            <input\n              type='email'\n              className={`landing__email ${error && 'email_error'}`}\n              ref={signUpRef}\n              onFocus={inputFocusHandler}\n              onBlur={inputBlurHandler}\n            />\n            <span\n              className={`email_placeholder ${inputFocused && 'email_focused'}`}\n            >\n              Email address\n            </span>\n            {error && <p className='sign_up_error'>{error}</p>}\n            <button>\n              Get Started <FaAngleRight className='btn_arrow' />\n            </button>\n          </form>\n        </div>\n        <div className='landing_banner__background'>\n          {images.map((game) => (\n            <React.Fragment key={game.key}>\n              <img\n                className='landing_banner__img'\n                src={game.props.children.props.src}\n              />\n            </React.Fragment>\n          ))}\n        </div>\n        <div className='landing_banner__fade_bottom' />\n      </div>\n      {/* DEMO */}\n      <div className='landing__demo'>\n        <div className='demo_left'>\n          <h1 className='demo_left_title'>Endless Choices</h1>\n          <p className='demo_left_description'>\n            Endless titles. Endless hours. Endless oppurtunities.\n          </p>\n        </div>\n        <div className='demo_right'>\n          <div className='demo_video_container'>\n            <ReactPlayer\n              url={demoVideo}\n              className='demo_video'\n              playing={true}\n              muted={true}\n              loop={true}\n            />\n          </div>\n          <img src={pcScreen} className='demo_pc_img' />\n        </div>\n      </div>\n      {/* RETRO */}\n      <div className='landing__information'>\n        <div className='information_left'>\n          <img src={tvScreen} className='information_tv_img' />\n          <div className='information_characters'>\n            <img className='chief-img' src={masterChief} />\n            <img className='cloud-img' src={ff7Cloud} />\n            <img className='mario-img' src={mario} />\n            <img className='link-img' src={lozLink} />\n            <img className='spyro-img' src={spyro} />\n            <img className='sonic-img' src={sonic} />\n          </div>\n        </div>\n        <div className='information_right'>\n          <h1 className='information_right_title'>\n            Reexperience your Childhood\n          </h1>\n          <p className='information_right_description'>\n            Rediscover lost loves and relive your nostalgic glory days.\n          </p>\n        </div>\n      </div>\n      {/* PROFILE */}\n      <div className='landing__profiles'>\n        <div className='profiles__left'>\n          <h1 className='profiles__left_title'>Gaming your Way</h1>\n          <p className='profiles__left_description'>\n            Discover multiple games from your favorite genres, publishers, or\n            consoles.\n          </p>\n        </div>\n        <div className='profiles__right'>\n          <img\n            className='profiles__logo_collection'\n            src={logos}\n            alt='a collection of different video game console logos'\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LandingPage;\n"],"names":["props","useState","currentStep","setCurrentStep","error","setError","color","setColor","stepOneData","setStepOneData","emailRef","useRef","passwordRef","stepTwoData","setStepTwoData","firstNameRef","lastNameRef","imgFile","setImgFile","imgPreview","setImgPreview","loading","setLoading","console","log","useEffect","current","focus","formSubmitHandler","e","preventDefault","email","value","trim","password","includes","length","firstName","lastName","formData","FormData","append","hex","defaultAvatar","data","axios","process","then","response","catch","message","result","type","split","localStorage","setItem","window","location","reload","className","onClick","returnToLanding","toLoginHandler","style","alignItems","onSubmit","encType","ref","onBlur","defaultValue","backgroundImage","backgroundSize","backgroundPosition","backgroundColor","onChange","URL","createObjectURL","target","files","onChangeComplete","width","toSignIn","images","inputFocused","setInputFocused","creatingNewUser","setCreatingNewUser","document","body","overflow","signUpRef","toWelcomeScreen","toLowerCase","blur","onFocus","map","game","src","children","key","url","demoVideo","playing","muted","loop","pcScreen","tvScreen","masterChief","ff7Cloud","mario","lozLink","spyro","sonic","alt"],"sourceRoot":""}