{"version":3,"file":"static/js/749.829e4f79.chunk.js","mappings":"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","sources":["components/Login/Login.js","components/Authentication/Authentication.js","hooks/useFetchPopular.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './Login.css';\r\n\r\nconst Login = ({ toLanding, authenticateUser, images }) => {\r\n  // States\r\n  const [hasEmailError, setHasEmailError] = useState(false);\r\n  const [hasPasswordError, setHasPasswordError] = useState(false);\r\n  const [currentFocus, setCurrentFocus] = useState(null);\r\n  const [authError, setAuthError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [done, setDone] = useState(false);\r\n  const imageRef = useRef(0);\r\n\r\n  document.body.style.overflow = 'hidden';\r\n\r\n  const imageLoadHandler = () => {\r\n    imageRef.current += 1;\r\n    if (imageRef.current == 100) setDone(true);\r\n  };\r\n\r\n  // Refs\r\n  const emailRef = useRef('');\r\n  const passwordRef = useRef('');\r\n\r\n  // Regex for email validity\r\n  const re =\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n  // Email input error change error handler\r\n  const checkEmailValidity = (e) => {\r\n    if (hasEmailError) setHasEmailError(false);\r\n    const value = e.target.value.trim().toLowerCase();\r\n    const isValidEmail = re.test(value);\r\n  };\r\n\r\n  // Email input error blur error handler\r\n  const emailBlurHandler = (e) => {\r\n    const value = e.target.value.trim().toLowerCase();\r\n    const isValidEmail = re.test(value);\r\n    setHasEmailError(!isValidEmail);\r\n    setCurrentFocus(null);\r\n  };\r\n\r\n  // Password input error change error handler\r\n  const checkPasswordValidity = (e) => {\r\n    if (hasPasswordError) setHasPasswordError(false);\r\n    const value = e.target.value.trim().toLowerCase();\r\n    const isValidPassword =\r\n      e.target.value.length > 0 && e.target.value.length <= 8;\r\n  };\r\n\r\n  // Password input error blur error handler\r\n  const passwordBlurHandler = (e) => {\r\n    const value = e.target.value.trim().toLowerCase();\r\n    const isValidPassword = value.length > 3 && value.length <= 8;\r\n    setHasPasswordError(!isValidPassword);\r\n    setCurrentFocus(null);\r\n  };\r\n\r\n  const toLandingPage = () => {\r\n    toLanding();\r\n  };\r\n\r\n  // Submit user information to match authentication\r\n  const formSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    // Data values\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n    emailRef.current.blur();\r\n    passwordRef.current.blur();\r\n    setCurrentFocus('');\r\n    const response = await authenticateUser(email, password);\r\n    if (!response.data) setAuthError(response);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='login__wrapper'\r\n      // style={{ display: done ? 'flex' : 'none' }}\r\n    >\r\n      <div className='login'>\r\n        <div className='login__form_wrapper'>\r\n          <div className='login__form_container'>\r\n            <form className='login__form' onSubmit={formSubmitHandler}>\r\n              {!loading ? (\r\n                <>\r\n                  <h1>Sign In</h1>\r\n                  <div className='login__form_actions'>\r\n                    <label className='form_label' htmlFor='email' />\r\n                    <input\r\n                      ref={emailRef}\r\n                      onFocus={() => setCurrentFocus('email')}\r\n                      onChange={checkEmailValidity}\r\n                      onBlur={emailBlurHandler}\r\n                      className={`form_input ${\r\n                        emailRef.current?.value !== '' && hasEmailError\r\n                          ? 'error'\r\n                          : ''\r\n                      }`}\r\n                      type='email'\r\n                    />\r\n                    <span\r\n                      className={`form_actions_placeholder ${\r\n                        emailRef.current?.value || currentFocus == 'email'\r\n                          ? 'focused'\r\n                          : ''\r\n                      }`}\r\n                    >\r\n                      Email\r\n                    </span>\r\n                  </div>\r\n                  <div className='login__form_actions'>\r\n                    <label className='form_label' htmlFor='email' />\r\n                    <input\r\n                      ref={passwordRef}\r\n                      onFocus={() => setCurrentFocus('password')}\r\n                      onChange={checkPasswordValidity}\r\n                      onBlur={passwordBlurHandler}\r\n                      className={`form_input ${\r\n                        passwordRef.current?.value !== undefined &&\r\n                        hasPasswordError &&\r\n                        passwordRef.current.value.length > 0\r\n                          ? 'error'\r\n                          : ''\r\n                      }`}\r\n                      type='password'\r\n                    />\r\n                    <span\r\n                      className={`form_actions_placeholder ${\r\n                        passwordRef.current?.value || currentFocus == 'password'\r\n                          ? 'password_focused'\r\n                          : ''\r\n                      }`}\r\n                    >\r\n                      Password\r\n                    </span>\r\n                    {authError && (\r\n                      <p className='login__auth_error'>{authError}</p>\r\n                    )}\r\n                  </div>\r\n                  <button className='form__submit_btn'>Sign In</button>\r\n                  <p className='form__create_account'>\r\n                    Don't have an account?{' '}\r\n                    <span onClick={toLandingPage}>Create one now</span>.\r\n                  </p>\r\n                </>\r\n              ) : (\r\n                <div className='login__loading'>\r\n                  <div className='loading_spinner' />\r\n                </div>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className='login__background'\r\n        // style={{ display: done ? '' : 'none' }}\r\n      >\r\n        {images.map((game) => (\r\n          <React.Fragment key={game.key}>\r\n            <img\r\n              className='login__img'\r\n              alt={game.name}\r\n              src={game.props.children.props.src}\r\n              // onLoad={imageLoadHandler}\r\n            />\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect, useRef, lazy, Suspense } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Login from '../Login/Login';\r\nimport './Authentication.css';\r\nimport axios from 'axios';\r\nimport useFetchPopular from '../../hooks/useFetchPopular';\r\nconst LandingPage = lazy(() => import('../LandingPage/LandingPage'));\r\n\r\nconst Authentication = ({ onLogin }) => {\r\n  const allGames = useFetchPopular();\r\n  const [imgsLoading, setImgsLoading] = useState(true);\r\n  const [toLandingPage, setToLandingPage] = useState(false);\r\n  const userLoggedIn = localStorage.getItem('user');\r\n  const navigate = useNavigate();\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const counter = useRef(0);\r\n\r\n  useEffect(() => {\r\n    if (userLoggedIn) navigate('/');\r\n  }, []);\r\n\r\n  useEffect(() => {});\r\n\r\n  const imageLoaded = () => {\r\n    counter.current += 1;\r\n    if (counter.current >= allGames.length) {\r\n      setImgsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadedImages = allGames?.map((game) => (\r\n    <React.Fragment key={game.id}>\r\n      <img\r\n        className='login__img'\r\n        src={`//images.igdb.com/igdb/image/upload/t_cover_big_2x/${game.cover.image_id}.jpg`}\r\n        onLoad={imageLoaded}\r\n      />\r\n    </React.Fragment>\r\n  ));\r\n\r\n  const authenticateUser = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(`${baseURL}/authentication/signin`, {\r\n        email,\r\n        password,\r\n      });\r\n      onLogin(response.data.user);\r\n      return response;\r\n    } catch (e) {\r\n      return e.response.data.message;\r\n    }\r\n  };\r\n\r\n  if (loadedImages.length == 100 && !userLoggedIn) {\r\n    if (!toLandingPage)\r\n      return (\r\n        <Login\r\n          images={loadedImages}\r\n          toLanding={() => setToLandingPage(true)}\r\n          authenticateUser={(email, password) =>\r\n            authenticateUser(email, password)\r\n          }\r\n        />\r\n      );\r\n\r\n    return (\r\n      <Suspense fallback={<>...</>}>\r\n        <LandingPage\r\n          toSignIn={() => {\r\n            setToLandingPage(false);\r\n          }}\r\n          images={loadedImages}\r\n        />\r\n      </Suspense>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className='auth_login__loading'>\r\n        <div className='auth_loading_spinner' />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Authentication;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function useFetchPopular() {\r\n  const existingToken = localStorage.getItem('twitch_auth');\r\n  const [bannerGamesList, setBannerGamesList] = useState([]);\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const currentDate = new Date();\r\n\r\n  useEffect(() => {\r\n    const fetchPopularGames = async () => {\r\n      const request = await axios.get(`${baseURL}/authentication/login_banner`);\r\n      const last_updated = new Date(request.data.last_updated);\r\n\r\n      // If a week has passed since the last update, run a new update\r\n      if (currentDate > last_updated.setDate(last_updated.getDate() + 7)) {\r\n        updatePopularGamesAPI();\r\n        return;\r\n      } else {\r\n        setBannerGamesList(request.data.popular_games_list);\r\n        return;\r\n      }\r\n    };\r\n    fetchPopularGames();\r\n\r\n    const updatePopularGamesAPI = async () => {\r\n      if (!existingToken) return;\r\n      try {\r\n        const request = await axios.post(`${baseURL}/app/popular_titles`, {\r\n          token: existingToken,\r\n        });\r\n        return updateCollection(request.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n        return err;\r\n      }\r\n    };\r\n  }, [existingToken]);\r\n\r\n  const updateCollection = async (list) => {\r\n    const request = await axios.post(\r\n      `${baseURL}/authentication/update_login_banner`,\r\n      {\r\n        gameList: list,\r\n        date: new Date(),\r\n      }\r\n    );\r\n\r\n    setBannerGamesList(request.data.popular_games_list);\r\n  };\r\n\r\n  return bannerGamesList;\r\n}\r\n"],"names":["toLanding","authenticateUser","images","useState","hasEmailError","setHasEmailError","hasPasswordError","setHasPasswordError","currentFocus","setCurrentFocus","authError","setAuthError","loading","setLoading","useRef","document","body","style","overflow","emailRef","passwordRef","re","formSubmitHandler","e","preventDefault","email","current","value","password","blur","response","data","className","onSubmit","htmlFor","ref","onFocus","onChange","target","trim","toLowerCase","test","onBlur","isValidEmail","type","length","isValidPassword","undefined","onClick","map","game","alt","name","src","props","children","key","LandingPage","lazy","onLogin","allGames","existingToken","localStorage","getItem","bannerGamesList","setBannerGamesList","baseURL","process","currentDate","Date","useEffect","fetchPopularGames","axios","request","last_updated","setDate","getDate","updatePopularGamesAPI","popular_games_list","token","updateCollection","console","log","list","gameList","date","useFetchPopular","setImgsLoading","toLandingPage","setToLandingPage","userLoggedIn","navigate","useNavigate","counter","imageLoaded","loadedImages","cover","image_id","onLoad","id","user","message","Suspense","fallback","toSignIn"],"sourceRoot":""}