{"version":3,"file":"static/js/331.2ac44c42.chunk.js","mappings":"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","sources":["hooks/useContextMenu.js","components/UserGame/NoteDetails.js","components/UserGame/UserNotes.js","components/UserGame/UserGame.js","components/UserCollectionPage/UserCollection.js"],"sourcesContent":["import { useEffect, useCallback, useState } from 'react';\n\nconst useContextMenu = () => {\n  const [anchorPoint, setAnchorPoint] = useState({ x: 0, y: 0 });\n  const [showBannerMenu, setShowBannerMenu] = useState(false);\n  const [showTitleMenu, setShowTitleMenu] = useState(false);\n  const handleContextMenu = useCallback(\n    (event) => {\n      event.preventDefault();\n      if (\n        event.target.className === 'user_game_banner_img' &&\n        !showBannerMenu\n      ) {\n        setAnchorPoint({ x: event.offsetX, y: event.pageY });\n        setShowBannerMenu(true);\n        setShowTitleMenu(false);\n      }\n      if (event.target.className === 'title_list__item') {\n        setAnchorPoint({ x: event.movementX + 5, y: event.y + 20 });\n        setShowTitleMenu(true);\n        setShowBannerMenu(false);\n      }\n    },\n    [setAnchorPoint]\n  );\n\n  const handleClick = useCallback(() => {\n    if (showTitleMenu) setShowTitleMenu(false);\n    if (showBannerMenu) setShowBannerMenu(false);\n  }, [showTitleMenu, showBannerMenu]);\n\n  const resetContext = () => {\n    setShowBannerMenu(false);\n    setShowTitleMenu(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick);\n    document.addEventListener('contextmenu', handleContextMenu);\n    return () => {\n      document.removeEventListener('click', handleClick);\n      document.removeEventListener('contextmenu', handleContextMenu);\n    };\n  });\n  return { anchorPoint, showTitleMenu, showBannerMenu, resetContext };\n};\n\nexport default useContextMenu;\n","import React, { useState } from 'react';\nimport './UserNotes.css';\nimport { BsArrowLeft } from 'react-icons/bs';\n\nconst NoteDetails = ({ note, closeNote, updateNote, deleteNote }) => {\n  const [noteValue, setNoteValue] = useState(note.note);\n\n  return (\n    <div className='note_details__container'>\n      <span className='note_details__date'>{note.date}</span>\n      <BsArrowLeft className='note_details__back_icon' onClick={closeNote} />\n      <div className='note_details__details'>\n        <h4 className='note_details_note'>Note Details</h4>\n        <textarea\n          value={noteValue}\n          onChange={(e) => setNoteValue(e.target.value)}\n          className='note_details__editor'\n        />\n      </div>\n      <div className='note_details__actions'>\n        <button onClick={() => updateNote(note, noteValue)}>Save Note</button>\n        <button onClick={() => deleteNote(note.note)}>Delete Note</button>\n      </div>\n    </div>\n  );\n};\n\nexport default NoteDetails;\n","import React, { useState, useEffect, useRef } from 'react';\nimport './UserNotes.css';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { MdEditNote } from 'react-icons/md';\nimport { FaAngleDown } from 'react-icons/fa';\nimport NoteDetails from './NoteDetails';\n\n// Get current date and format it\nconst today = new Date();\nconst yyyy = today.getFullYear();\nlet mm = today.getMonth() + 1; // Months start at 0!\nlet dd = today.getDate();\nif (dd < 10) dd = '0' + dd;\nif (mm < 10) mm = '0' + mm;\nconst formattedToday = mm + '/' + dd + '/' + yyyy;\n\nconst UserGameNotes = ({\n  windowViewHandler,\n  viewStatus,\n  gameNotes,\n  updateNotes,\n}) => {\n  // Tab Hooks\n  const [currentTab, setCurrentTab] = useState('');\n  const [editingTab, setEditingTab] = useState(false);\n  const [tabValue, setTabValue] = useState('');\n  const [addingTab, setAddingTab] = useState(false);\n  const [addingNote, setAddingNote] = useState(false);\n  // Note Hooks\n  const [noteValue, setNoteValue] = useState('');\n  const [currentNote, setCurrentNote] = useState(null);\n  let noteTab = gameNotes?.tabs?.filter(\n    (item) => item.tabName == currentTab\n  )[0];\n  const notesRef = useRef(null);\n  const tabRef = useRef(null);\n  const tabEndRef = useRef(null);\n\n  useEffect(() => {\n    if (!gameNotes) return;\n    setCurrentTab(gameNotes?.tabs[0]?.tabName);\n  }, [gameNotes]);\n\n  useEffect(() => {\n    if (currentNote !== null) return;\n    tabRef.current.focus();\n    setEditingTab(false);\n    setNoteValue('');\n    setTabValue('');\n  }, [tabRef, noteTab]);\n\n  useEffect(() => {\n    if (!addingNote) return;\n    notesRef.current.scrollIntoView({ behavior: 'smooth' });\n    setAddingNote(false);\n    return () => clearTimeout(timer);\n  }, [addingNote]);\n\n  const editTabHandler = () => {\n    if (!editingTab) {\n      setEditingTab(true);\n    } else {\n      if (tabRef.current.innerText == '' || tabRef.current.innerText == '/n') {\n        console.log('EMPTY');\n        noteTab.tabName = 'Notes';\n        return;\n      } else {\n        noteTab.tabName = tabRef.current.innerText;\n      }\n      updateNotes();\n      setCurrentTab(tabRef.current.innerText);\n      setEditingTab(false);\n    }\n  };\n\n  let timer;\n  const addTabHandler = (e) => {\n    e.stopPropagation();\n    setAddingTab(true);\n    timer = setTimeout(\n      () => tabEndRef.current.scrollIntoView({ behavior: 'smooth' }),\n      150\n    );\n  };\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    if (noteValue == '') return;\n    setAddingNote(true);\n    noteTab.notes.push({\n      id: noteTab.notes.length + 1,\n      note: noteValue,\n      date: formattedToday,\n    });\n    updateNotes();\n    setNoteValue('');\n  };\n\n  const tabFormSubmitHandler = async (e) => {\n    e.preventDefault();\n    if (tabValue == '') return;\n    gameNotes.tabs.push({\n      tabName: tabValue,\n      notes: [],\n    });\n    setCurrentTab(tabValue);\n    updateNotes();\n    setTabValue('');\n    setAddingTab(false);\n  };\n\n  const viewNoteHandler = (note) => {\n    setCurrentNote(note);\n    setAddingTab(false);\n    setEditingTab(false);\n  };\n\n  const saveNoteHandler = (oldNote, newNote) => {\n    oldNote.note = newNote;\n    oldNote.date = formattedToday;\n    updateNotes();\n\n    setCurrentNote(null);\n  };\n\n  const deleteNoteHandler = (note) => {\n    const updatedList = noteTab.notes.filter((item) => item.note !== note);\n    noteTab.notes = updatedList;\n    updateNotes();\n\n    setCurrentNote(null);\n  };\n\n  return (\n    <div\n      className={`user_notes__wrapper ${\n        !viewStatus.notes && 'minimized_notes'\n      }`}\n    >\n      <FaAngleDown\n        style={{\n          transform: !viewStatus.notes ? 'rotate(0)' : 'rotate(180deg)',\n          display: currentNote && 'none',\n        }}\n        className='user_game__minimize_icon'\n        onClick={() => windowViewHandler('notes')}\n      />\n      {currentNote ? (\n        <NoteDetails\n          note={currentNote}\n          closeNote={() => setCurrentNote(null)}\n          updateNote={saveNoteHandler}\n          deleteNote={deleteNoteHandler}\n        />\n      ) : (\n        <>\n          <>\n            <h4\n              contentEditable={editingTab}\n              suppressContentEditableWarning={true}\n              onBlur={editTabHandler}\n              // onKeyPress={(e) => {\n              //   e.preventDefault();\n              //   console.log(e.currentTarget);\n              //   if (e.key === 'Enter') editTabHandler();\n              // }}\n              onKeyDown={(e) => {\n                e.preventDefault();\n                // setTabValue(e.currentTarget.innerText);\n                console.log(e.currentTarget.innerText);\n                if (e.key === 'Enter') editTabHandler();\n              }}\n            >\n              <p\n                ref={tabRef}\n                style={{\n                  borderBottom: editingTab\n                    ? '2px solid #9147ff'\n                    : '2px solid transparent',\n                  userSelect: editingTab ? 'auto' : 'none',\n                  padding: '14px 6px 0',\n                  transition: 'all 200ms',\n                  lineHeight: '28px',\n                }}\n              >\n                {currentTab}\n              </p>{' '}\n              <MdEditNote\n                className='edit_tab_icon'\n                onClick={() => setEditingTab(!editingTab)}\n              />{' '}\n            </h4>\n            <div className='user_notes__header'>\n              <ul className='user_notes__tabs'>\n                {gameNotes?.tabs.map((item) => (\n                  <li\n                    key={item.tabName}\n                    className='user_notes__tab'\n                    onClick={() => setCurrentTab(item.tabName)}\n                    style={{\n                      borderBottom:\n                        currentTab == item.tabName && '1px solid transparent',\n                    }}\n                  >\n                    {item.tabName}\n                  </li>\n                ))}\n                <li\n                  className={`user_notes__tab ${\n                    addingTab ? 'add_tab' : 'new_tab'\n                  }`}\n                  // onClick={() => !addingTab && setAddingTab(true)}\n                  onClick={addTabHandler}\n                >\n                  {!addingTab ? (\n                    <AiOutlinePlus />\n                  ) : (\n                    <div className='new_tab__container'>\n                      <form onSubmit={tabFormSubmitHandler}>\n                        <input\n                          value={tabValue}\n                          onChange={(e) => setTabValue(e.target.value)}\n                        />\n                      </form>\n                      <p\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          setAddingTab(false);\n                        }}\n                      >\n                        X\n                      </p>\n                    </div>\n                  )}\n                </li>\n                <div ref={tabEndRef} />\n              </ul>\n            </div>\n          </>\n          <div className='user_notes__notes_wrapper'>\n            <ul className='user_notes__notes'>\n              {gameNotes?.tabs?.filter((item) => item.tabName == currentTab)[0]\n                ?.notes?.length > 0 ? (\n                gameNotes?.tabs\n                  ?.filter((item) => item.tabName == currentTab)[0]\n                  ?.notes.map((note) => (\n                    <li\n                      key={note.note}\n                      className='user_note'\n                      onClick={() => viewNoteHandler(note)}\n                    >\n                      {note.note}\n                    </li>\n                  ))\n              ) : (\n                <p className='no_notes_msg'>No Notes</p>\n              )}\n              <div\n                ref={notesRef}\n                style={{ width: '10px', marginLeft: '5px' }}\n              />\n            </ul>\n          </div>\n          <div\n            className='user_notes__form_container'\n            style={{ display: `${!viewStatus.notes ? 'none' : 'block'}` }}\n          >\n            <form className='user_notes__form' onSubmit={formSubmitHandler}>\n              <input\n                value={noteValue}\n                onChange={(e) => setNoteValue(e.target.value)}\n                className='user_notes__input'\n                placeholder='I think Clark Kent is Batman'\n              />\n            </form>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UserGameNotes;\n","import React, { useState, useEffect } from \"react\";\nimport \"./UserGame.css\";\nimport axios from \"axios\";\nimport { FiClock } from \"react-icons/fi\";\nimport { FaMedal, FaMusic, FaAngleDown } from \"react-icons/fa\";\nimport useContextMenu from \"../../hooks/useContextMenu\";\nimport UserGameNotes from \"./UserNotes\";\nimport SpotifyPlayback from \"../SpotifyPlayback/SpotifyPlayback\";\n\nconst today = new Date();\nconst yyyy = today.getFullYear();\nlet mm = today.getMonth() + 1; // Months start at 0!\nlet dd = today.getDate();\nif (dd < 10) dd = \"0\" + dd;\nif (mm < 10) mm = \"0\" + mm;\nconst formattedToday = mm + \"/\" + dd + \"/\" + yyyy;\n\nconst UserGame = ({\n  game,\n  activeProfile,\n  closeStats,\n  setCurrentGame,\n  updateCollection,\n  userNotes,\n  spotifyToken,\n  currentTrack,\n  playAudio,\n  pausePlayback,\n  beginPlayback,\n  playTrack,\n}) => {\n  // RATING, PLAYTIME, ACHIEVEMENTS, SPOTIFY, NOTES, STATUS(COMPLETED, BACKLOG, ETC.), PLATFORMS OWNED\n  const { anchorPoint, showBannerMenu, resetContext } = useContextMenu();\n  // Achievement States\n  const [viewStatus, setViewStatus] = useState({\n    achievements: true,\n    notes: true,\n    trophies: true,\n  });\n  const [achievements, setAchievements] = useState(game.achievements);\n  const [trophies, setTrophies] = useState(game.trophies);\n  const [achievementFilter, setAchievementFilter] = useState(\"unlocked\");\n  const [trophyFilter, setTrophyFilter] = useState(\"unlocked\");\n  const [currentGameNotes, setCurrentGameNotes] = useState(null);\n  // Playtime States\n  const [playtime, setPlaytime] = useState(Math.floor(game.playtime / 60));\n  const [changingPlaytime, setChangingPlaytime] = useState(false);\n  // Rating States\n  const [rating, setRating] = useState(game.user_rating);\n  const [changingRating, setChangingRating] = useState(false);\n  const [changingBanner, setChangingBanner] = useState(false);\n  const [bannerLink, setBannerLink] = useState(\"\");\n  const [viewingSoundtrack, setViewingSoundtrack] = useState(false);\n  const [gameOST, setGameOST] = useState([]);\n\n  // BACKLOG, CURRENTLY PLAYING, COMPLETED, STARTED, ABAND ONED, 100%, NOT OWNED\n  const [backlogStatus, setBacklogStatus] = useState(game.status);\n  const [changingBacklog, setChangingBacklog] = useState(false);\n  // Hooks and Storage Variables\n  const baseURL = process.env.REACT_APP_BASE_URL;\n  const steamID = localStorage.getItem(\"steamID\");\n  const userEmail = localStorage.getItem(\"user\");\n  const trophyPercentage = Math.floor(\n    (trophies?.filter((game) => game.earned == true).length /\n      trophies?.length) *\n      100\n  );\n\n  const achievementPercentage = Math.floor(\n    (achievements?.filter(\n      (game) => game.achieved == true || game.earned == true\n    ).length /\n      achievements?.length) *\n      100\n  );\n\n  const updateProfileNotes = async () => {\n    const currentGame = userNotes.notes_collection.filter(\n      (g) => g.id == game.id\n    )[0];\n\n    if (!currentGame) return;\n\n    const request = await axios.put(`${baseURL}/notes/update_notes`, {\n      profile: activeProfile,\n      gameId: currentGame.id,\n      notes: currentGame,\n      email: userEmail,\n    });\n\n    setCurrentGameNotes(\n      userNotes.notes_collection.filter((g) => g.id == game.id)[0]\n    );\n\n    return request;\n  };\n\n  const selectTrackHandler = (e, track) => {\n    e.stopPropagation();\n    if (currentTrack !== null && track.name == currentTrack.name) {\n      beginPlayback();\n    }\n    playTrack(track);\n  };\n\n  const createNewGameNote = () => {\n    // If user has no notes for any other games, create an empty array\n    if (userNotes.notes_collection.length == 0) {\n      userNotes.notes_collection = [\n        {\n          id: game.id,\n          name: game.name,\n          tabs: [\n            {\n              tabName: \"Notes\",\n              notes: [\n                {\n                  id: 0,\n                  note: `These are your notes for ${game.name}! Click me to edit this or start your own tab by clicking the +`,\n                  date: formattedToday,\n                },\n              ],\n            },\n          ],\n        },\n      ];\n\n      setCurrentGameNotes({\n        id: game.id,\n        name: game.name,\n        tabs: [\n          {\n            tabName: \"Notes\",\n            notes: [\n              {\n                id: 0,\n                note: `These are your notes for ${game.name}! Click me to edit this or start your own tab by clicking the +`,\n                date: formattedToday,\n              },\n            ],\n          },\n        ],\n      });\n    }\n    // If user has notes for others game, simply update the array\n    else {\n      userNotes.notes_collection.push({\n        id: game.id,\n        name: game.name,\n        tabs: [\n          {\n            tabName: \"Notes\",\n            notes: [\n              {\n                id: 0,\n                note: `These are your notes for ${game.name}! Click me to edit this or start your own tab by clicking the +`,\n                date: formattedToday,\n              },\n            ],\n          },\n        ],\n      });\n      setCurrentGameNotes({\n        id: game.id,\n        name: game.name,\n        tabs: [\n          {\n            tabName: \"Notes\",\n            notes: [\n              {\n                id: 0,\n                note: `These are your notes for ${game.name}! Click me to edit this or start your own tab by clicking the +`,\n                date: formattedToday,\n              },\n            ],\n          },\n        ],\n      });\n    }\n\n    updateProfileNotes();\n  };\n\n  useEffect(() => {\n    if (\n      !userNotes.notes_collection ||\n      userNotes.notes_collection.filter((g) => g.id == game.id).length == 0\n    )\n      createNewGameNote();\n    else {\n      setCurrentGameNotes(\n        userNotes.notes_collection.filter((g) => g.id == game.id)[0]\n      );\n    }\n  }, [game, userNotes]);\n\n  useEffect(() => {\n    const handleEsc = (event) => {\n      if (event.keyCode === 27) {\n        setChangingRating(false);\n        setChangingBacklog(false);\n      }\n    };\n    window.addEventListener(\"keydown\", handleEsc);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleEsc);\n    };\n  }, []);\n\n  // Runs everytime game changes\n  useEffect(() => {\n    setViewingSoundtrack(false);\n    setChangingPlaytime(false);\n    setChangingRating(false);\n    setChangingBacklog(false);\n    setBacklogStatus(game.status || \"BACKLOG\");\n    setPlaytime(Math.floor(game.playtime / 60));\n    setRating(game.user_rating);\n    setAchievements(game.achievements);\n    setTrophies(game.trophies);\n    if (!steamID) {\n      console.log(\"No steam id\");\n      return;\n    }\n\n    // Compare both achievement lists to get Icons\n    const getAchievementData = (arr1, arr2) => {\n      let dataList = [];\n      arr2.map(function (x) {\n        var result = arr1.filter((a1) => a1.name == x.displayName);\n        if (result.length > 0) {\n          x.achieved = result[0].achieved;\n        }\n        dataList.push(x);\n      });\n\n      // Sort Alphabetically\n      dataList.sort(function (a, b) {\n        var textA = a.displayName.toUpperCase();\n        var textB = b.displayName.toUpperCase();\n        return textA < textB ? -1 : textA > textB ? 1 : 0;\n      });\n\n      dataList.sort(function (a, b) {\n        return a.achieved < b.achieved ? 1 : a.achieved > b.achieved ? -1 : 0;\n      });\n      return dataList;\n    };\n\n    // Sort by unlocked Achievements\n    const fetchAppData = async () => {\n      const steamGameStats = await axios.get(\n        `${baseURL}/steam/get_game_stats`,\n        {\n          params: {\n            gameId: game.id,\n          },\n        }\n      );\n      if (Object.keys(steamGameStats.data).length == 0) {\n        setAchievements(null);\n        return;\n      }\n      try {\n        if (!game.achievements) {\n          const request = await axios.get(\n            `${baseURL}/steam/get_steam_achievements`,\n            {\n              params: {\n                gameId: game.id,\n                steamId: steamID,\n              },\n            }\n          );\n\n          const userAchievementData = getAchievementData(\n            request.data.achievements,\n            steamGameStats.data.availableGameStats.achievements\n          );\n\n          const addAchievements = await axios.put(\n            `${baseURL}/app/update_game_achievements`,\n            {\n              email: userEmail,\n              currentProfile: activeProfile.name,\n              achievements: userAchievementData,\n              gameId: game.id,\n            }\n          );\n\n          setCurrentGame(request.data.response.game);\n          updateCollection(request.data.response.profile.collection);\n          setAchievements(addAchievements.data.response.game.achievements);\n        }\n      } catch (error) {\n        console.log(error);\n        return error;\n      }\n    };\n    fetchAppData();\n  }, [game]);\n\n  const getAchievementCount = (list) => {\n    if (!list) return \"N/A\";\n    const numberAchieved = list.filter(\n      (game) => game.achieved == true || game.earned == true\n    ).length;\n    return numberAchieved + \"/\" + list.length;\n  };\n\n  console.log(gameOST);\n\n  const getSpotifyAlbum = async () => {\n    if (!spotifyToken) return null;\n    else {\n      try {\n        const request = await axios.get(`${baseURL}/spotify/spotify_album`, {\n          params: {\n            game: game.name,\n            token: spotifyToken,\n            baseURL,\n          },\n        });\n        if (request.data.status !== \"OK\") {\n          console.log(request);\n          return;\n        } else {\n          setGameOST(request.data.tracks);\n          setViewingSoundtrack(true);\n          return;\n        }\n      } catch (error) {\n        console.log(error);\n\n        return error;\n      }\n    }\n  };\n\n  // Convert steam minutes to numbers\n  function padTo2Digits(num) {\n    return num.toString().padStart(2, \"0\");\n  }\n\n  function toHoursAndMinutes(totalMinutes) {\n    if (totalMinutes <= 0 && game.type == \"steam\") return \"Not Started\";\n    else if (totalMinutes <= 0 && game.type !== \"steam\") return 0 + \" hours\";\n    else {\n      const minutes = totalMinutes % 60;\n      const hours = Math.floor(totalMinutes / 60);\n      if (minutes == 0) return hours + \" hours\";\n      return `${hours}.${padTo2Digits(minutes)} hours`;\n    }\n  }\n\n  const updateRatingHandler = async () => {\n    try {\n      const request = await axios.put(`${baseURL}/app/update_game_rating`, {\n        email: userEmail,\n        currentProfile: activeProfile.name,\n        rating: rating,\n        gameId: game.id,\n      });\n      localStorage.setItem(\"profile\", request.data.response.profile.name);\n      setCurrentGame(request.data.response.game);\n      updateCollection(request.data.response.profile.collection);\n      setChangingRating(false);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const updatePlaytime = async () => {\n    if (game.playtime == playtime) {\n      return;\n    } else {\n      try {\n        const request = await axios.put(`${baseURL}/app/update_game_playtime`, {\n          email: userEmail,\n          currentProfile: activeProfile.name,\n          playtime: playtime * 60,\n          gameId: game.id,\n        });\n\n        localStorage.setItem(\"profile\", request.data.response.profile.name);\n        setCurrentGame(request.data.response.game);\n        updateCollection(request.data.response.profile.collection);\n        setChangingPlaytime(false);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const updateBacklog = async (status) => {\n    try {\n      const request = await axios.put(`${baseURL}/app/update_game_backlog`, {\n        email: userEmail,\n        currentProfile: activeProfile.name,\n        status: status,\n        gameId: game.id,\n      });\n\n      localStorage.setItem(\"profile\", request.data.response.profile.name);\n\n      setCurrentGame(request.data.response.game);\n      updateCollection(request.data.response.profile.collection);\n      setChangingBacklog(false);\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  };\n\n  const updateBacklogHandler = (status) => {\n    updateBacklog(status);\n    setChangingBacklog(false);\n  };\n\n  // Minimzie or Maximize Height of Game Component\n  const windowViewHandler = (data) => {\n    setViewStatus({ ...viewStatus, [data]: !viewStatus[data] });\n  };\n\n  // Determine if user is updating or canceling playtime change\n  const determinePlaytimeAction = (e) => {\n    if (e.key === \"Enter\") {\n      updatePlaytime();\n    }\n    if (e.key === \"Escape\") {\n      setChangingPlaytime(false);\n      setPlaytime(Math.floor(game.playtime / 60));\n    }\n  };\n\n  // Determine if user is updating or canceling playtime change\n  const determineRatingAction = (e) => {\n    if (e.key === \"Enter\") {\n      updateRatingHandler();\n    }\n    if (e.key === \"Escape\") {\n      setChangingRating(false);\n      setRating(game.user_rating);\n    }\n  };\n\n  const changeBannerHandler = (e) => {\n    e.preventDefault();\n    setChangingBanner(true);\n    resetContext();\n  };\n\n  const updateBanner = async () => {\n    if (bannerLink.trim() == \"\") return;\n    try {\n      const request = await axios.put(`${baseURL}/app/update_game_banner`, {\n        email: userEmail,\n        currentProfile: activeProfile.name,\n        url: bannerLink,\n        gameId: game.id,\n      });\n      localStorage.setItem(\"profile\", request.data.response.profile.name);\n      setCurrentGame(request.data.response.game);\n      updateCollection(request.data.response.profile.collection);\n      setChangingBanner(false);\n      setBannerLink(\"\");\n      return request.data;\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  };\n\n  return (\n    <div className=\"user_game__wrapper\">\n      {changingBanner && (\n        <div className=\"user_game__modal\">\n          <div className=\"modal_content\">\n            <h2\n              style={{\n                maxWidth: \"75%\",\n                textAlign: \"center\",\n                marginBottom: \"25px\",\n              }}\n            >\n              Please enter the link to any image or gif below.\n            </h2>\n\n            <div className=\"modal_form\" style={{ width: \"100%\" }}>\n              <input\n                style={{ width: \"80%\" }}\n                value={bannerLink}\n                onChange={(e) => setBannerLink(e.target.value)}\n              />\n              <button onClick={updateBanner}>Submit</button>\n              <button onClick={() => setChangingBanner(false)}>Back</button>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className=\"user_game__banner\">\n        {showBannerMenu && (\n          <ul\n            className=\"user_game__banner_context\"\n            style={{ top: anchorPoint.y + 5, left: anchorPoint.x }}\n          >\n            <li className=\"banner_context__item\" onClick={changeBannerHandler}>\n              Set Custom Banner\n            </li>\n            <li className=\"banner_context__item\">Set Custom Logo</li>\n            <li className=\"banner_context__item\">Set Default Image</li>\n          </ul>\n        )}\n\n        <div className=\"user_game__exit\" onClick={closeStats}>\n          X\n        </div>\n        <img\n          className=\"user_game_banner_img\"\n          src={\n            game.banner_image ||\n            game.cover_image.replace(\"cover_big_2x\", \"1080p_2x\")\n          }\n        />\n        <div className=\"user_game__current_stats\">\n          {/* PLAYTIME */}\n          <div className=\"playtime_container\">\n            <FiClock className=\"playtime_clock_icon\" />\n            <div className=\"stats_item\">\n              <h3 style={{ color: changingPlaytime && \"#9147ff\" }}>\n                PLAY TIME\n              </h3>\n              <span\n                style={{ display: changingPlaytime && \"none\" }}\n                className=\"previous_playtime\"\n                onClick={() => setChangingPlaytime(true)}\n              >\n                {toHoursAndMinutes(game.playtime)}\n              </span>\n              <input\n                type=\"number\"\n                value={playtime}\n                min=\"0\"\n                onKeyDown={determinePlaytimeAction}\n                onChange={(e) => setPlaytime(e.target.value)}\n                className={`playtime_input ${\n                  changingPlaytime && \"playtime_focused\"\n                }`}\n              />\n            </div>\n          </div>\n\n          {/* RATING */}\n          <div className=\"rating_container\">\n            <div className=\"stats_item\">\n              <h3>RATING</h3>\n              <span\n                onClick={() => setChangingRating(true)}\n                className=\"previous_rating\"\n                style={{ display: changingRating && \"none\" }}\n              >\n                {game.user_rating || 0}%\n              </span>\n\n              <input\n                className=\"rating_input\"\n                type=\"number\"\n                min=\"0\"\n                max=\"100\"\n                value={rating || 0}\n                onKeyDown={determineRatingAction}\n                onChange={(e) => setRating(e.target.value)}\n                style={{\n                  width: !changingRating && \"0px\",\n                  display: !changingRating && \"none\",\n                }}\n              />\n            </div>\n          </div>\n\n          {/* BACKLOG STATUS */}\n          <div className=\"achievement_count_container\">\n            <div className=\"stats_item\">\n              <h3>STATUS</h3>\n              <button\n                onClick={() => setChangingBacklog(!changingBacklog)}\n                style={{\n                  backgroundColor:\n                    backlogStatus == \"BACKLOG\"\n                      ? \"dodgerblue\"\n                      : backlogStatus == \"STARTED\"\n                      ? \"aqua\"\n                      : backlogStatus == \"FINISHED\"\n                      ? \"green\"\n                      : backlogStatus == \"PLAYING\"\n                      ? \"pink\"\n                      : backlogStatus == \"100%\"\n                      ? \"gold\"\n                      : backlogStatus == \"ABANDONDED\"\n                      ? \"red\"\n                      : \"grey\",\n                }}\n                className=\"status_btn\"\n              >\n                {backlogStatus}\n              </button>\n            </div>\n            {changingBacklog && (\n              <div className=\"backlog_items\">\n                <ul className=\"backlog_items_list\">\n                  <li\n                    style={{\n                      backgroundColor: \"BACKLOG\" == game.status && \"#9147ff\",\n                      color: \"BACKLOG\" == game.status && \"white\",\n                    }}\n                    className=\"backlog_items_item\"\n                    onClick={() => {\n                      updateBacklogHandler(\"BACKLOG\");\n                    }}\n                  >\n                    Backlog\n                  </li>\n                  <li\n                    style={{\n                      backgroundColor: \"STARTED\" == game.status && \"#9147ff\",\n                      color: \"STARTED\" == game.status && \"white\",\n                    }}\n                    className=\"backlog_items_item\"\n                    onClick={() => {\n                      updateBacklogHandler(\"STARTED\");\n                    }}\n                  >\n                    Started\n                  </li>\n                  <li\n                    style={{\n                      backgroundColor: \"PLAYING\" == game.status && \"#9147ff\",\n                      color: \"PLAYING\" == game.status && \"white\",\n                    }}\n                    className=\"backlog_items_item\"\n                    onClick={() => {\n                      updateBacklogHandler(\"PLAYING\");\n                    }}\n                  >\n                    Currently Playing\n                  </li>\n                  <li\n                    style={{\n                      backgroundColor: \"FINISHED\" == game.status && \"#9147ff\",\n                      color: \"FINISHED\" == game.status && \"white\",\n                    }}\n                    className=\"backlog_items_item\"\n                    onClick={() => {\n                      updateBacklogHandler(\"FINISHED\");\n                    }}\n                  >\n                    Finished\n                  </li>\n                  <li\n                    style={{\n                      backgroundColor: \"100%\" == game.status && \"#9147ff\",\n                      color: \"100%\" == game.status && \"white\",\n                    }}\n                    className=\"backlog_items_item\"\n                    onClick={() => {\n                      updateBacklogHandler(\"100%\");\n                    }}\n                  >\n                    100% Completed\n                  </li>\n                  <li\n                    style={{\n                      backgroundColor: \"ABANDONDED\" == game.status && \"#9147ff\",\n                      color: \"ABANDONDED\" == game.status && \"white\",\n                    }}\n                    className=\"backlog_items_item\"\n                    onClick={() => {\n                      updateBacklogHandler(\"ABANDONDED\");\n                    }}\n                  >\n                    Abandonded\n                  </li>\n                  <li\n                    style={{\n                      backgroundColor: \"NOT OWNED\" == game.status && \"#9147ff\",\n                      color: \"NOT OWNED\" == game.status && \"white\",\n                    }}\n                    className=\"backlog_items_item\"\n                    onClick={() => {\n                      updateBacklogHandler(\"NOT OWNED\");\n                    }}\n                  >\n                    Not Owned\n                  </li>\n                </ul>\n              </div>\n            )}\n          </div>\n\n          {/* SPOTIFY MUSIC */}\n          <div className=\"music_icon_container\">\n            <div className=\"stats_item\" style={{ alignItems: \"center\" }}>\n              <h3>MUSIC</h3>\n              <FaMusic\n                className=\"music_icon\"\n                onClick={getSpotifyAlbum}\n                style={{\n                  color: viewingSoundtrack && spotifyToken && \"#1DB954\",\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* GAME NEWS AND DATA */}\n      <div\n        className=\"user_game__data_wrapper\"\n        style={{ paddingBottom: spotifyToken && \"36px\" }}\n      >\n        <div className=\"user_game__data\">\n          {/* OWNED PLATFORMS */}\n          {/* <div className='user_game__platforms'>\n            <h4>Platforms Owned</h4>\n            <ul>{game.origin == 'steam' && <li>Steam</li>}</ul>\n          </div> */}\n\n          {/* ACHIEVEMENT LIST */}\n          {achievements && (\n            <div\n              className={`user_game__achievements_wrapper ${\n                !viewStatus.achievements && \"minimized\"\n              }`}\n            >\n              <div className=\"user_game__achievements\">\n                <div className=\"user_game__achievements_banner\">\n                  <FaAngleDown\n                    style={{\n                      transform: !viewStatus.achievements\n                        ? \"rotate(0)\"\n                        : \"rotate(180deg)\",\n                    }}\n                    className=\"user_game__minimize_icon\"\n                    onClick={() => windowViewHandler(\"achievements\")}\n                  />\n                  {achievementPercentage === 100 && (\n                    <FaMedal className=\"user_game__completion_medal\" />\n                  )}\n                  <h4>\n                    <p>Achievements</p>\n                  </h4>\n                  <p>\n                    You've unlocked {getAchievementCount(achievements)} (\n                    {achievementPercentage}\n                    %)\n                  </p>\n                  <div className=\"user_game__achievements_progress_bar_container\">\n                    <div\n                      className=\"user_game__achievements_progress_bar\"\n                      style={{\n                        width: `${achievementPercentage}%`,\n                        background: activeProfile.color,\n                      }}\n                    />\n                  </div>\n                  <div className=\"user_game__achievements_actions\">\n                    <button\n                      className={achievementFilter == \"unlocked\" && \"active\"}\n                      onClick={() => setAchievementFilter(\"unlocked\")}\n                    >\n                      Unlocked\n                    </button>\n                    <button\n                      className={`${achievementFilter == \"locked\" && \"active\"}`}\n                      onClick={() => setAchievementFilter(\"locked\")}\n                    >\n                      In Progress\n                    </button>\n                  </div>\n                </div>\n                <ul className=\"user_game__achievements_list\">\n                  {achievements\n                    .filter((achievement) =>\n                      achievementFilter == \"unlocked\"\n                        ? achievement.achieved\n                        : !achievement.achieved\n                    )\n                    .sort((a, b) =>\n                      a.displayName > b.displayName\n                        ? 1\n                        : b.displayName > a.displayName\n                        ? -1\n                        : 0\n                    )\n                    .map((item) => (\n                      <li className=\"achievement_item\">\n                        <div\n                          className=\"achievement_item_icon\"\n                          style={{ border: `1px solid ${activeProfile.color}` }}\n                        >\n                          <img\n                            className=\"achievement_item_icon__img\"\n                            src={item.achieved ? item.icon : item.icongray}\n                          />\n                        </div>\n                        <div className=\"achievement_item_headers\">\n                          <h4>{item.displayName}</h4>\n                          {item.description && <p>{item.description}</p>}\n                        </div>\n                      </li>\n                    ))}\n                </ul>\n              </div>\n            </div>\n          )}\n          {/* PLAYSTATION TROPHIES */}\n          {trophies && (\n            <div\n              className={`user_game__achievements_wrapper ${\n                !viewStatus.trophies && \"minimized\"\n              }`}\n            >\n              <div\n                className={`user_game__achievements ${\n                  trophyPercentage == 100 && \"completed\"\n                }`}\n              >\n                <div className=\"user_game__achievements_banner\">\n                  <FaAngleDown\n                    style={{\n                      transform: !viewStatus.trophies\n                        ? \"rotate(0)\"\n                        : \"rotate(180deg)\",\n                    }}\n                    className=\"user_game__minimize_icon\"\n                    onClick={() => windowViewHandler(\"trophies\")}\n                  />\n                  {trophyPercentage === 100 && (\n                    <FaMedal className=\"user_game__completion_medal\" />\n                  )}\n                  <h4>\n                    <p>Trophies</p>\n                  </h4>\n                  <p>\n                    You've unlocked {getAchievementCount(trophies)} (\n                    {trophyPercentage}%)\n                  </p>\n                  <div className=\"user_game__achievements_progress_bar_container\">\n                    <div\n                      className=\"user_game__achievements_progress_bar\"\n                      style={{\n                        width: `${trophyPercentage}%`,\n                        background: activeProfile.color,\n                      }}\n                    />\n                  </div>\n\n                  <div className=\"user_game__achievements_actions\">\n                    <button\n                      className={trophyFilter == \"unlocked\" && \"active\"}\n                      onClick={() => setTrophyFilter(\"unlocked\")}\n                    >\n                      Unlocked\n                    </button>\n                    {trophyPercentage < 100 && (\n                      <button\n                        className={`${trophyFilter == \"locked\" && \"active\"}`}\n                        onClick={() => setTrophyFilter(\"locked\")}\n                      >\n                        In Progress\n                      </button>\n                    )}\n                  </div>\n                </div>\n                <ul className=\"user_game__achievements_list\">\n                  {trophies\n                    .filter((trophy) =>\n                      trophyFilter == \"unlocked\"\n                        ? trophy.earned\n                        : !trophy.earned\n                    )\n                    .sort((a, b) =>\n                      a.trophyName > b.trophyName\n                        ? 1\n                        : b.trophyName > a.trophyName\n                        ? -1\n                        : 0\n                    )\n                    .map((item) => (\n                      <li className=\"achievement_item\" key={item.trophyName}>\n                        <div\n                          className=\"achievement_item_icon\"\n                          style={{ border: `1px solid ${activeProfile.color}` }}\n                        >\n                          <img\n                            className={`achievement_item_icon__img ${\n                              !item.earned && \"greyscale\"\n                            }`}\n                            src={item.trophyIconUrl}\n                          />\n                        </div>\n                        <div className=\"achievement_item_headers\">\n                          <h4>{item.trophyName}</h4>\n                          {item.trophyDetail && <p>{item.trophyDetail}</p>}\n                        </div>\n                      </li>\n                    ))}\n                </ul>\n              </div>\n            </div>\n          )}\n          <UserGameNotes\n            profile={activeProfile}\n            windowViewHandler={windowViewHandler}\n            viewStatus={viewStatus}\n            gameNotes={currentGameNotes}\n            updateNotes={updateProfileNotes}\n          />\n          {spotifyToken && viewingSoundtrack && (\n            <div className=\"user_game__soundtrack_wrapper\">\n              <div className=\"user_game__soundtrack_header\">\n                <h3>Spotify Game Album</h3>\n              </div>\n              <div className=\"user_game__soundtrack_playlist\">\n                <ul>\n                  {gameOST.map((song) => (\n                    <li\n                      key={song.trackUri}\n                      onClick={(e) => selectTrackHandler(e, song)}\n                    >\n                      {song.name}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      {spotifyToken && viewingSoundtrack && (\n        <SpotifyPlayback\n          spotifyToken={spotifyToken}\n          playAudio={playAudio}\n          beginPlayback={beginPlayback}\n          pausePlayback={pausePlayback}\n          trackUri={currentTrack?.uri}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UserGame;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./UserCollection.css\";\nimport { FaSistrix, FaHome, FaStar } from \"react-icons/fa\";\nimport { CiSquareMore } from \"react-icons/ci\";\nimport { read, utils, writeFile } from \"xlsx\";\nimport axios from \"axios\";\n\nimport UserGame from \"../UserGame/UserGame\";\nimport useContextMenu from \"../../hooks/useContextMenu\";\nimport bronzeTrophy from \"../../assets/images/ps-trophy-bronze.png\";\nimport goldTrophy from \"../../assets/images/ps-trophy-gold.png\";\nimport platinumTrophy from \"../../assets/images/ps-trophy-platinum.png\";\n\nconst UserCollection = ({\n  collection,\n  activeProfile,\n  backToHome,\n  playTrack,\n  currentTrack,\n  isPlaying,\n  pausePlayback,\n  resumePlayback,\n  spotifyToken,\n  updateGameStatus,\n  updateCollection,\n  userNotes,\n  trackUri,\n}) => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [searchList, setSearchList] = useState([]);\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const [viewingList, setViewingList] = useState(false);\n  const [isMobile, setIsMobile] = useState(false);\n  const [currentGame, setCurrentGame] = useState(null);\n  const [currentlyAdjusting, setCurrentlyAdjusting] = useState(null);\n  const [viewingCSVDropdown, setViewingCSVDropdown] = useState(false);\n  const imageRef = useRef(0);\n\n  // SPOTLIGHT STATES\n  const [spotlightList, setSpotlightList] = useState([]);\n  const [spotlightFilter, setSpotlightFilter] = useState(\"playtime\");\n  // COVER LIST STATES\n  const [listFilter, setListFilter] = useState(\"alphabetical\");\n  const [filteredList, setFilteredList] = useState([]);\n  // STATUS LIST STATES\n  const [statusFilter, setStatusFilter] = useState(\"backlog\");\n  const baseURL = process.env.REACT_APP_BASE_URL;\n\n  const { anchorPoint, showTitleMenu } = useContextMenu();\n  const trophies = [platinumTrophy, goldTrophy, bronzeTrophy];\n\n  // If user is typing, filter titles that reflect inputted value\n  useEffect(() => {\n    if (searchValue == \"\") {\n      setSearchList([]);\n      return;\n    }\n    const delaySearch = setTimeout(() => {\n      const res = collection.filter((item) =>\n        item.name.toLowerCase().includes(searchValue.toLowerCase())\n      );\n      setSearchList(res);\n    }, 250);\n\n    return () => clearTimeout(delaySearch);\n  }, [searchValue]);\n\n  useEffect(() => {\n    const loadImage = (image) => {\n      return new Promise((resolve, reject) => {\n        const loadImg = new Image();\n        loadImg.src = image.cover_image;\n        // wait 2 seconds to simulate loading time\n        loadImg.onload = () =>\n          setTimeout(() => {\n            resolve(image.cover_image);\n          }, 2000);\n\n        loadImg.onerror = (err) => reject(err);\n      });\n    };\n\n    Promise.all(filteredList.map((image) => loadImage(image)))\n      .then(() => setImagesLoaded(true))\n      .catch((err) => console.log(\"Failed to load images\", err));\n  }, []);\n\n  // Listen for screen size to determine if user is on mobile\n  useEffect(() => {\n    if (window.innerWidth <= 650) {\n      setIsMobile(true);\n    }\n    function handleResize() {\n      if (window.innerWidth <= 650) {\n        setIsMobile(true);\n      } else {\n        setIsMobile(false);\n      }\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // Listen for spotlight filter change\n  useEffect(() => {\n    if (spotlightFilter == \"playtime\") {\n      setSpotlightList(\n        [...collection].sort((a, b) => b[spotlightFilter] - a[spotlightFilter])\n      );\n    } else if (spotlightFilter == \"user_rating\") {\n      setSpotlightList(\n        collection\n          .filter((game) => game.user_rating)\n          .sort((a, b) => b[\"user_rating\"] - a[\"user_rating\"])\n      );\n    } else {\n      setSpotlightList(\n        collection\n          .filter((game) => game.achievements)\n          .sort((a, b) => b[\"achievements\"] - a[\"achievements\"])\n      );\n    }\n  }, [spotlightFilter, collection]);\n\n  // Listen for list filter change\n  useEffect(() => {\n    if (listFilter == \"achievements\") {\n      setFilteredList(\n        [...collection]\n          .filter((game) => game.achievements)\n          .sort((a, b) => b[\"achievements\"] - a[\"achievements\"])\n      );\n    } else if (listFilter == \"playtime\") {\n      setFilteredList(\n        [...collection]\n          .filter((game) => game.playtime > 0)\n          .sort((a, b) => b.playtime - a.playtime)\n      );\n    } else if (listFilter == \"status\") {\n      setFilteredList(\n        [...collection].filter(\n          (game) => game.status == statusFilter.toUpperCase()\n        )\n      );\n    } else if (listFilter == \"rating\") {\n      setFilteredList(\n        [...collection]\n          .filter((game) => game.user_rating)\n          .sort((a, b) => b.user_rating - a.user_rating)\n      );\n    } else if (listFilter == \"trophies\") {\n      // const earnedTrophyCount = game.trophies.filter((game) => game.earned);\n      setFilteredList(\n        [...collection]\n          .filter((game) => game.trophies)\n          .sort((a, b) => a.trophies - b.trophies)\n      );\n    } else {\n      setFilteredList(\n        [...collection].sort((a, b) =>\n          a.name.toUpperCase() > b.name.toUpperCase()\n            ? 1\n            : a.name.toUpperCase() < b.name.toUpperCase()\n            ? -1\n            : 0\n        )\n      );\n    }\n  }, [listFilter, statusFilter, collection]);\n\n  // Select which game is being viewed\n  const viewGameHandler = (game) => {\n    setCurrentGame(game);\n  };\n\n  // Open up the menu when the user right clicks\n  const viewGameHeaders = (e, game) => {\n    e.preventDefault();\n    setCurrentlyAdjusting(game);\n  };\n\n  // Determine what stat to show based on current filter\n  const getFilterStat = (game) => {\n    switch (listFilter) {\n      case \"playtime\":\n        if (Math.floor(game.playtime / 60) >= 1) {\n          return (\n            <span className=\"filter_stat\">\n              {Math.floor(game.playtime / 60)}{\" \"}\n              {Math.floor(game.playtime / 60) == 1 ? \"hour\" : \"hours\"}\n            </span>\n          );\n        } else {\n          return (\n            <span className=\"filter_stat\">\n              {game.playtime} {game.playtime == 1 ? \"minute\" : \"minutes\"}\n            </span>\n          );\n        }\n      case \"rating\":\n        return (\n          <span className=\"filter_stat rating_stat\">{game.user_rating}%</span>\n        );\n      case \"trophies\":\n        if (!game.trophies) break;\n        const earnedTrophyCount = game?.trophies?.filter((game) => game.earned);\n        return (\n          <span className=\"filter_stat\">\n            {Math.floor(\n              (earnedTrophyCount.length / game.trophies.length) * 100\n            )}\n            % earned\n          </span>\n        );\n      default:\n        break;\n    }\n  };\n\n  const removeGameHandler = (e) => {\n    e.stopPropagation();\n    if (\n      Object.keys(currentGame).length > 0 &&\n      currentlyAdjusting.id === currentGame.id\n    )\n      setCurrentGame(null);\n    updateGameStatus(\"REMOVE\", currentlyAdjusting);\n    setCurrentlyAdjusting(null);\n  };\n\n  const importUserCollection = async (collection) => {\n    try {\n      const request = await axios.put(\n        `${baseURL}/app/add_imported_collection`,\n        {\n          email: localStorage.getItem(\"user\"),\n          profile: localStorage.getItem(\"profile\"),\n          collection,\n        }\n      );\n      console.log(request);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Allow user to import their own collection via CSV file\n  const handleImport = ($event) => {\n    const files = $event.target.files;\n    if (files.length) {\n      const file = files[0];\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        const wb = read(event.target.result);\n        const sheets = wb.SheetNames;\n\n        if (sheets.length) {\n          const rows = utils.sheet_to_json(wb.Sheets[sheets[0]]);\n          setFilteredList(rows);\n          importUserCollection(rows);\n        }\n      };\n      reader.readAsArrayBuffer(file);\n    }\n    setViewingCSVDropdown(false);\n  };\n\n  // Allow user to export their collection from their own file\n  const handleExport = () => {\n    const headings = [\n      [\n        \"name\",\n        \"id\",\n        \"cover_image\",\n        \"playtime\",\n        \"origin\",\n        \"status\",\n        \"user_rating\",\n        \"banner_image\",\n      ],\n    ];\n    const wb = utils.book_new();\n    const ws = utils.json_to_sheet([]);\n    utils.sheet_add_aoa(ws, headings);\n    utils.sheet_add_json(ws, filteredList, { origin: \"A2\", skipHeader: true });\n    utils.book_append_sheet(wb, ws, \"Game\");\n    writeFile(wb, \"Game Collection.xlsx\");\n    setViewingCSVDropdown(false);\n  };\n\n  // HTML RENDER\n  if (imagesLoaded)\n    return (\n      <div className=\"user_collection__wrapper\">\n        <div\n          className=\"user_collection__container\"\n          style={{\n            background: \"#111\",\n          }}\n        >\n          {/* LEFT SIDE */}\n          <div\n            className=\"user_collection__left\"\n            style={{\n              height: viewingList && \"250%\",\n              marginBottom: viewingList && \"25px\",\n              display: isMobile && currentGame && \"none\",\n            }}\n          >\n            <div className=\"user_collection__left_header\">\n              <h2>\n                <img\n                  style={{\n                    height: \"50px\",\n                    width: \"50px\",\n                    borderRadius: \"4px\",\n                  }}\n                  src={activeProfile.avatar}\n                />\n                {activeProfile.name.trim()}'s Collection\n                <CiSquareMore\n                  className=\"user_collection__upload_icon\"\n                  onClick={() => setViewingCSVDropdown(!viewingCSVDropdown)}\n                />\n                {viewingCSVDropdown && (\n                  <div className=\"upload_dropdown_wrapper\">\n                    <ul className=\"upload_dropdown_list\">\n                      <li>\n                        {\" \"}\n                        <input\n                          style={{ display: \"none\" }}\n                          type=\"file\"\n                          name=\"file\"\n                          className=\"custom-file-input\"\n                          id=\"inputGroupFile\"\n                          required\n                          onChange={handleImport}\n                          accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                        />\n                        <label\n                          className=\"custom-file-label\"\n                          htmlFor=\"inputGroupFile\"\n                        >\n                          Import CSV\n                        </label>\n                      </li>\n                      <li onClick={handleExport}>Export CSV</li>\n                    </ul>\n                  </div>\n                )}\n                <FaHome\n                  className=\"user_collection__home_icon\"\n                  onClick={backToHome}\n                />\n              </h2>\n\n              <div className=\"user_collection__search\">\n                <FaSistrix className=\"user_collection__search_icon\" />\n                <input\n                  className=\"user_collection__search_input\"\n                  value={searchValue}\n                  onChange={(e) => setSearchValue(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <ul\n              className=\"user_collection__title_list\"\n              style={{\n                height: viewingList && \"100%\",\n                display: viewingList && \"flex\",\n              }}\n            >\n              <p\n                className=\"user_collection__total\"\n                style={{\n                  color: \"white\",\n                  paddingLeft: \"7px\",\n                  marginBottom: \"5px\",\n                  position: \"fixed\",\n                  top: \"132px\",\n                  left: \"1px\",\n                  fontSize: \".95rem\",\n                  width: \"100%\",\n                  height: \"22px\",\n                  background:\n                    \"linear-gradient(to right, rgba(25,25,25,.5) 0%,rgba(17,17,17,1) 46%,rgba(1,1,1,1) 50%,rgba(10,10,10,1) 53%,rgba(78,78,78,1) 76%,rgba(56,56,56,1) 87%,rgba(27,27,27,1) 100%)\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                }}\n              >\n                {searchList.length <= 0 && searchValue == \"\"\n                  ? \"All\"\n                  : \"Results\"}{\" \"}\n                (\n                <span style={{ fontSize: \".75rem\" }}>\n                  {searchValue == \"\" ? collection.length : searchList.length}\n                </span>\n                )\n              </p>\n\n              {searchValue == \"\" ? (\n                collection\n                  .sort((a, b) =>\n                    a.name.toUpperCase() > b.name.toUpperCase()\n                      ? 1\n                      : a.name.toUpperCase() < b.name.toUpperCase()\n                      ? -1\n                      : 0\n                  )\n                  .map((game) => (\n                    <li\n                      className=\"title_list__item\"\n                      key={game.id}\n                      onClick={() => viewGameHandler(game)}\n                      onContextMenu={(e) => viewGameHeaders(e, game)}\n                      style={{\n                        background: currentGame?.id == game.id && \"#9147ff\",\n                        color: currentGame?.id == game.id && \"white\",\n                      }}\n                    >\n                      {\" \"}\n                      <img src={game.cover_image} />\n                      <p>{game.name}</p>\n                      {game.name == activeProfile.favorite_game && (\n                        <FaStar className=\"list_item_favorite\" />\n                      )}\n                      {showTitleMenu && (\n                        <ul\n                          onMouseEnter={(e) => e.stopPropagation(true)}\n                          className=\"user_collection__game_context\"\n                          style={{\n                            top: anchorPoint.y,\n                            left: anchorPoint.x,\n                            zIndex: 6,\n                          }}\n                        >\n                          <li className=\"banner_context__item\">\n                            Add to Favorites\n                          </li>\n                          <li\n                            className=\"banner_context__item\"\n                            onClick={(e) => removeGameHandler(e, game)}\n                          >\n                            Delete Game\n                          </li>\n                        </ul>\n                      )}\n                    </li>\n                  ))\n              ) : searchList.length > 0 && searchValue != \"\" ? (\n                searchList.map((game) => (\n                  <li\n                    className=\"title_list__item\"\n                    key={game.id}\n                    onClick={() => viewGameHandler(game)}\n                  >\n                    {\" \"}\n                    <img src={game.cover_image} />\n                    <p>{game.name}</p>\n                  </li>\n                ))\n              ) : (\n                <p\n                  style={{\n                    color: \"white\",\n                    fontSize: \"3.2rem\",\n                    position: \"absolute\",\n                    top: \"30%\",\n                    left: \"16px\",\n                  }}\n                >\n                  No Matches\n                </p>\n              )}\n              <div className=\"user_collection__title_list_shadow\" />\n              <div className=\"user_collection__title_list_shadow top_shadow\" />\n            </ul>\n            <div className=\"user_collection__actions\">\n              <button className=\"persona_font\" onClick={backToHome}>\n                Back\n              </button>\n            </div>\n          </div>\n\n          {/* RIGHT SIDE */}\n          <div className=\"user_collection__right\">\n            {currentGame !== null && (\n              <>\n                <UserGame\n                  game={currentGame}\n                  activeProfile={activeProfile}\n                  closeStats={() => setCurrentGame(null)}\n                  setCurrentGame={(game) => setCurrentGame(game)}\n                  updateCollection={updateCollection}\n                  userNotes={userNotes}\n                  spotifyToken={spotifyToken}\n                  currentTrack={currentTrack}\n                  playAudio={isPlaying}\n                  pausePlayback={pausePlayback}\n                  playTrack={playTrack}\n                  beginPlayback={resumePlayback}\n                />\n              </>\n            )}\n\n            {!currentGame && (\n              // SPOTLIGHT\n              <>\n                {!isMobile && (\n                  <div className=\"user_collection__spotlight_wrapper\">\n                    <div className=\"spotlight_filters\">\n                      {/* MOST PLAYED, HIGHEST RATED, MOST ACHIEVEMENTS */}\n                      <h2 className=\"spotlight_filter\">\n                        {spotlightFilter == \"playtime\"\n                          ? \"Most Played\"\n                          : spotlightFilter == \"user_rating\"\n                          ? \"Highest Rated\"\n                          : \"Most Achievements\"}{\" \"}\n                      </h2>\n                      <ul className=\"spotlight_filter__options\">\n                        <li\n                          onClick={() => setSpotlightFilter(\"playtime\")}\n                          style={{\n                            color: spotlightFilter == \"playtime\" && \"white\",\n                          }}\n                        >\n                          Most Played\n                        </li>\n                        <li\n                          onClick={() => setSpotlightFilter(\"user_rating\")}\n                          style={{\n                            color: spotlightFilter == \"user_rating\" && \"white\",\n                          }}\n                        >\n                          Highest Rated\n                        </li>\n                        <li\n                          onClick={() => setSpotlightFilter(\"achievements\")}\n                          style={{\n                            color: spotlightFilter == \"achievements\" && \"white\",\n                          }}\n                        >\n                          Most Achievements\n                        </li>\n                      </ul>\n                    </div>\n                    <div className=\"user_collection__spotlight\">\n                      {spotlightList.slice(0, 3).map((top, i) => (\n                        <figure\n                          key={top.id}\n                          className=\"spotlight_container\"\n                          onClick={() => viewGameHandler(top)}\n                        >\n                          <img\n                            className=\"spotlight_image\"\n                            src={top.banner_url || top.cover_image}\n                          />\n                          <div className=\"spotlight_container__row\">\n                            <img\n                              className=\"spotlight_trophy_image\"\n                              src={trophies[i]}\n                            />\n                            <figcaption className=\"spotlight_details\">\n                              <p>\n                                {spotlightFilter == \"playtime\"\n                                  ? `${Math.floor(top.playtime / 60)} hours`\n                                  : spotlightFilter == \"user_rating\"\n                                  ? top.user_rating + \"%\"\n                                  : \"ACHIEVE\"}{\" \"}\n                              </p>\n                            </figcaption>\n                          </div>\n                        </figure>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* COVER LIST */}\n                <div className=\"user_collection__list_container\">\n                  <div className=\"user_collection__list_filters\">\n                    <p style={{ marginBottom: \"2px\", fontSize: \"1.5rem\" }}>\n                      {listFilter == \"alphabetical\"\n                        ? \"All Games\"\n                        : listFilter == \"achievements\"\n                        ? \"Achievements\"\n                        : listFilter == \"playtime\"\n                        ? \"Playtime\"\n                        : listFilter == \"rating\"\n                        ? \"Rating\"\n                        : \"Status\"}\n                    </p>\n                    <ul className=\"user_collection__list_filters__list\">\n                      <li\n                        style={{\n                          color: listFilter == \"alphabetical\" && \"white\",\n                        }}\n                        onClick={() => setListFilter(\"alphabetical\")}\n                      >\n                        All\n                      </li>\n                      <span> | </span>\n                      <li\n                        style={{\n                          color: listFilter == \"achievements\" && \"white\",\n                        }}\n                        onClick={() => setListFilter(\"achievements\")}\n                      >\n                        Achievements\n                      </li>\n                      <span> | </span>\n\n                      <li\n                        style={{ color: listFilter == \"playtime\" && \"white\" }}\n                        onClick={() => setListFilter(\"playtime\")}\n                      >\n                        Playtime\n                      </li>\n                      <span> | </span>\n\n                      <li\n                        style={{ color: listFilter == \"rating\" && \"white\" }}\n                        onClick={() => setListFilter(\"rating\")}\n                      >\n                        Rating\n                      </li>\n                      <span> | </span>\n\n                      <li\n                        style={{ color: listFilter == \"status\" && \"white\" }}\n                        onClick={() => {\n                          setListFilter(\"status\");\n                          setStatusFilter(\"backlog\");\n                        }}\n                      >\n                        Status\n                      </li>\n                    </ul>\n                    {listFilter == \"status\" && (\n                      <div\n                        className=\"user_collection__list_filters__list\"\n                        style={{ margin: \"0\" }}\n                      >\n                        <ul\n                          className=\"user_collection__list_filters__list_status\"\n                          style={{ flexDirection: \"row\" }}\n                        >\n                          <li\n                            style={{\n                              color: statusFilter == \"backlog\" && \"white\",\n                            }}\n                            onClick={() => setStatusFilter(\"backlog\")}\n                          >\n                            Backlog\n                          </li>\n                          <span> | </span>\n                          <li\n                            style={{\n                              color: statusFilter == \"started\" && \"white\",\n                            }}\n                            onClick={() => setStatusFilter(\"started\")}\n                          >\n                            Started\n                          </li>\n                          <span> | </span>\n                          <li\n                            style={{\n                              color: statusFilter == \"playing\" && \"white\",\n                            }}\n                            onClick={() => setStatusFilter(\"playing\")}\n                          >\n                            Playing\n                          </li>\n                          <span> | </span>\n                          <li\n                            style={{\n                              color: statusFilter == \"finished\" && \"white\",\n                            }}\n                            onClick={() => setStatusFilter(\"finished\")}\n                          >\n                            Finished\n                          </li>\n                          <span> | </span>\n                          <li\n                            style={{\n                              color: statusFilter == \"100%\" && \"white\",\n                            }}\n                            onClick={() => setStatusFilter(\"100%\")}\n                          >\n                            100%\n                          </li>\n                          <span> | </span>\n                          <li\n                            style={{\n                              color: statusFilter == \"abandonded\" && \"white\",\n                            }}\n                            onClick={() => setStatusFilter(\"abandonded\")}\n                          >\n                            Abandonded\n                          </li>\n                          <span> | </span>\n                          <li\n                            style={{\n                              color: statusFilter == \"not owned\" && \"white\",\n                            }}\n                            onClick={() => setStatusFilter(\"not owned\")}\n                          >\n                            Not Owned\n                          </li>\n                        </ul>\n                      </div>\n                    )}\n                  </div>\n                  <ul className=\"user_collection__list\">\n                    {!isMobile || (isMobile && searchValue == \"\")\n                      ? filteredList.map((game) => (\n                          <li\n                            className=\"list_item\"\n                            key={game.id}\n                            onClick={() => viewGameHandler(game)}\n                          >\n                            <div className=\"user_collection__poster_container\">\n                              <div className=\"gradient\" />\n                              <>\n                                {/* FRONT OF POSTER */}\n                                <div className=\"user_collection__poster_front\">\n                                  <img\n                                    className=\"user_collection__poster\"\n                                    src={game.cover_image}\n                                    alt={game.name}\n                                  />\n                                </div>\n                              </>\n                            </div>\n                            {getFilterStat(game)}\n                          </li>\n                        ))\n                      : searchList.map((game) => (\n                          <li\n                            className=\"list_item\"\n                            key={game.id}\n                            onClick={() => viewGameHandler(game)}\n                          >\n                            <div className=\"user_collection__poster_container\">\n                              <div className=\"gradient\" />\n                              <>\n                                {/* FRONT OF POSTER */}\n                                <div className=\"user_collection__poster_front\">\n                                  <img\n                                    className=\"user_collection__poster\"\n                                    src={\n                                      isMobile\n                                        ? game.cover_image.replace(\n                                            \"cover_big\",\n                                            \"1080p\"\n                                          )\n                                        : game.cover_image\n                                    }\n                                    alt={game.name}\n                                  />\n                                </div>\n                              </>\n                            </div>\n                          </li>\n                        ))}\n                  </ul>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n};\n\nexport default UserCollection;\n"],"names":["useState","x","y","anchorPoint","setAnchorPoint","showBannerMenu","setShowBannerMenu","showTitleMenu","setShowTitleMenu","handleContextMenu","useCallback","event","preventDefault","target","className","offsetX","pageY","movementX","handleClick","useEffect","document","addEventListener","removeEventListener","resetContext","note","closeNote","updateNote","deleteNote","noteValue","setNoteValue","date","onClick","value","onChange","e","today","Date","yyyy","getFullYear","mm","getMonth","dd","getDate","formattedToday","windowViewHandler","viewStatus","gameNotes","updateNotes","currentTab","setCurrentTab","editingTab","setEditingTab","tabValue","setTabValue","addingTab","setAddingTab","addingNote","setAddingNote","currentNote","setCurrentNote","noteTab","tabs","filter","item","tabName","notesRef","useRef","tabRef","tabEndRef","current","focus","scrollIntoView","behavior","clearTimeout","timer","editTabHandler","innerText","console","log","tabFormSubmitHandler","push","notes","style","transform","display","oldNote","newNote","updatedList","contentEditable","suppressContentEditableWarning","onBlur","onKeyDown","currentTarget","key","ref","borderBottom","userSelect","padding","transition","lineHeight","map","stopPropagation","setTimeout","onSubmit","length","viewNoteHandler","width","marginLeft","id","placeholder","game","activeProfile","closeStats","setCurrentGame","updateCollection","userNotes","spotifyToken","currentTrack","playAudio","pausePlayback","beginPlayback","playTrack","useContextMenu","achievements","trophies","setViewStatus","setAchievements","setTrophies","achievementFilter","setAchievementFilter","trophyFilter","setTrophyFilter","currentGameNotes","setCurrentGameNotes","Math","floor","playtime","setPlaytime","changingPlaytime","setChangingPlaytime","user_rating","rating","setRating","changingRating","setChangingRating","changingBanner","setChangingBanner","bannerLink","setBannerLink","viewingSoundtrack","setViewingSoundtrack","gameOST","setGameOST","status","backlogStatus","setBacklogStatus","changingBacklog","setChangingBacklog","baseURL","process","steamID","localStorage","getItem","userEmail","trophyPercentage","earned","achievementPercentage","achieved","updateProfileNotes","currentGame","notes_collection","g","axios","profile","gameId","email","request","name","handleEsc","keyCode","window","getAchievementData","arr1","arr2","dataList","result","a1","displayName","sort","a","b","textA","toUpperCase","textB","fetchAppData","params","steamGameStats","Object","keys","data","steamId","userAchievementData","availableGameStats","currentProfile","addAchievements","response","collection","getAchievementCount","list","numberAchieved","getSpotifyAlbum","token","tracks","updateRatingHandler","setItem","updatePlaytime","updateBacklog","updateBacklogHandler","updateBanner","trim","url","maxWidth","textAlign","marginBottom","top","left","src","banner_image","cover_image","replace","color","totalMinutes","type","minutes","hours","toString","padStart","toHoursAndMinutes","min","max","backgroundColor","alignItems","paddingBottom","background","achievement","border","icon","icongray","description","trophy","trophyName","trophyIconUrl","trophyDetail","song","track","selectTrackHandler","trackUri","SpotifyPlayback","uri","backToHome","isPlaying","resumePlayback","updateGameStatus","searchValue","setSearchValue","searchList","setSearchList","imagesLoaded","setImagesLoaded","viewingList","isMobile","setIsMobile","currentlyAdjusting","setCurrentlyAdjusting","viewingCSVDropdown","setViewingCSVDropdown","spotlightList","setSpotlightList","spotlightFilter","setSpotlightFilter","listFilter","setListFilter","filteredList","setFilteredList","statusFilter","setStatusFilter","platinumTrophy","goldTrophy","bronzeTrophy","delaySearch","res","toLowerCase","includes","Promise","all","image","resolve","reject","loadImg","Image","onload","onerror","err","loadImage","then","catch","handleResize","innerWidth","viewGameHandler","getFilterStat","earnedTrophyCount","importUserCollection","height","borderRadius","avatar","required","$event","files","file","reader","FileReader","wb","read","sheets","SheetNames","rows","utils","Sheets","readAsArrayBuffer","accept","htmlFor","ws","origin","skipHeader","writeFile","paddingLeft","position","fontSize","onContextMenu","viewGameHeaders","favorite_game","onMouseEnter","zIndex","removeGameHandler","slice","i","banner_url","margin","flexDirection","alt"],"sourceRoot":""}