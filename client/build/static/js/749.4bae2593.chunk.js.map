{"version":3,"file":"static/js/749.4bae2593.chunk.js","mappings":"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","sources":["components/Login/Login.js","components/Authentication/Authentication.js","hooks/useFetchPopular.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './Login.css';\r\n\r\nconst Login = ({ toLanding, authenticateUser, images }) => {\r\n  // States\r\n  const [hasEmailError, setHasEmailError] = useState(false);\r\n  const [hasPasswordError, setHasPasswordError] = useState(false);\r\n  const [currentFocus, setCurrentFocus] = useState(null);\r\n  const [authError, setAuthError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Refs\r\n  const emailRef = useRef('');\r\n  const passwordRef = useRef('');\r\n\r\n  // Regex for email validity\r\n  const re =\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n  // Email input error change error handler\r\n  const checkEmailValidity = (e) => {\r\n    if (hasEmailError) setHasEmailError(false);\r\n    const value = e.target.value.trim().toLowerCase();\r\n    const isValidEmail = re.test(value);\r\n  };\r\n\r\n  // Email input error blur error handler\r\n  const emailBlurHandler = (e) => {\r\n    const value = e.target.value.trim().toLowerCase();\r\n    const isValidEmail = re.test(value);\r\n    setHasEmailError(!isValidEmail);\r\n    setCurrentFocus(null);\r\n  };\r\n\r\n  // Password input error change error handler\r\n  const checkPasswordValidity = (e) => {\r\n    if (hasPasswordError) setHasPasswordError(false);\r\n    const value = e.target.value.trim().toLowerCase();\r\n    const isValidPassword =\r\n      e.target.value.length > 0 && e.target.value.length <= 8;\r\n  };\r\n\r\n  // Password input error blur error handler\r\n  const passwordBlurHandler = (e) => {\r\n    const value = e.target.value.trim().toLowerCase();\r\n    const isValidPassword = value.length > 3 && value.length <= 8;\r\n    setHasPasswordError(!isValidPassword);\r\n    setCurrentFocus(null);\r\n  };\r\n\r\n  const toLandingPage = () => {\r\n    toLanding();\r\n  };\r\n\r\n  // Submit user information to match authentication\r\n  const formSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    // Data values\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n    emailRef.current.blur();\r\n    passwordRef.current.blur();\r\n    setCurrentFocus('');\r\n    const response = await authenticateUser(email, password);\r\n    console.log(response.data);\r\n    if (!response.data) setAuthError(response);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className='login__wrapper'>\r\n      <div className='login'>\r\n        {/* <img src={gameflixBrand} className='login__brand' /> */}\r\n        <div className='login__form_wrapper'>\r\n          <div className='login__form_container'>\r\n            <form className='login__form' onSubmit={formSubmitHandler}>\r\n              {!loading ? (\r\n                <>\r\n                  <h1>Sign In</h1>\r\n                  <div className='login__form_actions'>\r\n                    <label className='form_label' htmlFor='email' />\r\n                    <input\r\n                      ref={emailRef}\r\n                      onFocus={() => setCurrentFocus('email')}\r\n                      onChange={checkEmailValidity}\r\n                      onBlur={emailBlurHandler}\r\n                      className={`form_input ${\r\n                        emailRef.current?.value !== '' && hasEmailError\r\n                          ? 'error'\r\n                          : ''\r\n                      }`}\r\n                      type='email'\r\n                    />\r\n                    <span\r\n                      className={`form_actions_placeholder ${\r\n                        emailRef.current?.value || currentFocus == 'email'\r\n                          ? 'focused'\r\n                          : ''\r\n                      }`}\r\n                    >\r\n                      Email\r\n                    </span>\r\n                  </div>\r\n                  <div className='login__form_actions'>\r\n                    <label className='form_label' htmlFor='email' />\r\n                    <input\r\n                      ref={passwordRef}\r\n                      onFocus={() => setCurrentFocus('password')}\r\n                      onChange={checkPasswordValidity}\r\n                      onBlur={passwordBlurHandler}\r\n                      className={`form_input ${\r\n                        passwordRef.current?.value !== undefined &&\r\n                        hasPasswordError &&\r\n                        passwordRef.current.value.length > 0\r\n                          ? 'error'\r\n                          : ''\r\n                      }`}\r\n                      type='password'\r\n                    />\r\n                    <span\r\n                      className={`form_actions_placeholder ${\r\n                        passwordRef.current?.value || currentFocus == 'password'\r\n                          ? 'password_focused'\r\n                          : ''\r\n                      }`}\r\n                    >\r\n                      Password\r\n                    </span>\r\n                    {authError && (\r\n                      <p className='login__auth_error'>{authError}</p>\r\n                    )}\r\n                  </div>\r\n                  <button className='form__submit_btn'>Sign In</button>\r\n                  <p className='form__create_account'>\r\n                    Don't have an account?{' '}\r\n                    <span onClick={toLandingPage}>Create one now</span>.\r\n                  </p>\r\n                </>\r\n              ) : (\r\n                <div className='login__loading'>\r\n                  <div className='loading_spinner' />\r\n                </div>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* BACKGROUND */}\r\n      <div className='login__background'>\r\n        {images.map((game) => (\r\n          <React.Fragment key={game.key}>\r\n            <img\r\n              className='login__img'\r\n              alt={game.name}\r\n              src={game.props.children.props.src}\r\n              loading='lazy'\r\n            />\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect, useRef, lazy, Suspense } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Login from '../Login/Login';\r\nimport './Authentication.css';\r\nimport axios from 'axios';\r\nimport useFetchPopular from '../../hooks/useFetchPopular';\r\nconst LandingPage = lazy(() => import('../LandingPage/LandingPage'));\r\n\r\nconst Authentication = ({ onLogin }) => {\r\n  const allGames = useFetchPopular();\r\n  const [imgsLoading, setImgsLoading] = useState(true);\r\n  const [toLandingPage, setToLandingPage] = useState(false);\r\n  const userLoggedIn = localStorage.getItem('user');\r\n  const navigate = useNavigate();\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const counter = useRef(0);\r\n\r\n  useEffect(() => {\r\n    if (userLoggedIn) navigate('/');\r\n  }, []);\r\n\r\n  const imageLoaded = () => {\r\n    counter.current += 1;\r\n    if (counter.current >= allGames.length) {\r\n      setImgsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadedImages = allGames?.map((game) => (\r\n    <React.Fragment key={game.id}>\r\n      <img\r\n        className='login__img'\r\n        src={`//images.igdb.com/igdb/image/upload/t_cover_big_2x/${game.cover.image_id}.jpg`}\r\n        onLoad={imageLoaded}\r\n      />\r\n    </React.Fragment>\r\n  ));\r\n\r\n  const authenticateUser = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(`${baseURL}/authentication/signin`, {\r\n        email,\r\n        password,\r\n      });\r\n      onLogin(response.data.user);\r\n      return response;\r\n    } catch (e) {\r\n      return e.response.data.message;\r\n    }\r\n  };\r\n\r\n  if (loadedImages.length > 0 && !userLoggedIn) {\r\n    if (!toLandingPage)\r\n      return (\r\n        <Login\r\n          images={loadedImages}\r\n          toLanding={() => setToLandingPage(true)}\r\n          authenticateUser={(email, password) =>\r\n            authenticateUser(email, password)\r\n          }\r\n        />\r\n      );\r\n\r\n    return (\r\n      <Suspense fallback={<>...</>}>\r\n        <LandingPage\r\n          toSignIn={() => {\r\n            setToLandingPage(false);\r\n          }}\r\n          images={loadedImages}\r\n        />\r\n      </Suspense>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className='auth_login__loading'>\r\n        <div className='auth_loading_spinner' />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Authentication;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function useFetchPopular() {\r\n  const existingToken = localStorage.getItem('twitch_auth');\r\n  const [bannerGamesList, setBannerGamesList] = useState([]);\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const currentDate = new Date();\r\n\r\n  useEffect(() => {\r\n    const fetchPopularGames = async () => {\r\n      const request = await axios.get(`${baseURL}/authentication/login_banner`);\r\n      const last_updated = new Date(request.data.last_updated);\r\n\r\n      // If a week has passed since the last update, run a new update\r\n      if (currentDate > last_updated.setDate(last_updated.getDate() + 7)) {\r\n        return updatePopularGamesAPI();\r\n      } else {\r\n        return setBannerGamesList(request.data.popular_games_list);\r\n      }\r\n    };\r\n    fetchPopularGames();\r\n\r\n    const updatePopularGamesAPI = async () => {\r\n      if (!existingToken) return;\r\n      try {\r\n        const request = await axios.post(`${baseURL}/app/popular_titles`, {\r\n          token: existingToken,\r\n        });\r\n        return updateCollection(request.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n        return err;\r\n      }\r\n    };\r\n  }, [existingToken]);\r\n\r\n  const updateCollection = async (list) => {\r\n    const request = await axios.post(\r\n      `${baseURL}/authentication/update_login_banner`,\r\n      {\r\n        gameList: list,\r\n        date: new Date(),\r\n      }\r\n    );\r\n\r\n    setBannerGamesList(request.data.popular_games_list);\r\n  };\r\n\r\n  return bannerGamesList;\r\n}\r\n"],"names":["toLanding","authenticateUser","images","useState","hasEmailError","setHasEmailError","hasPasswordError","setHasPasswordError","currentFocus","setCurrentFocus","authError","setAuthError","loading","setLoading","emailRef","useRef","passwordRef","re","formSubmitHandler","e","preventDefault","email","current","value","password","blur","response","console","log","data","className","onSubmit","htmlFor","ref","onFocus","onChange","target","trim","toLowerCase","test","onBlur","isValidEmail","type","length","isValidPassword","undefined","onClick","map","game","alt","name","src","props","children","key","LandingPage","lazy","onLogin","allGames","existingToken","localStorage","getItem","bannerGamesList","setBannerGamesList","baseURL","process","currentDate","Date","useEffect","fetchPopularGames","axios","request","last_updated","setDate","getDate","updatePopularGamesAPI","popular_games_list","token","updateCollection","list","gameList","date","useFetchPopular","setImgsLoading","toLandingPage","setToLandingPage","userLoggedIn","navigate","useNavigate","counter","imageLoaded","loadedImages","cover","image_id","onLoad","id","user","message","Suspense","fallback","toSignIn"],"sourceRoot":""}