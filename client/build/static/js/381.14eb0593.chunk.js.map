{"version":3,"file":"static/js/381.14eb0593.chunk.js","mappings":"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","sources":["components/Login/Login.js","components/LandingPage/NewUser/NewUser.js","components/LandingPage/LandingPage.js","components/Authentication/Authentication.js","hooks/useFetchPopular.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './Login.css';\r\n\r\nconst Login = ({ toLanding, authenticateUser, images }) => {\r\n  // States\r\n  const [hasEmailError, setHasEmailError] = useState(false);\r\n  const [hasPasswordError, setHasPasswordError] = useState(false);\r\n  const [currentFocus, setCurrentFocus] = useState(null);\r\n  const [authError, setAuthError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Refs\r\n  const emailRef = useRef('');\r\n  const passwordRef = useRef('');\r\n\r\n  // Regex for email validity\r\n  const re =\r\n    /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n  // Email input error change error handler\r\n  const checkEmailValidity = (e) => {\r\n    if (hasEmailError) setHasEmailError(false);\r\n    const value = e.target.value.trim().toLowerCase();\r\n    const isValidEmail = re.test(value);\r\n  };\r\n\r\n  // Email input error blur error handler\r\n  const emailBlurHandler = (e) => {\r\n    const value = e.target.value.trim().toLowerCase();\r\n    const isValidEmail = re.test(value);\r\n    setHasEmailError(!isValidEmail);\r\n    setCurrentFocus(null);\r\n  };\r\n\r\n  // Password input error change error handler\r\n  const checkPasswordValidity = (e) => {\r\n    if (hasPasswordError) setHasPasswordError(false);\r\n    const value = e.target.value.trim().toLowerCase();\r\n    const isValidPassword =\r\n      e.target.value.length > 0 && e.target.value.length <= 8;\r\n  };\r\n\r\n  // Password input error blur error handler\r\n  const passwordBlurHandler = (e) => {\r\n    const value = e.target.value.trim().toLowerCase();\r\n    const isValidPassword = value.length > 3 && value.length <= 8;\r\n    setHasPasswordError(!isValidPassword);\r\n    setCurrentFocus(null);\r\n  };\r\n\r\n  const toLandingPage = () => {\r\n    toLanding();\r\n  };\r\n\r\n  // Submit user information to match authentication\r\n  const formSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    // Data values\r\n    const email = emailRef.current.value;\r\n    const password = passwordRef.current.value;\r\n    emailRef.current.blur();\r\n    passwordRef.current.blur();\r\n    setCurrentFocus('');\r\n    const response = await authenticateUser(email, password);\r\n    console.log(response.data);\r\n    if (!response.data) setAuthError(response);\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className='login__wrapper'>\r\n      <div className='login'>\r\n        {/* <img src={gameflixBrand} className='login__brand' /> */}\r\n        <div className='login__form_wrapper'>\r\n          <div className='login__form_container'>\r\n            <form className='login__form' onSubmit={formSubmitHandler}>\r\n              {!loading ? (\r\n                <>\r\n                  <h1>Sign In</h1>\r\n                  <div className='login__form_actions'>\r\n                    <label className='form_label' htmlFor='email' />\r\n                    <input\r\n                      ref={emailRef}\r\n                      onFocus={() => setCurrentFocus('email')}\r\n                      onChange={checkEmailValidity}\r\n                      onBlur={emailBlurHandler}\r\n                      className={`form_input ${\r\n                        emailRef.current?.value !== '' && hasEmailError\r\n                          ? 'error'\r\n                          : ''\r\n                      }`}\r\n                      type='email'\r\n                    />\r\n                    <span\r\n                      className={`form_actions_placeholder ${\r\n                        emailRef.current?.value || currentFocus == 'email'\r\n                          ? 'focused'\r\n                          : ''\r\n                      }`}\r\n                    >\r\n                      Email\r\n                    </span>\r\n                  </div>\r\n                  <div className='login__form_actions'>\r\n                    <label className='form_label' htmlFor='email' />\r\n                    <input\r\n                      ref={passwordRef}\r\n                      onFocus={() => setCurrentFocus('password')}\r\n                      onChange={checkPasswordValidity}\r\n                      onBlur={passwordBlurHandler}\r\n                      className={`form_input ${\r\n                        passwordRef.current?.value !== undefined &&\r\n                        hasPasswordError &&\r\n                        passwordRef.current.value.length > 0\r\n                          ? 'error'\r\n                          : ''\r\n                      }`}\r\n                      type='password'\r\n                    />\r\n                    <span\r\n                      className={`form_actions_placeholder ${\r\n                        passwordRef.current?.value || currentFocus == 'password'\r\n                          ? 'password_focused'\r\n                          : ''\r\n                      }`}\r\n                    >\r\n                      Password\r\n                    </span>\r\n                    {authError && (\r\n                      <p className='login__auth_error'>{authError}</p>\r\n                    )}\r\n                  </div>\r\n                  <button className='form__submit_btn'>Sign In</button>\r\n                  <p className='form__create_account'>\r\n                    Don't have an account?{' '}\r\n                    <span onClick={toLandingPage}>Create one now</span>.\r\n                  </p>\r\n                </>\r\n              ) : (\r\n                <div className='login__loading'>\r\n                  <div className='loading_spinner' />\r\n                </div>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* BACKGROUND */}\r\n      <div className='login__background'>\r\n        {images.map((game) => (\r\n          <React.Fragment key={game.key}>\r\n            <img\r\n              className='login__img'\r\n              alt={game.name}\r\n              src={game.props.children.props.src}\r\n            />\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport defaultAvatar from '../../../assets/images/basic_avatar.png';\r\nimport { TwitterPicker } from 'react-color';\r\nimport axios from 'axios';\r\nimport './NewUser.css';\r\n\r\nconst NewUser = (props) => {\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [error, setError] = useState(false);\r\n\r\n  // Color Picker States\r\n  const [color, setColor] = useState('#9147ff');\r\n\r\n  // Step 1 Refs\r\n  const [stepOneData, setStepOneData] = useState({});\r\n  const emailRef = useRef('');\r\n  const passwordRef = useRef('');\r\n  // Step 2 Refs\r\n  const [stepTwoData, setStepTwoData] = useState({});\r\n  const firstNameRef = useRef('');\r\n  const lastNameRef = useRef('');\r\n  // Step 3 Refs\r\n  const [imgFile, setImgFile] = useState(null);\r\n  const [imgPreview, setImgPreview] = useState(null);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fileUploadHandler = (e) => {\r\n    setImgPreview(URL.createObjectURL(e.target.files[0]));\r\n    setImgFile(e.target.files[0]);\r\n    console.log(e);\r\n  };\r\n\r\n  const colorChangeHandler = (color) => setColor(color);\r\n  console.log(color);\r\n\r\n  // Handler to go back and edit forms in previous steps\r\n  const backStepHandler = () => {\r\n    setColor('#9147ff');\r\n    setCurrentStep(currentStep - 1);\r\n    if (error) setError(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error && emailRef.current) emailRef.current.focus();\r\n  }, []);\r\n\r\n  const validateEmail = (data) => {\r\n    let flag = false;\r\n    const request = axios\r\n      .post(`${baseURL}/authentication/signup`, data)\r\n      .then((response) => {\r\n        console.log(response);\r\n        return response;\r\n      })\r\n      .catch((e) => {\r\n        setError(e.response.data.message);\r\n        flag = true;\r\n      });\r\n\r\n    return request;\r\n  };\r\n\r\n  const formSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    setError(false);\r\n    // Go throuh the steps until user gets to last step (3), then submit data\r\n    // Step 1\r\n    if (currentStep == 1) {\r\n      const email = emailRef.current.value.trim();\r\n      const password = passwordRef.current.value.trim();\r\n      if (email == '' || !email.includes('@')) {\r\n        setError('Please enter a valid email');\r\n      } else if (password == '' || password.length < 7) {\r\n        setError('Please enter a valid password that is 7 characters or more!');\r\n      } else {\r\n        setStepOneData({ email, password });\r\n        setCurrentStep(currentStep + 1);\r\n        setError(false);\r\n      }\r\n    }\r\n    // Step 2\r\n    else if (currentStep == 2) {\r\n      const firstName = firstNameRef.current.value;\r\n      const lastName = lastNameRef.current.value;\r\n      if (firstName.trim() == '' || lastName.trim() == '') {\r\n        setError(\"Please don't leave name fields empty!\");\r\n      } else {\r\n        setStepTwoData({ firstName, lastName });\r\n        setCurrentStep(currentStep + 1);\r\n        setError(false);\r\n      }\r\n    }\r\n    // Step 3\r\n    else {\r\n      setLoading(true);\r\n      const formData = new FormData();\r\n      formData.append('firstName', stepTwoData.firstName);\r\n      formData.append('lastName', stepTwoData.lastName);\r\n      formData.append('email', stepOneData.email);\r\n      formData.append('password', stepOneData.password);\r\n      formData.append('color', color.hex);\r\n      formData.append('avatar', imgFile ? imgFile : defaultAvatar);\r\n\r\n      const result = await validateEmail(formData);\r\n      console.log(imgFile);\r\n      if (\r\n        !result &&\r\n        imgFile !== null &&\r\n        (imgFile.type.split('/')[1] == 'mp4' || imgFile.type == '')\r\n      ) {\r\n        setError(\r\n          'Invalid file type not supported, please use a valid PNG, JPG, JPEG, GIF, or ICO file.'\r\n        );\r\n        setLoading(false);\r\n        return;\r\n      } else if (!error && result && !result.data.message) {\r\n        localStorage.setItem('user', result.data.email);\r\n        window.location.reload();\r\n      } else {\r\n        setLoading(false);\r\n        console.log(result);\r\n        setCurrentStep(1);\r\n        setError(null);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='new_user__page'>\r\n      <div className='new_user__header'>\r\n        <h1 className='header_brand' onClick={() => props.returnToLanding()}>\r\n          GAMEFLIX\r\n        </h1>\r\n        <button className='header_btn' onClick={props.toLoginHandler}>\r\n          Sign In\r\n        </button>\r\n      </div>\r\n\r\n      <div className='new_user__forms_container'>\r\n        <div className='new_user__forms'>\r\n          {!loading && (\r\n            <p className='forms_step'>\r\n              STEP <span className='bold'>{currentStep}</span> OF{' '}\r\n              <span className='bold'>3</span>\r\n            </p>\r\n          )}\r\n          {!loading && (\r\n            <>\r\n              <div className='forms_info'>\r\n                <h1 className='info_title'>\r\n                  {currentStep == 1\r\n                    ? 'Start now by creating an account to gain acess to your personal collection of games!'\r\n                    : currentStep == 2\r\n                    ? 'Tell us a little more about yourself, enter your first and last name in the boxes below!'\r\n                    : 'Click the image below to set your profile picture and select your favorite color!'}\r\n                </h1>\r\n              </div>\r\n              <form\r\n                className='new_user__form'\r\n                style={{ alignItems: currentStep >= 3 && 'center' }}\r\n                onSubmit={formSubmitHandler}\r\n                encType='multipart/form-data'\r\n              >\r\n                {/* STEP ONE INPUTS */}\r\n                {currentStep == 1 && (\r\n                  <>\r\n                    <input\r\n                      ref={emailRef}\r\n                      className={`form_text_input ${error && 'input_error'}`}\r\n                      type='email'\r\n                      onBlur={() => error && setError(null)}\r\n                      defaultValue={!error ? props.email : stepOneData.email}\r\n                    />\r\n                    <span className='form_placeholder__email'>Email</span>\r\n                    {error && <p className='user_email_error'>{error}</p>}\r\n                    <input\r\n                      ref={passwordRef}\r\n                      className='form_text_input'\r\n                      type='password'\r\n                    />\r\n                    <span className='form_placeholder__password'>Password</span>\r\n                  </>\r\n                )}\r\n                {/* STEP TWO INPUTS */}\r\n                {currentStep == 2 && (\r\n                  <>\r\n                    <input\r\n                      ref={firstNameRef}\r\n                      defaultValue={stepTwoData?.firstName}\r\n                      className='form_text_input'\r\n                    />\r\n                    {error && <p className='step_two__error'>{error}</p>}\r\n                    <span className='form_placeholder__first_name'>\r\n                      First Name\r\n                    </span>\r\n                    <input\r\n                      ref={lastNameRef}\r\n                      defaultValue={stepTwoData?.lastName}\r\n                      className='form_text_input'\r\n                    />\r\n                    <span className='form_placeholder__last_name'>\r\n                      Last Name\r\n                    </span>\r\n                  </>\r\n                )}\r\n                {/* STEP THREE INPUTS */}\r\n                {currentStep >= 3 && (\r\n                  <>\r\n                    {error && <p className='form_file_error'>{error}</p>}\r\n                    <div className='form_file_container'>\r\n                      <div\r\n                        className='form_file'\r\n                        style={{\r\n                          backgroundImage: `url(${\r\n                            imgFile == null ? defaultAvatar : imgPreview\r\n                          })`,\r\n                          backgroundSize: 'contain',\r\n                          backgroundPosition: 'center center',\r\n                          backgroundColor: color.hex,\r\n                        }}\r\n                      >\r\n                        <input\r\n                          onChange={fileUploadHandler}\r\n                          className='form_file_input'\r\n                          type='file'\r\n                        />\r\n                        {/* <img srsc={imgPreview} /> */}\r\n                      </div>\r\n                      <div className='color_picker_container'>\r\n                        <TwitterPicker\r\n                          color={color}\r\n                          onChangeComplete={colorChangeHandler}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </>\r\n                )}\r\n                <button\r\n                  className='form_actions_btn'\r\n                  type='submit'\r\n                  style={{ width: currentStep == 3 && '52%' }}\r\n                >\r\n                  {currentStep !== 3 ? 'Next' : 'Submit'}\r\n                </button>\r\n                {currentStep !== 1 && (\r\n                  <button\r\n                    type='button'\r\n                    onClick={backStepHandler}\r\n                    className='form_back_btn'\r\n                  >\r\n                    Back\r\n                  </button>\r\n                )}\r\n              </form>\r\n            </>\r\n          )}\r\n          {loading && (\r\n            <div className='new_user__loading'>\r\n              <div className='new_user__spinner' />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewUser;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\n// File Imports\r\nimport './LandingPage.css';\r\n// Package Imports\r\nimport axios from 'axios';\r\nimport { FaAngleRight } from 'react-icons/fa';\r\nimport ReactPlayer from 'react-player/lazy';\r\n// Asset Imports\r\nimport pcScreen from '../../assets/images/computer_screen.png';\r\nimport demoVideo from '../../assets/videos/gameflix-demo.webm';\r\nimport tvScreen from '../../assets/images/retro-tv.png';\r\nimport ff7Cloud from '../../assets/images/ff7-cloud.png';\r\nimport mario from '../../assets/images/mario.png';\r\nimport masterChief from '../../assets/images/master-chief.png';\r\nimport lozLink from '../../assets/images/loz-link.png';\r\nimport spyro from '../../assets/images/spyro.png';\r\nimport sonic from '../../assets/images/sonic.png';\r\nimport logos from '../../assets/images/console-logos.jpg';\r\nimport NewUser from './NewUser/NewUser';\r\n\r\nconst LandingPage = ({ toSignIn, images }) => {\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const [error, setError] = useState(null);\r\n  const [inputFocused, setInputFocused] = useState(false);\r\n  const [creatingNewUser, setCreatingNewUser] = useState(false);\r\n\r\n  const signUpRef = useRef('');\r\n  // Regex for email validity\r\n  const re =\r\n    /^(([^ <>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n  // If there is a value in the input field, leave placeholder above value\r\n  const inputBlurHandler = () => {\r\n    if (signUpRef.current.value !== '') {\r\n      return;\r\n    } else {\r\n      setInputFocused(setInputFocused(false));\r\n    }\r\n  };\r\n\r\n  const toLoginHandler = () => {\r\n    toSignIn();\r\n  };\r\n\r\n  const formSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    const email = signUpRef.current.value.toLowerCase().trim();\r\n    if (email == '') {\r\n      setError('Please enter a valid email.');\r\n      return;\r\n    }\r\n    axios\r\n      .post(`${baseURL}/authentication/email_verification`, { email })\r\n      .then((response) => {\r\n        setCreatingNewUser(true);\r\n        setInputFocused(false);\r\n      })\r\n      .catch((e) => {\r\n        setError(e.response.data.message);\r\n        signUpRef.current.blur();\r\n      });\r\n\r\n    // signUpRef.current.value = '';\r\n  };\r\n\r\n  const toWelcomeScreen = (email, password) => {\r\n    // .loginAuthentication(email, password);\r\n    // toSignIn();\r\n  };\r\n\r\n  const inputFocusHandler = () => {\r\n    setInputFocused(true);\r\n    if (error) {\r\n      signUpRef.current.value = '';\r\n      setError(null);\r\n    }\r\n  };\r\n\r\n  if (creatingNewUser && !error) {\r\n    return (\r\n      <NewUser\r\n        toWelcomeScreen={toWelcomeScreen}\r\n        email={signUpRef.current?.value}\r\n        returnToLanding={() => setCreatingNewUser(false)}\r\n        toLoginHandler={toLoginHandler}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='landing_page'>\r\n      {/* BANNER */}\r\n      <div className='landing_banner'>\r\n        <div className='landing_banner__fade_top' />\r\n        <div className='landing_nav'>\r\n          <div className='nav_left'>\r\n            <h3 className='nav_badge'>GAMEFLIX</h3>\r\n          </div>\r\n          <div className='nav_right'>\r\n            <button className='sign_in_btn' onClick={toLoginHandler}>\r\n              Sign In\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className='landing_banner__content'>\r\n          <h1>\r\n            Looking for a big title, a taste of nostalgia, or a hidden gem?\r\n          </h1>\r\n          <h3>Watch trailers. Listen to OSTs.</h3>\r\n          <p>\r\n            Discover your favorites plus thousands more! Enter your email to get\r\n            started.\r\n          </p>\r\n          <form className='landing__form' onSubmit={formSubmitHandler}>\r\n            <input\r\n              type='email'\r\n              className={`landing__email ${error && 'email_error'}`}\r\n              ref={signUpRef}\r\n              onFocus={inputFocusHandler}\r\n              onBlur={inputBlurHandler}\r\n            />\r\n            <span\r\n              className={`email_placeholder ${inputFocused && 'email_focused'}`}\r\n            >\r\n              Email address\r\n            </span>\r\n            {error && <p className='sign_up_error'>{error}</p>}\r\n            <button>\r\n              Get Started <FaAngleRight className='btn_arrow' />\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className='landing_banner__background'>\r\n          {images.map((game) => (\r\n            <React.Fragment key={game.key}>\r\n              <img\r\n                className='landing_banner__img'\r\n                src={game.props.children.props.src}\r\n              />\r\n            </React.Fragment>\r\n          ))}\r\n        </div>\r\n        <div className='landing_banner__fade_bottom' />\r\n      </div>\r\n      {/* DEMO */}\r\n      <div className='landing__demo'>\r\n        <div className='demo_left'>\r\n          <h1 className='demo_left_title'>Endless Choices</h1>\r\n          <p className='demo_left_description'>\r\n            Endless titles. Endless hours. Endless oppurtunities.\r\n          </p>\r\n        </div>\r\n        <div className='demo_right'>\r\n          <div className='demo_video_container'>\r\n            <ReactPlayer\r\n              url={demoVideo}\r\n              className='demo_video'\r\n              playing={true}\r\n              muted={true}\r\n              loop={true}\r\n            />\r\n          </div>\r\n          <img src={pcScreen} className='demo_pc_img' />\r\n        </div>\r\n      </div>\r\n      {/* RETRO */}\r\n      <div className='landing__information'>\r\n        <div className='information_left'>\r\n          <img src={tvScreen} className='information_tv_img' />\r\n          <div className='information_characters'>\r\n            <img className='chief-img' src={masterChief} />\r\n            <img className='cloud-img' src={ff7Cloud} />\r\n            <img className='mario-img' src={mario} />\r\n            <img className='link-img' src={lozLink} />\r\n            <img className='spyro-img' src={spyro} />\r\n            <img className='sonic-img' src={sonic} />\r\n          </div>\r\n        </div>\r\n        <div className='information_right'>\r\n          <h1 className='information_right_title'>\r\n            Reexperience your Childhood\r\n          </h1>\r\n          <p className='information_right_description'>\r\n            Rediscover lost loves and relive your nostalgic glory days.\r\n          </p>\r\n        </div>\r\n      </div>\r\n      {/* PROFILE */}\r\n      <div className='landing__profiles'>\r\n        <div className='profiles__left'>\r\n          <h1 className='profiles__left_title'>Gaming your Way</h1>\r\n          <p className='profiles__left_description'>\r\n            Discover multiple games from your favorite genres, publishers, or\r\n            consoles.\r\n          </p>\r\n        </div>\r\n        <div className='profiles__right'>\r\n          <img\r\n            className='profiles__logo_collection'\r\n            src={logos}\r\n            alt='a collection of different video game console logos'\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Login from '../Login/Login';\r\nimport './Authentication.css';\r\nimport axios from 'axios';\r\nimport LandingPage from '../LandingPage/LandingPage';\r\nimport useFetchPopular from '../../hooks/useFetchPopular';\r\n\r\nconst Authentication = ({ loading, twitchToken, onLogin }) => {\r\n  const allGames = useFetchPopular();\r\n  const [imgsLoading, setImgsLoading] = useState(true);\r\n  const [toLandingPage, setToLandingPage] = useState(false);\r\n  const [authError, setAuthError] = useState('');\r\n  const userLoggedIn = localStorage.getItem('user');\r\n  const navigate = useNavigate();\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const counter = useRef(0);\r\n\r\n  useEffect(() => {\r\n    if (userLoggedIn) navigate('/');\r\n  }, []);\r\n\r\n  const imageLoaded = () => {\r\n    counter.current += 1;\r\n    if (counter.current >= allGames.length) {\r\n      setImgsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadedImages = allGames?.map((game) => (\r\n    <React.Fragment key={game.id}>\r\n      <img\r\n        className='login__img'\r\n        src={`//images.igdb.com/igdb/image/upload/t_cover_big_2x/${game.cover.image_id}.jpg`}\r\n        onLoad={imageLoaded}\r\n      />\r\n    </React.Fragment>\r\n  ));\r\n\r\n  const authenticateUser = async (email, password) => {\r\n    try {\r\n      const response = await axios.post(`${baseURL}/authentication/signin`, {\r\n        email,\r\n        password,\r\n      });\r\n      setAuthError('');\r\n      onLogin(response.data.user);\r\n      return response;\r\n    } catch (e) {\r\n      setAuthError(e.response.data.message);\r\n      return e.response.data.message;\r\n    }\r\n  };\r\n\r\n  if (loadedImages.length > 0 && !userLoggedIn) {\r\n    if (!toLandingPage)\r\n      return (\r\n        <Login\r\n          images={loadedImages}\r\n          toLanding={() => setToLandingPage(true)}\r\n          authenticateUser={(email, password) =>\r\n            authenticateUser(email, password)\r\n          }\r\n        />\r\n      );\r\n\r\n    return (\r\n      <LandingPage\r\n        toSignIn={() => {\r\n          setToLandingPage(false);\r\n        }}\r\n        images={loadedImages}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <div className='auth_login__loading'>\r\n        <div className='auth_loading_spinner' />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Authentication;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function useFetchPopular() {\r\n  const existingToken = localStorage.getItem('twitch_auth');\r\n  const [bannerGamesList, setBannerGamesList] = useState([]);\r\n  const baseURL = process.env.REACT_APP_BASE_URL;\r\n  const currentDate = new Date();\r\n\r\n  useEffect(() => {\r\n    const fetchPopularGames = async () => {\r\n      const request = await axios.get(`${baseURL}/authentication/login_banner`);\r\n      const last_updated = new Date(request.data.last_updated);\r\n\r\n      // If a week has passed since the last update, run a new update\r\n      if (currentDate > last_updated.setDate(last_updated.getDate() + 7)) {\r\n        return updatePopularGamesAPI();\r\n      } else {\r\n        return setBannerGamesList(request.data.popular_games_list);\r\n      }\r\n    };\r\n    fetchPopularGames();\r\n\r\n    const updatePopularGamesAPI = async () => {\r\n      if (!existingToken) return;\r\n      try {\r\n        const request = await axios.post(`${baseURL}/app/popular_titles`, {\r\n          token: existingToken,\r\n        });\r\n        return updateCollection(request.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n        return err;\r\n      }\r\n    };\r\n  }, [existingToken]);\r\n\r\n  const updateCollection = async (list) => {\r\n    const request = await axios.post(\r\n      `${baseURL}/authentication/update_login_banner`,\r\n      {\r\n        gameList: list,\r\n        date: new Date(),\r\n      }\r\n    );\r\n\r\n    setBannerGamesList(request.data.popular_games_list);\r\n  };\r\n\r\n  return bannerGamesList;\r\n}\r\n"],"names":["toLanding","authenticateUser","images","useState","hasEmailError","setHasEmailError","hasPasswordError","setHasPasswordError","currentFocus","setCurrentFocus","authError","setAuthError","loading","setLoading","emailRef","useRef","passwordRef","re","formSubmitHandler","e","preventDefault","email","current","value","password","blur","response","console","log","data","className","onSubmit","htmlFor","ref","onFocus","onChange","target","trim","toLowerCase","test","onBlur","isValidEmail","type","length","isValidPassword","undefined","onClick","map","game","alt","name","src","props","children","key","currentStep","setCurrentStep","error","setError","color","setColor","stepOneData","setStepOneData","stepTwoData","setStepTwoData","firstNameRef","lastNameRef","imgFile","setImgFile","imgPreview","setImgPreview","useEffect","focus","includes","firstName","lastName","formData","FormData","append","hex","defaultAvatar","axios","process","then","catch","message","result","split","localStorage","setItem","window","location","reload","returnToLanding","toLoginHandler","style","alignItems","encType","defaultValue","backgroundImage","backgroundSize","backgroundPosition","backgroundColor","URL","createObjectURL","files","onChangeComplete","width","toSignIn","inputFocused","setInputFocused","creatingNewUser","setCreatingNewUser","signUpRef","toWelcomeScreen","url","demoVideo","playing","muted","loop","pcScreen","tvScreen","masterChief","ff7Cloud","mario","lozLink","spyro","sonic","twitchToken","onLogin","allGames","existingToken","getItem","bannerGamesList","setBannerGamesList","baseURL","currentDate","Date","fetchPopularGames","request","last_updated","setDate","getDate","updatePopularGamesAPI","popular_games_list","token","updateCollection","list","gameList","date","useFetchPopular","setImgsLoading","toLandingPage","setToLandingPage","userLoggedIn","navigate","useNavigate","counter","imageLoaded","loadedImages","cover","image_id","onLoad","id","user"],"sourceRoot":""}